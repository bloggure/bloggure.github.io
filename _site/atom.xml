<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>The blog of Bloggure</title>
 <link href="http://bloggure.info/atom.xml" rel="self"/>
 <link href="http://bloggure.info"/>
 <updated>2013-09-03T20:27:24+02:00</updated>
 <id>http://bloggure.info</id>
 <author>
   <name>Bloggure</name>
   <email>contact@bloggure.info</email>
 </author>

 
 <entry>
   <title>Merge properties maven plugin</title>
   <link href="http://bloggure.info/.maven/2013/08/31/maven-merge-properties-plugin.html"/>
   <updated>2013-08-31T00:00:00+02:00</updated>
   <id>http://bloggure.info/.maven/2013/08/31/maven-merge-properties-plugin</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-medium wp-image-74&quot; alt=&quot;Maven&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/Maven_logo1-300x76.gif&quot; width=&quot;300&quot; height=&quot;76&quot; /&gt;At &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt;, we develop with localization in mind. We don&#39;t have any user visible text that is not in fact tied to a java property file. Quickly, the problem that we faced was the difficulty to keep every language file in sync (and to tidy things up). We developed a small Maven plugin allowing us to ensure that our two main problems are now gone : &lt;a href=&quot;https://github.com/code-troopers/merge-properties-maven-plugin&quot;&gt;merge-properties-maven-plugin&lt;/a&gt;.
&lt;h2&gt;Quick example&lt;/h2&gt;
I think the easiest way to understand how it works is to explain it with a real use case. Let&#39;s say we have a module named &lt;em&gt;Zones&lt;/em&gt; in our application, it will lead to create four files (if we are localized in two different languages) :
&lt;ul&gt;
	&lt;li&gt;&lt;span style=&quot;line-height: 15px;&quot;&gt;l10n/Zones_en.properties&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;l10n/Zones_fr.properties&lt;/li&gt;
	&lt;li&gt;help/Zones_en.properties&lt;/li&gt;
	&lt;li&gt;help/Zones_fr.properties&lt;/li&gt;
&lt;/ul&gt;
As you might have guessed, we have got two different categories of target files, one for the application&#39;s localization, and the other one for the application&#39;s help. There is only one rule when it comes to filling these files, the property keys must begin with the name of the file, otherwise the build would fail. In this example, every key must begin with the prefix &quot;&lt;tt&gt;Zones.&quot;.&lt;/tt&gt;

At the end, we want to get two resource bundles, so we set up the build to do so :

&lt;script src=&quot;https://gist.github.com/6397201.js?file=pom.xml&quot;&gt; &lt;/script&gt;

By reading this configuration section you can view almost every single option available in the plugin. You can exclude files from automatic key checking : in the example the files Global_*.properties will not be checked. It allows us to group commonly used keys without needing them to begin with the correct prefix (it also eases migration for legacy code, breaking the build would be too intrusive).

You can also notice that we use a Maven property to enable the fail on count mismatch functionality of the plugin, with the help of Maven profiles, we can set it to false for development and to true for continuous integration and translation team. When this configuration is used you will get an output like the following in your Maven build :

&lt;script src=&quot;https://gist.github.com/6397201.js?file=maven.log&quot;&gt; &lt;/script&gt;

If the build should check consistency in merged files and if it does not match, it will output blank keys as well as lonely keys in order for your translator to fix it easily.
&lt;h2&gt;Bonus feature&lt;/h2&gt;
We use Java&#39;s MessageFormat to format our translated string, one of the thing we tend to forget is to escape the single quotes in our translations. The plugin does this magic for us, it automatically adds the missing single quotes in every messages.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Sample post</title>
   <link href="http://bloggure.info/blog/2013/08/20/sample-post.html"/>
   <updated>2013-08-20T00:00:00+02:00</updated>
   <id>http://bloggure.info/blog/2013/08/20/sample-post</id>
   <content type="html">&lt;p&gt;Tattooed roof party &lt;em&gt;vinyl&lt;/em&gt; freegan single-origin coffee wayfarers tousled, umami yr meggings hella selvage. Butcher bespoke seitan, cornhole umami gentrify put a bird on it occupy trust fund. Umami whatever kitsch, locavore fingerstache Tumblr pork belly &lt;a href=&#39;#&#39;&gt;keffiyeh&lt;/a&gt;. Chia Echo Park Pitchfork, Blue Bottle &lt;a href=&#39;#&#39;&gt;hashtag&lt;/a&gt; stumptown skateboard selvage mixtape. Echo Park retro butcher banjo cardigan, seitan flannel Brooklyn paleo fixie Truffaut. Forage mustache Thundercats next level disrupt. Bicycle rights forage tattooed chia, &lt;strong&gt;wayfarers&lt;/strong&gt; swag raw denim hashtag biodiesel occupy gastropub!&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#39;its_all_in_the_game&#39;&gt;It&amp;#8217;s all in the game.&lt;/h1&gt;

&lt;h2 id=&#39;you_come_at_the_king_you_best_not_miss&#39;&gt;You come at the king, you best not miss.&lt;/h2&gt;

&lt;h3 id=&#39;be_subtle_with_it_man_you_know_what_subtle_means&#39;&gt;Be subtle with it, man. You know what subtle means?&lt;/h3&gt;

&lt;p&gt;VHS post-ironic cred &lt;strong&gt;bespoke&lt;/strong&gt; banjo. Yr wayfarers literally gentrify, flexitarian fap dreamcatcher plaid cornhole Intelligentsia paleo. Beard try-hard direct trade, shabby chic Helvetica &lt;code&gt;look ma, I can code&lt;/code&gt;. Lo-fi American Apparel tattooed &lt;a href=&#39;#&#39;&gt;Vice&lt;/a&gt; tofu, yr vinyl. Williamsburg butcher hella mumblecore fixie mlkshk, cliche wolf keytar mixtape kitsch banh mi salvia. High Life Odd Future &lt;em&gt;chambray&lt;/em&gt; kale chips hoodie, cray pop-up. Helvetica narwhal iPhone try-hard jean shorts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a quote from someone famous about productivity&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Syntax highlighting with Solarized theme.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;k&#39;&gt;class&lt;/span&gt; &lt;span class=&#39;nc&#39;&gt;User&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#39;ss&#39;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt;&lt;span class=&#39;ss&#39;&gt;:Base&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;attr_accessible&lt;/span&gt; &lt;span class=&#39;ss&#39;&gt;:email&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;ss&#39;&gt;:name&lt;/span&gt;

  &lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;tons&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;of&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;other&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;crap&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Another sample</title>
   <link href="http://bloggure.info/blog/2013/08/12/another-sample.html"/>
   <updated>2013-08-12T00:00:00+02:00</updated>
   <id>http://bloggure.info/blog/2013/08/12/another-sample</id>
   <content type="html">&lt;p&gt;Tattooed roof party &lt;em&gt;vinyl&lt;/em&gt; freegan single-origin coffee wayfarers tousled, umami yr meggings hella selvage. Butcher bespoke seitan, cornhole umami gentrify put a bird on it occupy trust fund. Umami whatever kitsch, locavore fingerstache Tumblr pork belly &lt;a href=&#39;#&#39;&gt;keffiyeh&lt;/a&gt;. Chia Echo Park Pitchfork, Blue Bottle &lt;a href=&#39;#&#39;&gt;hashtag&lt;/a&gt; stumptown skateboard selvage mixtape. Echo Park retro butcher banjo cardigan, seitan flannel Brooklyn paleo fixie Truffaut. Forage mustache Thundercats next level disrupt. Bicycle rights forage tattooed chia, &lt;strong&gt;wayfarers&lt;/strong&gt; swag raw denim hashtag biodiesel occupy gastropub!&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id=&#39;its_all_in_the_game&#39;&gt;It&amp;#8217;s all in the game.&lt;/h1&gt;

&lt;h2 id=&#39;you_come_at_the_king_you_best_not_miss&#39;&gt;You come at the king, you best not miss.&lt;/h2&gt;

&lt;h3 id=&#39;be_subtle_with_it_man_you_know_what_subtle_means&#39;&gt;Be subtle with it, man. You know what subtle means?&lt;/h3&gt;

&lt;p&gt;VHS post-ironic cred &lt;strong&gt;bespoke&lt;/strong&gt; banjo. Yr wayfarers literally gentrify, flexitarian fap dreamcatcher plaid cornhole Intelligentsia paleo. Beard try-hard direct trade, shabby chic Helvetica &lt;code&gt;look ma, I can code&lt;/code&gt;. Lo-fi American Apparel tattooed &lt;a href=&#39;#&#39;&gt;Vice&lt;/a&gt; tofu, yr vinyl. Williamsburg butcher hella mumblecore fixie mlkshk, cliche wolf keytar mixtape kitsch banh mi salvia. High Life Odd Future &lt;em&gt;chambray&lt;/em&gt; kale chips hoodie, cray pop-up. Helvetica narwhal iPhone try-hard jean shorts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a quote from someone famous about productivity&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Syntax highlighting with Solarized theme.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;k&#39;&gt;class&lt;/span&gt; &lt;span class=&#39;nc&#39;&gt;User&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#39;ss&#39;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt;&lt;span class=&#39;ss&#39;&gt;:Base&lt;/span&gt;
  &lt;span class=&#39;n&#39;&gt;attr_accessible&lt;/span&gt; &lt;span class=&#39;ss&#39;&gt;:email&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;ss&#39;&gt;:name&lt;/span&gt;

  &lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;tons&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;of&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;other&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;crap&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;

&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Play Framework and i18n in views</title>
   <link href="http://bloggure.info/work/2013/07/25/play-framework-and-i18n-in-views.html"/>
   <updated>2013-07-25T00:00:00+02:00</updated>
   <id>http://bloggure.info/work/2013/07/25/play-framework-and-i18n-in-views</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-full wp-image-916&quot; alt=&quot;playlogo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/07/playlogo.png&quot; width=&quot;150&quot; height=&quot;50&quot; /&gt;

I was having a strange issue with localization in a Play Framework application. I followed the &lt;a href=&quot;http://www.playframework.com/documentation/2.0/ScalaI18N&quot;&gt;simple steps&lt;/a&gt; detailed on the official documentation but with no luck.

When experimenting, I figured out that the locale used is the default locale of the JVM. In my case, my default locale is French so I only had French in my application. But on Heroku, the default locale is English and thus the application was only working in English.

The trick consists in adding an implicit lang to your template views. In fact, Scala import an implicit lang with the lowest priority being the one coming from the JVM, if you want to get the language parsed from the Accept-Languages http header, you need to add an implicit as below :
&lt;pre class=&quot;brush: scala&quot;&gt;@(title: String)(content: Html)(implicit lang: Lang)&lt;/pre&gt;
With this little trick, your calls to localization will use the locale extracted from the http request as expected.&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img class=&quot;alignright size-full wp-image-916&quot; alt=&quot;playlogo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/07/playlogo.png&quot; width=&quot;150&quot; height=&quot;50&quot; /&gt;

I was having a strange issue with localization in a Play Framework application. I followed the &lt;a href=&quot;http://www.playframework.com/documentation/2.0/ScalaI18N&quot;&gt;simple steps&lt;/a&gt; detailed on the official documentation but with no luck.

When experimenting, I figured out that the locale used is the default locale of the JVM. In my case, my default locale is French so I only had French in my application. But on Heroku, the default locale is English and thus the application was only working in English.

The trick consists in adding an implicit lang to your template views. In fact, Scala import an implicit lang with the lowest priority being the one coming from the JVM, if you want to get the language parsed from the Accept-Languages http header, you need to add an implicit as below :
&lt;pre class=&quot;brush: scala&quot;&gt;@(title: String)(content: Html)(implicit lang: Lang)&lt;/pre&gt;
With this little trick, your calls to localization will use the locale extracted from the http request as expected.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Play application on Centos/RedHat in production mode</title>
   <link href="http://bloggure.info/.java/.scala/.shell/ci/shelf/2013/07/25/centos-redhat-play-application-production-mode.html"/>
   <updated>2013-07-25T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/.scala/.shell/ci/shelf/2013/07/25/centos-redhat-play-application-production-mode</id>
   <content type="html">&lt;!--:fr--&gt;&lt;p&gt;&lt;strong&gt;tl;dr &lt;/strong&gt;: application &lt;a title=&quot;play&quot; href=&quot;http://www.playframework.com/&quot;&gt;Play&lt;/a&gt; (java ou &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;scala&lt;/a&gt;) sur un serveur &lt;a href=&quot;http://www.centos.org/&quot;&gt;Centos&lt;/a&gt; (ou &lt;a href=&quot;http://fr.wikipedia.org/wiki/Red_Hat_Linux&quot;&gt;Red Hat&lt;/a&gt;) derrière un serveur &lt;a title=&quot;nginx&quot; href=&quot;http://nginx.org/&quot;&gt;nginx&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;Script de démarrage/arrêt du daemon.&lt;/h2&gt;&lt;p&gt;Lancer une application Play en dev est assez aisé : &lt;code&gt;$ play run&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Maintenant, si vous avez besoin de déployer votre application en production, il est plus confortable de considérer votre application comme un service à part entière du système. Il se peut aussi que vous ayez besoin de spécifier un port et une interface particulière pour pouvoir utiliser nginx comme front-end (en &lt;a href=&quot;http://fr.wikipedia.org/wiki/Proxy_inverse&quot;&gt;reverse proxy&lt;/a&gt;). Et évidement, à l&#39;instar d&#39;un environnement de développement, vous pourriez avoir besoin de compresser le JS et le CSS, et également de régler finement les en-têtes HTTP pour gérer correctement le cache.&lt;/p&gt;&lt;p&gt;Tout d&#39;abord le script de lancement du daemon :&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/tdebarochez/6082933.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Je me suis inspiré des deux gists ci-dessous. Le premier, pour RedHat, utilise le binaire de play pour lancer le processus principal. Cette méthode facile à utiliser en développement semble assez limité en paramètre (tout du moins, très peu documentée). La seconde méthode, pour &lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt;, donne un bonne exemple d&#39;une configuration un peu plus élaborée de l&#39;exécution du daemon. Les paramètres en début de fichier parlent d&#39;eux-mêmes, je vous laisse les découvrir et reste à votre disposition pour toute question.&lt;/p&gt;&lt;p&gt;Source :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/THemming/2173037&quot;&gt;https://gist.github.com/THemming/2173037&lt;/a&gt; (script pour redhat)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/leon/2204773&quot;&gt;https://gist.github.com/leon/2204773&lt;/a&gt; (script pour debian)&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Configuration de nginx&lt;/h2&gt;&lt;p&gt;Sur un serveur web, il est souvent pratique de pouvoir faire tourner plusieurs applications utilisant des langages, des librairies, des frameworks, etc... hétérogènes (sur mon serveur, il y a l&#39;application Play en scala, une application &lt;a href=&quot;http://nodejs.org/&quot;&gt;Nodejs&lt;/a&gt; en &lt;a href=&quot;http://coffeescript.org/&quot;&gt;Coffescript&lt;/a&gt; et une application &lt;a href=&quot;http://php.net&quot;&gt;PHP&lt;/a&gt;/&lt;a href=&quot;http://www.mysql.fr/&quot;&gt;MySQL&lt;/a&gt; utilisant &lt;a href=&quot;http://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt;). C&#39;est là que nginx intervient. Configuré en reverse-proxy, c&#39;est lui qui écoutera sur le port 80 de votre serveur et en fonction du nom de domaine relayera les requêtes HTTP à l&#39;application que vous avez choisis. Il vous suffit de configurer votre application en écoute sur un port libre en localhost et d&#39;indiquer à nginx qu&#39;en fonction du nom de domaine (à la manière des VirtualHost d&#39;Apache), il doit transmettre ses requêtes sur ce port.&lt;/p&gt;&lt;p&gt;Vous noterez une section fournissant un traitement particulier pour les fichiers statiques (js, css, png, jpg, etc...). En effet, je ne trouvais pas la configuration par défaut de play très satisfaisante pour diffuser ces fichiers. Il conviendra donc de copier tous les fichiers dans un dossier particulier au lancement de l&#39;application (il faut également pensé à y placer les fichiers &quot;compilé&quot; des scripts utilisant un pre-processeurs : coffeescript, &lt;a href=&quot;http://sass-lang.com&quot;&gt;SASS/SCSS&lt;/a&gt;, &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt;, etc...). Tous les fichiers dans ce dossier auront une durée de cache maximale afin de minimiser le nombre de requêtes au serveur (la requête la plus rapide est celle qui n&#39;est pas faite). Cette technique a aussi l&#39;avantage de décharger la JVM du traitement de ses fichiers, ils sont directement retourné par nginx.&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/tdebarochez/6083089.js&quot;&gt;&lt;/script&gt;
&lt;h2&gt;Compilation des fichiers statiques&lt;/h2&gt;&lt;p&gt;Les pré-processeurs (Coffeescript, SASS, LESS, etc...) sont d&#39;un grand confort pour le développement de la partie front-end d&#39;une application web. Toutefois, il y a quelques détails qui ne faut pas négliger afin d&#39;optimiser au maximum la distribution en HTTP de ces fichiers.&lt;/p&gt;&lt;p&gt;Prenons comme exemple un fichier .coffee (Coffeescript). Lorsqu&#39;en développement vous lancer votre serveur, play se charge de re-compiler automatiquement le fichier afin de desservir un fichier javascript au navigateur qui a demandé le fichier. Dans notre environnement, les fichiers statiques se trouvent tous dans un dossier &lt;code&gt;static/&lt;/code&gt;. Il faut donc &quot;traduire&quot; ce fichier en javascript et le placer dans ce dossier (en respectant l&#39;arborescence utilisée en développement) : &lt;code&gt;coffee -o static/javascripts/ -c app/assets/javascripts/*.coffee&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Ensuite, comme optimisation souvent préconnisée, il convient de &quot;minifier&quot; ces fichiers afin qu&#39;ils soient le plus léger possible pendant le transport sur le réseau (qui peut-être une faible connexion 3g). Dans mon cas, j&#39;ai utilisé &lt;a href=&quot;https://github.com/yui/yuicompressor&quot;&gt;&lt;code&gt;yuicompressor&lt;/code&gt;&lt;/a&gt; qui fonctionne bien. Il en existe certainement des mieux, je n&#39;ai pas testé, mais celui-là fonctionne comme je veux.&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/tdebarochez/6083307.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Note : comme amélioration possible, il faudrait dans cette partie là renommer les fichiers par un nom de fichier contenant un hash représentant le contenu de ce fichier afin de palier à tout problème d&#39;invalidation du cache.&lt;/p&gt;&lt;h2&gt;Dans le futur&lt;/h2&gt;&lt;p&gt;Pour parfaire le déploiement de l&#39;application, sur un VCS &lt;a href=&quot;http://git-scm.com/&quot;&gt;git&lt;/a&gt; par exemple, il serait pratique d&#39;automatiser le redémarrage du serveur sur un hook post-commit. Pour éviter également une coupure de service, il faudrait également, lancer la nouvelle application sur un autre port et switcher sur la nouvelle instance uniquement avec un reload de nginx. Mais bon tout ça peut faire l&#39;objet d&#39;un autre article. :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mise à jour du 29 juillet 2013&lt;/strong&gt; : correction du script de lancement du daemon.&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Heroku Play ! Scala Compass Buildpack</title>
   <link href="http://bloggure.info/.java/work/2013/07/08/heroku-play-scala-compass-buildpack.html"/>
   <updated>2013-07-08T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/work/2013/07/08/heroku-play-scala-compass-buildpack</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;size-thumbnail wp-image-758 alignright&quot; alt=&quot;MBP Keyboard&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/12/IMG_20121222_000541-150x150.jpg&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;I am actually working on a little side project with my friend &lt;a href=&quot;http://www.bloggure.info/author/tdebarochez&quot;&gt;Thomas Debarochez&lt;/a&gt;. We are using &lt;a href=&quot;http://www.playframework.com/&quot;&gt;Play!Framework&lt;/a&gt; and &lt;a href=&quot;http://compass-style.org/&quot;&gt;Compass&lt;/a&gt; and we deploy it to &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;.

One issue that came when we first deployed the application with Compass to Heroku was that the default scala buildpack does not include sass and compass binaries.

Following &lt;a href=&quot;https://groups.google.com/forum/#!topic/play-framework/fzGj5RqW-l8&quot;&gt;this post&lt;/a&gt; on the Play!Framework mailing list, I forked and patched the &lt;a href=&quot;https://github.com/heroku/heroku-buildpack-scala&quot;&gt;buildpack&lt;/a&gt; to install sass and compass on the environment.

You can find it here and use it with the following command :
&lt;pre class=&quot;brush:bash&quot;&gt;heroku config:set BUILDPACK_URL=https://github.com/CedricGatay/heroku-buildpack-scala&lt;/pre&gt;
I hope someone will find this useful !&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Wicket Routes Mount</title>
   <link href="http://bloggure.info/.wicket/2013/05/20/wicket-routes-mount.html"/>
   <updated>2013-05-20T00:00:00+02:00</updated>
   <id>http://bloggure.info/.wicket/2013/05/20/wicket-routes-mount</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-thumbnail wp-image-90&quot; alt=&quot;Wicket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/logo-wicket1-150x150.png&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;

At &lt;a href=&quot;http://code-troopers.com&quot;&gt;Code-Troopers&lt;/a&gt;, we like to work with the frameworks we love. One of them is &lt;a href=&quot;http://wicket.apache.org&quot;&gt;Apache Wicket&lt;/a&gt;, and it happens to some of us doing some &lt;a href=&quot;http://www.playframework.com/&quot;&gt;Play! Framework&lt;/a&gt; or &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt; (either for a client project, a side project or giving back OSS love).

One thing really great is this two frameworks is the central route system, one file allows to group all the routes handled by your application. Wicket does not provide such way of grouping routes, you can manually mount routes into your application or annotate your page classes.
&lt;h2&gt;Wicket routes mount library&lt;/h2&gt;
&lt;a href=&quot;https://github.com/code-troopers/wicket-routes-mount&quot;&gt;This small library project available on Github&lt;/a&gt; allows to group mounts into a central file. To use it, simply add its dependency to your &lt;code&gt;pom.xml&lt;/code&gt; (artifact is available on Maven central):
&lt;pre class=&quot;&amp;quot;brush:xml&quot;&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.code-troopers&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;wicket-route-mount&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.1&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/pre&gt;
&lt;em&gt;
This dependency will transitively gets &lt;code&gt;wicket-auth-roles&lt;/code&gt; (if there is a special need for a version without this dependency, it could be done easily).
&lt;/em&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
To use it, simply create a &lt;code&gt;routes.conf&lt;/code&gt; file at the root of the sources in your project (typically &lt;code&gt;src/main/resources/&lt;/code&gt;) respecting the following format :
&lt;pre&gt;# mountPoint        class                           roles
/home               codetroopers.HomePage           
/secured            codetroopers.SecuredPage        USER
/user/${mode}/#{id} codetroopers.UserPage           ADMIN,USER&lt;/pre&gt;
The files content is the following :
&lt;ul&gt;
	&lt;li&gt;Mount path : using standard Wicket syntax (&lt;code&gt;${requiredParam}&lt;/code&gt; and &lt;code&gt;#{optionalParam}&lt;/code&gt; are available)&lt;/li&gt;
	&lt;li&gt;Page class : fully qualified name of the page class to mount&lt;/li&gt;
	&lt;li&gt;Roles (optional) : comma separated list of roles required to access the page&lt;/li&gt;
&lt;/ul&gt;
&lt;em&gt;IntelliJ IDEA can do completion for class names in this file (you just need to hit the &lt;code&gt;ctrl+space&lt;/code&gt; shortcut twice)&lt;/em&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>DuckDuckGo in Thunderbird</title>
   <link href="http://bloggure.info/www/2013/03/24/duckduckgo-in-thunderbird.html"/>
   <updated>2013-03-24T00:00:00+01:00</updated>
   <id>http://bloggure.info/www/2013/03/24/duckduckgo-in-thunderbird</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/logo_homepage.normal.v102.png&quot;&gt;&lt;img class=&quot;alignright size-thumbnail wp-image-890&quot; alt=&quot;Logo DuckDuckGo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/logo_homepage.normal.v102-150x150.png&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;&lt;/a&gt;Mozilla added a function to search on the web in the latest versions of Thunderbird.That&#39;s nice, but the default search engine is bing. As a DuckDuckGo user, I wanted to add my favourite search engine and use it by default. So here&#39;s how to do it.
&lt;ol&gt;
	&lt;li&gt;&lt;a title=&quot;Find your Thunderbird profile folder&quot; href=&quot;http://kb.mozillazine.org/Profile_folder_-_Thunderbird&quot;&gt;Find your profile folder&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;In it, create a folder named &quot;searchplugins&quot; (without the quotes) if it doesn&#39;t exists.&lt;/li&gt;
	&lt;li&gt;Save &lt;a title=&quot;DuckDuckGo search plugin&quot; href=&quot;http://www.fribourg-est-independant.org/fonji/ddg.xml&quot;&gt;this xml&lt;/a&gt; file in it.&lt;/li&gt;
	&lt;li&gt;(Re)start Thunderbird.&lt;/li&gt;
	&lt;li&gt;Select some text in any mail, right clic and search with bing (sorry).&lt;/li&gt;
	&lt;li&gt;Click the DuckDuckGo icon on the left.&lt;/li&gt;
	&lt;li&gt;Click the heart icon on the bottom left.&lt;/li&gt;
	&lt;li&gt;That&#39;s all!&lt;/li&gt;
&lt;/ol&gt;
To add google, add &lt;a href=&quot;http://bwinton.latte.ca/Work/google.xml&quot;&gt;this file&lt;/a&gt; in the same folder.&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/logo_homepage.normal.v102.png&quot;&gt;&lt;img class=&quot;alignright size-thumbnail wp-image-890&quot; alt=&quot;Logo DuckDuckGo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/logo_homepage.normal.v102-150x150.png&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;&lt;/a&gt;Mozilla a ajouté une fonction de recherche sur internet dans les dernières versions de Thunderbird. C&#39;est très utile, mais le moteur par défaut est bing et, en tant qu&#39;utilisateur de DuckDuckGo, j&#39;ai voulu changer ceci pour mettre mon moteur favori à la place. Voici comment procéder :
&lt;ol&gt;
	&lt;li&gt;&lt;a title=&quot;Trouver votre profil thunderbird&quot; href=&quot;https://support.mozillamessaging.com/fr/kb/profil-utilisateur#w_oai-mon-profil-est-il-stockae&quot;&gt;Trouvez le répertoire de votre profil.&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Créez un répertoire &quot;searchplugins&quot; (sans guillemets) s&#39;il n&#39;existe pas déjà.&lt;/li&gt;
	&lt;li&gt;Sauvegardez &lt;a title=&quot;DuckDuckGo search plugin&quot; href=&quot;http://www.fribourg-est-independant.org/fonji/ddg.xml&quot;&gt;ce fichier xml&lt;/a&gt; dans searchplugins.&lt;/li&gt;
	&lt;li&gt;(Re)démarrez Thunderbird.&lt;/li&gt;
	&lt;li&gt;Selectionnez du texte dans un email, faites un clic droit puis &quot;rechercher avec bing&quot; (désolé).&lt;/li&gt;
	&lt;li&gt;Cliquez l&#39;icône DuckDuckGo sur la gauche.&lt;/li&gt;
	&lt;li&gt;Cliquez sur le cœur dans le coin en bas à gauche.&lt;/li&gt;
	&lt;li&gt;C&#39;est tout !&lt;/li&gt;
&lt;/ol&gt;
Pour utiliser google, ajoutez &lt;a href=&quot;http://bwinton.latte.ca/Work/google.xml&quot;&gt;ce fichier&lt;/a&gt; dans le même répertoire.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Alfred.app Glassfish workflow</title>
   <link href="http://bloggure.info/.java/2013/03/19/alfred-glassfish-workflow.html"/>
   <updated>2013-03-19T00:00:00+01:00</updated>
   <id>http://bloggure.info/.java/2013/03/19/alfred-glassfish-workflow</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;size-thumbnail wp-image-879 alignright&quot; alt=&quot;alfred-icon&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/alfred-icon-150x150.jpg&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;I recently bought the &lt;a href=&quot;http://www.alfredapp.com/&quot;&gt;Alfred.app&lt;/a&gt; Powerpack. It is byfar the best application launcher / automation engine I&#39;ve ever used. One of the new features of the second version of this application is user customizable workflows.
In my daily activities, I start, stop, restart and kill my &lt;a href=&quot;http://www.oracle.com/technetwork/middleware/glassfish/overview/index.html&quot;&gt;Glassfish&lt;/a&gt; server several times a day. In order to save me a few keystrokes and a few alt-tabbing, I created this small workflow allowing me to manage my local Glassfish instance.

You can find the Alfred worfklow at the following url &lt;a href=&quot;http://bit.ly/alfred-glassfish&quot;&gt;http://bit.ly/alfred-glassfish&lt;/a&gt;.
You will probably need to adapt the GF_PATH variable in the script to point to the root of your Glassfish installation.

Once this small step is done, you&#39;ll end up with the following prompt in your Alfred :

[caption id=&quot;attachment_878&quot; align=&quot;aligncenter&quot; width=&quot;300&quot;]&lt;img class=&quot;size-medium wp-image-878&quot; alt=&quot;Alfred with Glassfish workflow enabled&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/Capture-d’écran-2013-03-19-à-09.53.20-300x102.png&quot; width=&quot;300&quot; height=&quot;102&quot; /&gt; Alfred with Glassfish workflow enabled[/caption]&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img class=&quot;size-thumbnail wp-image-879 alignright&quot; alt=&quot;alfred-icon&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/alfred-icon-150x150.jpg&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;I recently bought the &lt;a href=&quot;http://www.alfredapp.com/&quot;&gt;Alfred.app&lt;/a&gt; Powerpack. It is byfar the best application launcher / automation engine I&#39;ve ever used. One of the new features of the second version of this application is user customizable workflows.
In my daily activities, I start, stop, restart and kill my &lt;a href=&quot;http://www.oracle.com/technetwork/middleware/glassfish/overview/index.html&quot;&gt;Glassfish&lt;/a&gt; server several times a day. In order to save me a few keystrokes and a few alt-tabbing, I created this small workflow allowing me to manage my local Glassfish instance.

You can find the Alfred worfklow at the following url &lt;a href=&quot;http://bit.ly/alfred-glassfish&quot;&gt;http://bit.ly/alfred-glassfish&lt;/a&gt;.
You will probably need to adapt the GF_PATH variable in the script to point to the root of your Glassfish installation.

Once this small step is done, you&#39;ll end up with the following prompt in your Alfred :

[caption id=&quot;attachment_878&quot; align=&quot;aligncenter&quot; width=&quot;300&quot;]&lt;img class=&quot;size-medium wp-image-878&quot; alt=&quot;Alfred with Glassfish workflow enabled&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/Capture-d’écran-2013-03-19-à-09.53.20-300x102.png&quot; width=&quot;300&quot; height=&quot;102&quot; /&gt; Alfred with Glassfish workflow enabled[/caption]&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Wicket 6 + CDI on Heroku</title>
   <link href="http://bloggure.info/.wicket/work/2013/03/03/wicket-6-cdi-on-heroku.html"/>
   <updated>2013-03-03T00:00:00+01:00</updated>
   <id>http://bloggure.info/.wicket/work/2013/03/03/wicket-6-cdi-on-heroku</id>
   <content type="html">&lt;!--:en--&gt;&lt;p&gt;&lt;img class=&quot;alignright size-full wp-image-865&quot; alt=&quot;herokuwicket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/herokuwicket.png&quot; width=&quot;96&quot; height=&quot;96&quot; /&gt;As an &lt;a href=&quot;http://apache.wicket.org&quot;&gt;Apache Wicket&lt;/a&gt; user for more than five years I really enjoy its programming model. I recently played with &lt;a href=&quot;http://www.playframework.com/&quot;&gt;Play Framework&lt;/a&gt; 2.1 and Scala and discovered that deploying to &lt;a href=&quot;http://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; is as easy as a git push. I wondered how difficult it could be using this mechanism to deploy a Wicket application.&lt;/p&gt;&lt;h1&gt;Existing attempts&lt;/h1&gt;&lt;p&gt;My initial investigation led me to this &lt;a href=&quot;http://wicketinaction.com/2011/09/git-wicket-running-on-heroku/&quot;&gt;blog post from Martijn Dashorst&lt;/a&gt; explaining how to deploy a Wicket 1.5 application to Heroku, the service has slightly evolved since and the quickstart no longer deploys (Maven repository is no longer available to the run environment).&lt;/p&gt;&lt;h1&gt;Adding JPA in the mix&lt;/h1&gt;&lt;p&gt;I adapted it to deploy and use Wicket 6 instead of 1.5. And as I am a CDI fan I completed the quickstart with the CDI Wicket module (inspired from &lt;a href=&quot;https://www.42lines.net/2011/11/21/adding-jpahibernate-into-the-cdi-and-wicket-mix/&quot;&gt;this post from Igor Vaynberg&lt;/a&gt;) and made the necessary steps to use the heroku bundled PostgreSQL database as a JPA datasource.&lt;/p&gt;&lt;p&gt;The key to make the database works correctly on Heroku resides in the following code snippet, where we parse the provided environment variable to populate hibernate properties.&lt;/p&gt;&lt;pre class=&quot;brush: java&quot;&gt;try {
     URI dbUri = new URI(System.getenv(&quot;DATABASE_URL&quot;));
     String username = dbUri.getUserInfo().split(&quot;:&quot;)[0];
     String password = dbUri.getUserInfo().split(&quot;:&quot;)[1];
     String dbUrl = &quot;jdbc:postgresql://&quot; + dbUri.getHost() 
                    + &#39;:&#39; + dbUri.getPort() + dbUri.getPath();
     System.setProperty(&quot;hibernate.connection.url&quot;, dbUrl);
     System.setProperty(&quot;hibernate.connection.user&quot;, username);
     System.setProperty(&quot;hibernate.connection.password&quot;, password);
} catch (Exception e) {
     LOGGER.error(&quot;Unable to extract database url&quot;);
}&lt;/pre&gt;&lt;h1&gt;Session replication&lt;/h1&gt;&lt;p&gt;On Wicket mailing lists, &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/wicket-users/201301.mbox/%3C20130109180456.21633f6d4d230ce5688fd451@gmx.net%3E&quot;&gt;a user recently asked&lt;/a&gt; the steps required to get the data store works correctly on Heroku (as the disk space is ephemeral), the key is using a NoSQL backend like &lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt;. So I wrote a simple and basic implementation of IDataStore using Redis (I think it can be optimized by someone familiar with Redis, pull requests are welcome).&lt;/p&gt;&lt;h1&gt;Hands on&lt;/h1&gt;&lt;p&gt;The quickstart can be found &lt;a href=&quot;https://github.com/CedricGatay/heroku-wicket-quickstart&quot;&gt;at the following address&lt;/a&gt; and deploys fine on a stack with &lt;a href=&quot;http://redis-cloud.com/&quot;&gt;Redis Cloud&lt;/a&gt; and PostgreSQL add ons enabled.&lt;br /&gt; In the end you got :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Wicket 6&lt;/li&gt;&lt;li&gt;CDI via Weld&lt;/li&gt;&lt;li&gt;JPA with PostgreSQL&lt;/li&gt;&lt;li&gt;Redis datastore&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can see it live at the following address : &lt;a href=&quot;http://wicket-6-sample.herokuapp.com/&quot;&gt;http://wicket-6-sample.herokuapp.com/&lt;/a&gt;, the app can take a few seconds to start, as Heroku will stop it if it is idling for too long.&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;p&gt;&lt;img class=&quot;alignright size-full wp-image-865&quot; alt=&quot;herokuwicket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/03/herokuwicket.png&quot; width=&quot;96&quot; height=&quot;96&quot; /&gt;As an &lt;a href=&quot;http://apache.wicket.org&quot;&gt;Apache Wicket&lt;/a&gt; user for more than five years I really enjoy its programming model. I recently played with &lt;a href=&quot;http://www.playframework.com/&quot;&gt;Play Framework&lt;/a&gt; 2.1 and Scala and discovered that deploying to &lt;a href=&quot;http://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; is as easy as a git push. I wondered how difficult it could be using this mechanism to deploy a Wicket application.&lt;/p&gt;&lt;h1&gt;Existing attempts&lt;/h1&gt;&lt;p&gt;My initial investigation led me to this &lt;a href=&quot;http://wicketinaction.com/2011/09/git-wicket-running-on-heroku/&quot;&gt;blog post from Martijn Dashorst&lt;/a&gt; explaining how to deploy a Wicket 1.5 application to Heroku, the service has slightly evolved since and the quickstart no longer deploys (Maven repository is no longer available to the run environment).&lt;/p&gt;&lt;h1&gt;Adding JPA in the mix&lt;/h1&gt;&lt;p&gt;I adapted it to deploy and use Wicket 6 instead of 1.5. And as I am a CDI fan I completed the quickstart with the CDI Wicket module (inspired from &lt;a href=&quot;https://www.42lines.net/2011/11/21/adding-jpahibernate-into-the-cdi-and-wicket-mix/&quot;&gt;this post from Igor Vaynberg&lt;/a&gt;) and made the necessary steps to use the heroku bundled PostgreSQL database as a JPA datasource.&lt;/p&gt;&lt;p&gt;The key to make the database works correctly on Heroku resides in the following code snippet, where we parse the provided environment variable to populate hibernate properties.&lt;/p&gt;&lt;pre class=&quot;brush: java&quot;&gt;try {
     URI dbUri = new URI(System.getenv(&quot;DATABASE_URL&quot;));
     String username = dbUri.getUserInfo().split(&quot;:&quot;)[0];
     String password = dbUri.getUserInfo().split(&quot;:&quot;)[1];
     String dbUrl = &quot;jdbc:postgresql://&quot; + dbUri.getHost() 
                    + &#39;:&#39; + dbUri.getPort() + dbUri.getPath();
     System.setProperty(&quot;hibernate.connection.url&quot;, dbUrl);
     System.setProperty(&quot;hibernate.connection.user&quot;, username);
     System.setProperty(&quot;hibernate.connection.password&quot;, password);
} catch (Exception e) {
     LOGGER.error(&quot;Unable to extract database url&quot;);
}&lt;/pre&gt;&lt;h1&gt;Session replication&lt;/h1&gt;&lt;p&gt;On Wicket mailing lists, &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/wicket-users/201301.mbox/%3C20130109180456.21633f6d4d230ce5688fd451@gmx.net%3E&quot;&gt;a user recently asked&lt;/a&gt; the steps required to get the data store works correctly on Heroku (as the disk space is ephemeral), the key is using a NoSQL backend like &lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt;. So I wrote a simple and basic implementation of IDataStore using Redis (I think it can be optimized by someone familiar with Redis, pull requests are welcome).&lt;/p&gt;&lt;h1&gt;Hands on&lt;/h1&gt;&lt;p&gt;The quickstart can be found &lt;a href=&quot;https://github.com/CedricGatay/heroku-wicket-quickstart&quot;&gt;at the following address&lt;/a&gt; and deploys fine on a stack with &lt;a href=&quot;http://redis-cloud.com/&quot;&gt;Redis Cloud&lt;/a&gt; and PostgreSQL add ons enabled.&lt;br /&gt; In the end you got :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Wicket 6&lt;/li&gt;&lt;li&gt;CDI via Weld&lt;/li&gt;&lt;li&gt;JPA with PostgreSQL&lt;/li&gt;&lt;li&gt;Redis datastore&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can see it live at the following address : &lt;a href=&quot;http://wicket-6-sample.herokuapp.com/&quot;&gt;http://wicket-6-sample.herokuapp.com/&lt;/a&gt;, the app can take a few seconds to start, as Heroku will stop it if it is idling for too long.&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Use Wicket templating system to generate Html</title>
   <link href="http://bloggure.info/.java/.wicket/2013/01/20/use-wicket-templating-system-to-generate-html.html"/>
   <updated>2013-01-20T00:00:00+01:00</updated>
   <id>http://bloggure.info/.java/.wicket/2013/01/20/use-wicket-templating-system-to-generate-html</id>
   <content type="html">&lt;p&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2013/01/html-icon.png&quot; alt=&quot;html-icon&quot; width=&quot;128&quot; height=&quot;128&quot; class=&quot;alignright size-full wp-image-844&quot; /&gt;&lt;a href=&quot;http://wicket.apache.org&quot;&gt;Apache Wicket&lt;/a&gt; is a great web framework, its clear separation between logic and markup allows to focus on what&#39;s need to be done. &lt;br/&gt; 
As we use Wicket at &lt;a href=&quot;https://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt;, we needed to send mails with rather rich templates to our users. The first implementation we used was relying on Wicket to generate these templates using Html. We finally don&#39;t use it (our mailing tasks are done by a background job, thus we don&#39;t have access to our webapp), but I though the code used in our fast proof of concept could help someone else.
&lt;/p&gt;
&lt;pre class=&quot;brush: java&quot;&gt;
import org.apache.wicket.markup.MarkupType;
import org.apache.wicket.markup.html.WebMarkupContainer;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.markup.html.panel.Panel;
import org.apache.wicket.markup.repeater.RepeatingView;
import org.apache.wicket.model.PropertyModel;
import org.apache.wicket.request.Response;
import org.apache.wicket.response.StringResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


/**
 * Simple panel allowing to use the templating engine 
 *    provided by Wicket to generate HTML.
 * Typical use would be to generate mail content.
 *
 * User of this class will need to subclass it 
 *    and create a panel as usual. 
 * Then a call to getHtml() will return the generated Html.
 *
 * @author cedric at gatay.fr
 */
public class HtmlTemplaterPanel extends Panel {
    private static final Logger LOGGER = 
        LoggerFactory.getLogger(HtmlTemplaterPanel.class);

    /**
     * Default constructor takes no wicket:id &gt; 
     *   the panel will not be added to any component
     */
    public HtmlTemplaterPanel(){
        super(&quot;dummy&quot;);
    }

    /**
     * Call this whenever you want to get
     *   the Html for this component
     * @return Html or empty string
     */
    public String getHtml(){
        final Response origResponse = getRequestCycle().getResponse();
        try{
            final StringResponse stringResponse = new StringResponse();
            getRequestCycle().setResponse(stringResponse);
            renderAssociatedMarkup(&quot;panel&quot;, &quot;&quot;);
            return stringResponse.toString();
        }catch(Exception e){
            LOGGER.error(&quot;Unable to build HTML for panel : {}&quot;,
                         e.getMessage());
        }finally{
            getRequestCycle().setResponse(origResponse);
        }
        return &quot;&quot;;
    }

    @Override
    protected boolean getStatelessHint() {
        return true;
    }

    @Override
    public MarkupType getMarkupType() {
        return MarkupType.HTML_MARKUP_TYPE;
    }
}
&lt;/pre&gt;
&lt;p&gt;
If you want to generate a template using Apache Wicket, you only need to create a Panel and its associated markup which inherits this simple class. Then, when you want to get the Html for your component, call &lt;code&gt;getHtml()&lt;/code&gt;.&lt;br/&gt;
The only drawback of this is that you need a RequestCycle to generate the markup (you&#39;ll find out why reading the code).
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>De Free à Numericable</title>
   <link href="http://bloggure.info/thoughts/2013/01/12/de-free-a-numericable.html"/>
   <updated>2013-01-12T00:00:00+01:00</updated>
   <id>http://bloggure.info/thoughts/2013/01/12/de-free-a-numericable</id>
   <content type="html">&lt;h2&gt;Marre de Free…&lt;/h2&gt;
&lt;p&gt;Depuis 2003 maintenant je suis client ADSL de Free. Là où j&#39;ai toujours conseillé et trouvé que Free était un des acteurs du marché qui faisait bouger les choses, j&#39;ai depuis changé d&#39;avis.&lt;br/&gt;

La Freebox révolution est une belle machine, arrivée bien avant les machines des concurrents mais, comme Free l&#39;avait fait avec la version précédente, le produit livré était bien loin des promesses tenues lors de la conférence de presse. Il aura fallu une bonne année avant que la box soit réellement stabilisée et n&#39;ait plus ces bugs les plus gênants (volume non conservé, paramètres volatiles). En plus de cette technique consistant à considérer le client comme beta testeur, vient maintenant le problème du débit : celui ci n&#39;a pas arrêté pas de se dégrader : la situation était telle que j&#39;en venais à me connecter au VPN de ma société pour réussir un build Maven dans des temps raisonnables (80ko/s qui se transforment en 2Mo/s pour télécharger des dépendances). En supplément je suis abonné Canal Plus et l&#39;accès à Canal Plus à la demande via la Freebox est devenu complètement erratique (problème étrange parce que depuis ma TV l&#39;accès fonctionne bien mieux, Free est sûrement moins à blâmer dans ce cas).&lt;/p&gt;
&lt;p&gt;L&#39;élément déclenchant le changement chez moi a été le récent événement concernant les DNS menteurs de la Freebox effectuant un bloquage automatique et non configurable des publicités. Ce sujet a donné lieu à des centaines de commentaires sur Internet, et je me situe du côté de ceux qui ne sont pas opposé à l&#39;intégration de la fonctionnalité, mais pas de cette façon : les utilisateurs &lt;em&gt;lambda&lt;/em&gt; auront cette fonctionnalité activé par défaut et n&#39;auront plus la possibilité de découvrir des opportunités grâce à la publicité. Et pour les utilisateurs avancés la non configurabilité du bloquage rend l&#39;initiative complètement inutile. &lt;/p&gt;
&lt;p&gt;Ayant la chance d&#39;être desservi par le câble, le choix d&#39;un nouveau fournisseur d&#39;accès a été largement simplifié : Bouygues télécom et son offre BBox sensation ou Numericable. Vu les mauvais retours que j&#39;ai pu avoir sur le boitier de chez Bouygues et le fait que le réseau utilisé est celui de Numericable je me suis tourné vers ce fournisseur. &lt;/p&gt;
&lt;h2&gt;Passage chez Numericable&lt;/h2&gt;
&lt;p&gt;J&#39;ai passé ma commande le 7 janvier, le 11 janvier j&#39;ai reçu LaBox en relai colis. Le branchement fait le soir même, rien ne marchait : j&#39;avais le signal correctement synchronisé mais ni TV ni Internet. &lt;br/&gt;
Pour informations, la procédure d&#39;inscription via le site &lt;a href=&quot;http://signup.numericable.fr&quot;&gt;http://signup.numericable.fr&lt;/a&gt; ne fonctionnait pas (impossible de reconnaitre le matériel). &lt;br/&gt;
Le lendemain, j&#39;ai contacté le service client via le chat (très bonne expérience utilisateur ceci dit en passant) qui a fini d&#39;activer ma ligne. Internet fonctionnait comme voulu mais j&#39;avais toujours un problème avec le service TV, LaBox me gratifiait d&#39;un message &quot;droits expirés&quot; dès l&#39;allumage et en allant dans le menu de diagnostic le numéro de carte ne s&#39;affichait même pas. La solution à ce problème était tout simplement de garder LaBox sur une des chaines qui fonctionnait (317 - D17 a fonctionné pour moi) pendant environ une heure. Une heure plus tard, toutes les chaines fonctionnaient comme prévu et la magie a fait que le numéro de carte est désormais visible dans la partie diagnostic de LaBox.&lt;/p&gt;
&lt;p&gt;J&#39;ai enfin une connexion fiable et rapide ainsi qu&#39;un service TV de très bonne qualité. La seule fonctionnalité bonus de la Freebox qui va me manquer est le support AirPlay, l&#39;iPad avec Spotify vers l&#39;amplificateur home cinéma via AirPlay est une chose que j&#39;utilise très souvent quand je reçois du monde. Je suis donc à la recherche d&#39;une bonne alternative peu couteuse. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sony Entertainment Web store - at last !</title>
   <link href="http://bloggure.info/thoughts/www/2013/01/10/sony-entertainment-web-store-at-last.html"/>
   <updated>2013-01-10T00:00:00+01:00</updated>
   <id>http://bloggure.info/thoughts/www/2013/01/10/sony-entertainment-web-store-at-last</id>
   <content type="html">&lt;p&gt;I own a Playstation3 since January 2009 after getting the famous RROD on two successives Xbox 360. The PS3 is a really a nice gaming device, but the guys at Sony have  another focusing on everything but their store experience to their end users.&lt;/p&gt;
&lt;img class=&quot;alignright size-thumbnail wp-image-176&quot; alt=&quot;Playstation3&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/12/Playstation3-150x150.jpg&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;
&lt;p&gt;When I left the Xbox 360 world, one of the best feature of it was its store, I could even access it from my web browser and launch downloads so that I can play my games when I got home. I seriously miss this feature on the PS3. But I found that Sony, I guess along with the big store rewrite they made a few weeks ago, now allows us to browse and buy easily from our browser : &lt;a style=&quot;text-align: center;&quot; href=&quot;https://store.sonyentertainmentnetwork.com&quot;&gt;https://store.sonyentertainmentnetwork.com&lt;/a&gt;.&lt;/p&gt;

[caption id=&quot;attachment_817&quot; align=&quot;aligncenter&quot; width=&quot;584&quot;]&lt;a href=&quot;http://www.bloggure.info/thoughts/sony-entertainment-web-store-at-last.html/attachment/capture-decran-2013-01-10-a-20-29-45&quot; rel=&quot;attachment wp-att-817&quot;&gt;&lt;img class=&quot; wp-image-817&quot; alt=&quot;SEN Store&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2013/01/Capture-d’écran-2013-01-10-à-20.29.45-1024x797.png&quot; width=&quot;584&quot; height=&quot;454&quot; /&gt;&lt;/a&gt; Sony Entertainment Network Web Store[/caption]

&lt;em&gt;&lt;del datetime=&quot;2013-01-23T07:11:44+00:00&quot;&gt;I don&#39;t know yet if the download will be automagically launched when my Playstation 3 will automatically wake up to synchronise my Playstation+ account.&lt;br/&gt;I&#39;ll update this post when I&#39;ll know !&lt;/del&gt;&lt;br/&gt;
It seems that the downloads don&#39;t get pushed automatically to the console nor are downloaded when the console is syncing. Come on Sony, you&#39;ve come so close !&lt;/em&gt;
</content>
 </entry>
 
 <entry>
   <title>Regexper : visualize your regexps</title>
   <link href="http://bloggure.info/work/www/2013/01/03/regexper-visualize-your-regexps.html"/>
   <updated>2013-01-03T00:00:00+01:00</updated>
   <id>http://bloggure.info/work/www/2013/01/03/regexper-visualize-your-regexps</id>
   <content type="html">&lt;p&gt;
There is a famous quote about regular expressions, to which I don&#39;t really agree but I have to admit there is not much love for regexps around me. 
&lt;blockquote&gt;
Some people, when confronted with a problem, think &quot;I know, I&#39;ll use regular expressions.&quot; Now they have two problems.
&lt;small&gt;Jamie Zawinski&lt;/small&gt;
&lt;/blockquote&gt;
&lt;/p&gt;
&lt;p&gt;
I came across this little tool : &lt;a href=&quot;http://www.regexper.com/&quot;&gt;Regexper&lt;/a&gt; allowing to easily understand a regular expression by providing its state machine diagram :
[caption id=&quot;attachment_806&quot; align=&quot;aligncenter&quot; width=&quot;854&quot;]&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2013/01/Capture-d’écran-2013-01-03-à-09.25.23.png&quot; alt=&quot;Regexper example&quot; width=&quot;854&quot; height=&quot;400&quot; class=&quot;size-full wp-image-806&quot; /&gt; Regexper example[/caption]
&lt;/p&gt;
&lt;p&gt;
I think it could be useful to put it in your bookmarks with &lt;a href=&quot;http://rejex.heroku.com/&quot;&gt;Rejex&lt;/a&gt; to use it when you work with regular expressions.
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PostgreSQL under OS X Mountain Lion</title>
   <link href="http://bloggure.info/work/2013/01/03/postgresql-under-os-x-mountain-lion.html"/>
   <updated>2013-01-03T00:00:00+01:00</updated>
   <id>http://bloggure.info/work/2013/01/03/postgresql-under-os-x-mountain-lion</id>
   <content type="html">&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2013/01/netsuke-150x150.png&quot; alt=&quot;postgresql&quot; width=&quot;150&quot; height=&quot;150&quot; class=&quot;alignright size-thumbnail wp-image-798&quot; /&gt;&lt;p&gt;I am actually doing a side project which you will heard of very soon. For this project I am using &lt;a href=&quot;http://www.playframework.org/&quot;&gt;Play! Framework&lt;/a&gt; v2 with the server side being developed in &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;Scala&lt;/a&gt;. To efficiently push this new application to production, I am using the &lt;a href=&quot;http://www.heroku.com/&quot;&gt;Heroku platform&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While my initial thoughts were using MySQL as my relational backend, the default stack provided by Heroku made me switch to postgresql that I have barely used in the past. I attempted to set it up on my machine, but with no luck, Mountain Lion is bundling an old version (8.4) whereas I wanted the same as on the Heroku platform. My first attempt with Homebrew was quite a disaster, I never managed to correctly connect my newly created user.&lt;/p&gt;

&lt;p&gt;
After a few hours mumbling, I looked for an alternative to the Homebrew version. Luckily, the guys at Heroku provide a neat application &lt;a href=&quot;http://postgresapp.com/&quot;&gt;Postgres.app&lt;/a&gt; to drop that allows to quickly start/stop a postgresql server. My problem was I didn&#39;t had enough connections to allow my application to start, I was always getting this message : &lt;code&gt;remaining connection slots are reserved for non-replication superuser connections&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I edited the configuration file 
&lt;pre class=&quot;brush: bash&quot;&gt;vim &quot;~/Library/Application Support/Postgres/var/postgresql.conf&quot;&lt;/pre&gt;
to bump the number of connections to a lot more (20 instead of 10) but it prevented my server to start. With a lot of file editing and restarts, I found that the limit for my machine was 11 connections.
&lt;/p&gt;
&lt;p&gt;
The solution to this problem resides in a special setup of the mac os kernel which defines the amount of shared memory a process can allocate. To get rid of this, you can edit your &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; file (root required) and put the following lines (it will persist across reboots)
&lt;pre class=&quot;brush: bash&quot;&gt;
kern.sysv.shmall=65536
kern.sysv.shmmax=16777216
&lt;/pre&gt;
&lt;/p&gt;
&lt;em&gt;Credits for this tip comes from &lt;a href=&quot;http://ruby.zigzo.com/2012/07/07/postgresql-postgres-app-and-a-gotcha-on-mac-osx-lion&quot;&gt;http://ruby.zigzo.com/2012/07/07/postgresql-postgres-app-and-a-gotcha-on-mac-osx-lion&lt;/a&gt;/&lt;/em&gt;
</content>
 </entry>
 
 <entry>
   <title>Juniper VPN SSL on Android</title>
   <link href="http://bloggure.info/work/2013/01/01/juniper-vpn-ssl-on-android.html"/>
   <updated>2013-01-01T00:00:00+01:00</updated>
   <id>http://bloggure.info/work/2013/01/01/juniper-vpn-ssl-on-android</id>
   <content type="html">This morning I wanted to check if my newly installed backup scripts were working, but I didn&#39;t want to get my laptop out of my backpack. 

A quick search got me to this little application from Juniper which lets me connect to our VPN easily (equivalent for Network Connect client on desktops) : &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.juniper.junos.pulse.android&quot;&gt;https://play.google.com/store/apps/details?id=net.juniper.junos.pulse.android&lt;/a&gt;
</content>
 </entry>
 
 <entry>
   <title>Graph of programming languages people used in 2012</title>
   <link href="http://bloggure.info/www/2012/12/30/graph-of-programming-languages-people-used-in-2012.html"/>
   <updated>2012-12-30T00:00:00+01:00</updated>
   <id>http://bloggure.info/www/2012/12/30/graph-of-programming-languages-people-used-in-2012</id>
   <content type="html">&lt;p&gt;I came across this link representing a visualization of programming languages usage based on a hashtag collect : &lt;a href=&quot;http://www.ioncannon.net/projects/code2012/&quot;&gt;http://www.ioncannon.net/projects/code2012/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Although this method can be criticized, it provides interesting data : JavaScript is the clear winner with Java just behind. We can see Scala is a growing language too, it has been used more than PHP last year (according to this study). &lt;/p&gt;

&lt;em&gt;If you find another study on this topic don&#39;t hesitate to comment this blog post to let me know.&lt;/em&gt;
</content>
 </entry>
 
 <entry>
   <title>IntelliJ 12 Darcula + Monokai</title>
   <link href="http://bloggure.info/work/2012/12/28/intellij-12-darcula-monokai.html"/>
   <updated>2012-12-28T00:00:00+01:00</updated>
   <id>http://bloggure.info/work/2012/12/28/intellij-12-darcula-monokai</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://twitter.com/loic_d&quot;&gt;Loïc Descotte&lt;/a&gt; shared via Twitter an excellent color scheme for IntelliJ inspired by &lt;a href=&quot;http://studiostyl.es/schemes/monokai&quot;&gt;Monokai&lt;/a&gt; color scheme.&lt;/p&gt;

[caption id=&quot;attachment_780&quot; align=&quot;alignright&quot; width=&quot;917&quot;]&lt;img class=&quot;size-full wp-image-780&quot; alt=&quot;IntelliJ Darcula + Monokai&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/12/Capture-d’écran-2012-12-28-à-14.37.12.png&quot; width=&quot;917&quot; height=&quot;424&quot; /&gt; IntelliJ Darcula + Monokai[/caption]

&lt;p&gt;You can grab it at the following link (&lt;a href=&quot;https://github.com/hugoferreira/greater-monokai/raw/master/GreaterMonokai.xml&quot;&gt;Monokai color scheme&lt;/a&gt;) or get the complete  corresponding settings jar file &lt;a href=&quot;https://github.com/hugoferreira/greater-monokai/raw/master/GreaterMonokai.jar&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
Setup is simple, under OS X you have to do the following (and then select the corresponding color scheme in settings) :
[code lang=&quot;bash&quot; light=&quot;on&quot;]
cp ~/Downloads/GreaterMonokai.xml ~/Library/Preferences/IntelliJIdea12/colors/
[/code]
Or you can simply import the jar containing the settings via the &lt;em&gt;File &gt; Import Settings...&lt;/em&gt; menu item in IntelliJ. The next time you&#39;ll restart your IDE, you should notice the change. The only thing I changed is the font size, 14pt is too big for me, I turned it to 12pt.

</content>
 </entry>
 
 <entry>
   <title>Quickly insert data to a SQL database in Groovy</title>
   <link href="http://bloggure.info/.groovy/work/2012/12/27/quickly-insert-data-to-a-sql-database-in-groovy.html"/>
   <updated>2012-12-27T00:00:00+01:00</updated>
   <id>http://bloggure.info/.groovy/work/2012/12/27/quickly-insert-data-to-a-sql-database-in-groovy</id>
   <content type="html">&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/12/groovy-200px.png&quot; alt=&quot;groovy-200px&quot; width=&quot;200&quot; height=&quot;100&quot; class=&quot;alignright size-full wp-image-771&quot; /&gt;
&lt;p&gt;When we migrate data at &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt;, we use Groovy to focus on the migration logic without loosing time with heavy syntax and POJO mapping.
Groovy is a great tool to do this, and its out of the box Sql handling is really very good. I found myself having the need to insert data to multiple existing table filling all columns.&lt;/p&gt;


&lt;p&gt;While we can do it easily, it can become a mess rapidly when there is a lot of columns to handle. With this little snippet, you can leverage Groovy&#39;s maps to get a solid insertIntoTable&lt;/p&gt;
&lt;pre class=&quot;brush: groovy&quot;&gt;
static def insertIntoTable(String tableName, 
                           Map paramMap, 
                           final Sql sql) {
        sql.executeInsert(&quot;&quot;&quot;
             INSERT INTO ${tableName} 
                    (${paramMap.keySet().join(&#39;,&#39;)})
                    VALUES 
                    (${paramMap.keySet().collect { key -&gt; &quot;:&quot; + key }.join(&#39;,&#39;)})
        &quot;&quot;&quot;, paramMap)
}
&lt;/pre&gt;

&lt;p&gt;To use it, one can simply call it this way (with the sql object correctly bound to a connection)&lt;/p&gt;
&lt;pre class=&quot;brush: groovy&quot;&gt;
def paramMap = [ 
    id : 1, 
    myFirstColumn : &quot;My first value&quot;, 
    mySecondColumn : &quot;Second&quot; 
]
insertIntoTable(&quot;MyTable&quot;, paramMap, sql)
&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>OS X Tools I use in my daily activities</title>
   <link href="http://bloggure.info/thoughts/work/2012/12/22/os-x-tools-i-use-in-my-daily-activities.html"/>
   <updated>2012-12-22T00:00:00+01:00</updated>
   <id>http://bloggure.info/thoughts/work/2012/12/22/os-x-tools-i-use-in-my-daily-activities</id>
   <content type="html">&lt;p&gt;&lt;img class=&quot;alignright size-thumbnail wp-image-758&quot; alt=&quot;MBP Keyboard&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/12/IMG_20121222_000541-150x150.jpg&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;During a Jabber talk with my friend &lt;a href=&quot;http://www.bloggure.info/author/tdebarochez&quot;&gt;Thomas Debarochez&lt;/a&gt; I mentioned an app I use everyday that he hardly ever knows. Then I think it might be a good idea to describe the tools I use everyday at work or home on my machines. My main computer is a MacBook Pro (late 2011) running latest OS X version (Mountain Lion). I use it to develop the &lt;a href=&quot;https://www.srmvision.com&quot;&gt;SRMvision platform&lt;/a&gt; which is built using Java EE technologies (the whole stack will be detailed in a further post).&lt;/p&gt;

&lt;p&gt;The tools I use on my machine in my development process are the following :&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA Ultimate 12&lt;/a&gt; : the best Java / JVM language IDE so far. It is a great IDE, offers a really good Maven integration and there is a wide range of plugins available. This last version features the really nice Darcula theme (eye candyness) and out of process compiler which makes it really fast.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.sublimetext.com/2&quot;&gt;Sublime Text 2&lt;/a&gt; : it is a simple but really powerful text editor. I use it to open every file that is out of my IntelliJ&#39;s projects.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.sequelpro.com/&quot;&gt;Sequel Pro&lt;/a&gt; : a nice and powerful mySQL GUI client. It is sometimes more comfortable to query database with a GUI than with the command line.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://mongohub.todayclose.com/&quot;&gt;MongoHub&lt;/a&gt; : a simple MongoDB GUI client, crashy but it can be useful at times.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://maven.apache.org/&quot;&gt;Apache Maven&lt;/a&gt; : there is no need to elaborate on this one, I think every Java developer knows it.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/middleware/glassfish/downloads/index.html&quot;&gt;Oracle Glassfish&lt;/a&gt; : one should chose a JavaEE application server, we chose the reference implementation of the spec.&lt;/li&gt;
&lt;/ul&gt;
I also use hosted service (self-hosted on our internal network or in the cloud for some) :
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://gitlabhq.com/&quot;&gt;GitlabHQ&lt;/a&gt; : if you&#39;ve read past blog entries, you should know this wonderful tool to manage git repositories (self hosted).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://jenkins-ci.org/&quot;&gt;Jenkins&lt;/a&gt; : the well known build tool (self-hosted).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.sonatype.org/nexus/&quot;&gt;Sonatype Nexus&lt;/a&gt; : as we build our softwares with Apache Maven, we need an internal artifact repository, this one was chosen because it was the simplest to install (when we did it) (self-hosted).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.sonarsource.org/&quot;&gt;Sonar&lt;/a&gt; : associated in our build pipeline, we have got a Sonar install to collect metrics on our projects (self-hosted).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://trac.edgewall.org/&quot;&gt;Trac&lt;/a&gt; : old but not dead, Trac is our source ticketing system from day one. It is surely not the hottest kid in town, but it does its job as expected (self-hosted).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://trello.com/&quot;&gt;Trello&lt;/a&gt; : our sprint management tool, its card approach with TrelloScrum plugin allows us to easily plan and run our sprints.&lt;/li&gt;
&lt;/ul&gt;
In my list of programs I run everyday without being specifically targeted toward development, I use the following :
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://synergy-foss.org/&quot;&gt;Synergy&lt;/a&gt; : it is a simple tool allowing you to share one computer&#39;s mouse and keyboard with many other machines using your network connection. As I have two other machines at my desk, this tool is really useful in order to control each one from a mouse and keyboard.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.controlplaneapp.com/&quot;&gt;ControlPlane.app&lt;/a&gt; : a great app if you use a MacBook, it allows you to define profiles and trigger them based on your location. I have a few profiles allowing me to toggle screensaver password, screen luminosity and my synergy setup.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.alfredapp.com/&quot;&gt;Alfred.app&lt;/a&gt; : it is Apple&#39;s Spotlight on steroid, you can do whatever you want to by simply hitting the shortcut you defined in Alfred. My usage is mainly using it as an application launcher.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://getcloudapp.com/&quot;&gt;Cloud.app&lt;/a&gt; : this little tool is really great. Every screenshot I take is uploaded to their servers and the link is then automatically put in my clipboard. It is really useful to quickly share screenshots over instant messenging.&lt;/li&gt;
&lt;/ul&gt;
And to finish with this little blog post, here are the stuff I keep installed on my machine even though I don&#39;t use them daily :
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;HomeBrew&lt;/a&gt; : when I got my first Intel Mac, I used MacPorts to install tools from the Unix world from sources. This tool is great, but you end up downloading a lot of dependencies to get a simple soft to build and you are transforming your CPU to a toaster. Then I heard about HomeBrew, which is the simplest and the greatest way of managing third party applications on your Mac. Everything is clean, there is no need to be root, no need to be part of the global warming thing with your CPU.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com&quot;&gt;Dropbox&lt;/a&gt; : I think this one is known by everyone now. Just upload and share your files easily, the app is so great that I can even forget the magic it is doing in my back.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://getpocket.com/&quot;&gt;Pocket&lt;/a&gt; : (previously Read It Later) is a great software to mark links, blog posts, everything you can come across on the web as to be read later. The Mac application is beautiful, so is the Android one (Hint : don&#39;t stack in it if you can&#39;t manage to free time for unstacking).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.sourcetreeapp.com/&quot;&gt;SourceTree.app&lt;/a&gt; and &lt;a href=&quot;http://mac.github.com/&quot;&gt;Github.app&lt;/a&gt;: at times, I need to get a visual help to manage my git repositories. SourceTree is a complete tool offering a really good looking branch visualization. Github allows to seamlessly use their service, I often use it to reorder my commits before making a pull request.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://colloquy.info/&quot;&gt;Colloquy&lt;/a&gt; : a really good IRC client, I use it when I am telecommuting, otherwise I use the classic XChat (linux version).&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://spotify.com/&quot;&gt;Spotify&lt;/a&gt; : I think I can not work without music, the 10€ / month membership allows me to use it with my phone too, it is very unlikely that I cancel this subscription anytime soon (I even use the Linux version).&lt;/li&gt;
       &lt;li&gt;&lt;a href=&quot;http://latenitesoft.com/xslimmer/&quot;&gt;XSlimmer&lt;/a&gt; : I use this tool from time to time to slim down the size of the app I have installed. It works by removing unused language in packages.&lt;/li&gt;
       &lt;li&gt;&lt;a href=&quot;http://latenitesoft.com/clusters/&quot;&gt;Clusters&lt;/a&gt; : I have this one installed and do its work without worrying of what it is doing. It allows me to save some space in the folders where I store documents (compression is very efficient here).&lt;/li&gt;
       &lt;li&gt;&lt;a href=&quot;https://www.dashlane.com/fr/cs/3b9ba006&quot;&gt;Dashlane&lt;/a&gt; : this password and identity manager is really good. It exists for different OSes and allows to setup strong passwords on every account you own : must have.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Five Presentation Mistakes Everyone Makes</title>
   <link href="http://bloggure.info/thoughts/www/2012/12/18/five-presentation-mistakes-everyone-makes.html"/>
   <updated>2012-12-18T00:00:00+01:00</updated>
   <id>http://bloggure.info/thoughts/www/2012/12/18/five-presentation-mistakes-everyone-makes</id>
   <content type="html">In my everyday browsing I came across this very interesting link explaining what people tends to do wrong when doing a keynote. 
&lt;br/&gt;
These points are really important but I attended a lot more presentations done wrong than following these simple advices : &lt;a href=&quot;http://feedly.com/k/Wi2EOx&quot;&gt;Five Presentation Mistakes Everyone Makes &lt;/a&gt;
</content>
 </entry>
 
 <entry>
   <title>Ingress first try</title>
   <link href="http://bloggure.info/www/2012/11/20/ingress-first-try.html"/>
   <updated>2012-11-20T00:00:00+01:00</updated>
   <id>http://bloggure.info/www/2012/11/20/ingress-first-try</id>
   <content type="html">&lt;!--:en--&gt;&lt;p&gt;&lt;img class=&quot;alignright size-thumbnail wp-image-731&quot; title=&quot;Ingress logo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Ingress-Featured-Logo-150x150.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;I am among the first users of ingress in France, the concept feels good, but for the times being, there is not enough people playing to make it really interesting.&lt;br /&gt; In my hometown (Tours,France) I think we are under ten people running the game for now, so I am the first who captured the portals in the center of the city. The game is addictive even though there is almost nobody, I can&#39;t wait to see more people playing.&lt;/p&gt;&lt;p&gt;There is not much portals for now, but you can &lt;a href=&quot;http://support.google.com/ingress/answer/2808254?hl=en&quot;&gt;submit your own portals&lt;/a&gt;. I think I will use the camera of my brand new Nexus 4 to do this.&lt;/p&gt;[caption id=&quot;attachment_730&quot; align=&quot;aligncenter&quot; width=&quot;584&quot;]&lt;img class=&quot;size-large wp-image-730&quot; title=&quot;Ingress start&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-20-à-14.28.09-1024x606.png&quot; alt=&quot;&quot; width=&quot;584&quot; height=&quot;345&quot; /&gt; Ingress @ Tours[/caption]&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;p&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignright size-thumbnail wp-image-731&quot; title=&quot;Ingress logo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Ingress-Featured-Logo-150x150.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;I am among the first users of ingress in France, the concept feels good, but for the times being, there is not enough people playing to make it really interesting.&lt;br /&gt; In my hometown (Tours,France) I think we are under ten people running the game for now, so I am the first who captured the portals in the center of the city. The game is addictive even though there is almost nobody, I can&#39;t wait to see more people playing.&lt;/p&gt;&lt;p&gt;There is not much portals for now, but you can &lt;a href=&quot;http://support.google.com/ingress/answer/2808254?hl=en&quot;&gt;submit your own portals&lt;/a&gt;. I think I will use the camera of my brand new Nexus 4 to do this.&lt;/p&gt;[caption id=&quot;attachment_730&quot; align=&quot;aligncenter&quot; width=&quot;584&quot;]&lt;img class=&quot;size-large wp-image-730&quot; title=&quot;Ingress start&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-20-à-14.28.09-1024x606.png&quot; alt=&quot;&quot; width=&quot;584&quot; height=&quot;345&quot; /&gt; Ingress @ Tours[/caption]&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Wicket Chrome to IDEA</title>
   <link href="http://bloggure.info/.wicket/2012/11/18/wicket-chrome-to-idea.html"/>
   <updated>2012-11-18T00:00:00+01:00</updated>
   <id>http://bloggure.info/.wicket/2012/11/18/wicket-chrome-to-idea</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-full wp-image-90&quot; title=&quot;Wicket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/logo-wicket1.png&quot; alt=&quot;&quot; width=&quot;200&quot; height=&quot;199&quot; /&gt;It is not a secret that the &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt; platform is developped using the &lt;a href=&quot;http://wicket.apache.org/&quot;&gt;Apache Wicket&lt;/a&gt; framework.

As our application became bigger and so our team, it&#39;s getting harder to find the correct Wicket class beneath the view of the page we get in our browsers.

To help the team in this process, I made a simple Chrome extension and a IntelliJ IDEA plugin allowing to send class names to the IDE from the web browser (at the cost of a very simple class in your project, disabled in deployment mode).
&lt;h2&gt;Getting your project ready&lt;/h2&gt;
In the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example&quot;&gt;chrome-wicket-idea-example&lt;/a&gt; github repository, you have a very simple example of what needs to be done to enable navigation between your browser and your project opened in your IDE. Have a look at the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example/blob/master/src/main/java/fr/gatay/WicketApplication.java&quot;&gt;WicketApplication&lt;/a&gt; class (specifically in the the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example/blob/master/src/main/java/fr/gatay/WicketApplication.java#L28&quot;&gt;init()&lt;/a&gt; method) and at the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example/blob/master/src/main/java/fr/gatay/DebugComponentBeforeRenderListener.java&quot;&gt;DebugComponentBeforeRenderListener&lt;/a&gt; class (it is where the &#39;simple&#39; magic happen). The good thing is you only need to use this class in your project (confirmed working with Wicket 1.4, 1.5, and 6), and to mimic the initializer logic to get started.

Please notice that you can specify which classes you want to track in your markup (by restricting on package names) at the listener&#39;s instanciation.
To test the sample project, you can run the embedded jetty server by running :
&lt;pre class=&quot;brush: shell&quot;&gt;mvn jetty:run&lt;/pre&gt;
&lt;h2&gt;Wicket Open In IDEA&lt;/h2&gt;
&lt;h3&gt;IDEA part&lt;/h3&gt;
The IntelliJ plugin listens for classnames to open on a http socket (10462, overridable in plugin settings).

[caption id=&quot;attachment_719&quot; align=&quot;aligncenter&quot; width=&quot;941&quot;]&lt;img class=&quot;size-full wp-image-719&quot; title=&quot;Plugin settings&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-18-à-19.25.17.png&quot; alt=&quot;&quot; width=&quot;941&quot; height=&quot;419&quot; /&gt; Plugin settings[/caption]

You can get the IDEA plugin in its &lt;a href=&quot;https://github.com/srmvision/wicket-open-in-idea-plugin/downloads&quot;&gt;github repository&lt;/a&gt;, to install it, you have to select &quot;Install plugin from disk&quot; from the &quot;Plugins&quot; category in your IDE settings.
&lt;h3&gt;Chrome part&lt;/h3&gt;
The Chrome extension is really simple, like my TrelloScrum fork, it is not (yet) available on the Chrome Web Store, thus, you have to &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-open-to-idea/downloads&quot;&gt;download the release here&lt;/a&gt; and drag and drop it on your &lt;a href=&quot;chrome://extensions&quot;&gt;chrome://extensions&lt;/a&gt; page.
If you want, you can tweak its settings, via the &quot;Options&quot; page :
&lt;ul&gt;
	&lt;li&gt;IDE Host : if you change the setup of the plugin in your IDE (or run your IDE on another machine than your browser), you might need to change the host and port to reflect this.&lt;/li&gt;
	&lt;li&gt;Context menu presence host : if you want the context menu icon to appear only on sites where it should, you can narrow the domains here.&lt;/li&gt;
&lt;/ul&gt;
To use it, you only have to right click on an item in your &quot;enhanced&quot; web application and select &quot;Wicket debug this&quot;.

[caption id=&quot;attachment_709&quot; align=&quot;aligncenter&quot; width=&quot;315&quot;]&lt;img class=&quot;size-full wp-image-709 &quot; title=&quot;Wicket debug this&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-18-à-18.56.11.png&quot; alt=&quot;&quot; width=&quot;315&quot; height=&quot;270&quot; /&gt; Context menu item[/caption]

From there you&#39;ll get a modal window listing the matching classes names (sorted by parent order, the first is the closer to the element you pointed to, the next one is the parent class and so on). If there is not any opened modal when you try to use it, it means the extension did not detect any classname in the markup.

[caption id=&quot;attachment_711&quot; align=&quot;aligncenter&quot; width=&quot;584&quot;]&lt;img class=&quot; wp-image-711 &quot; title=&quot;Send to IDEA Modal&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-18-à-19.07.40-1024x740.png&quot; alt=&quot;&quot; width=&quot;584&quot; height=&quot;422&quot; /&gt; Class modal selection[/caption]

Each classname, when clicked, is sent to your IDE which will in turn opens the class matching the classname so you can edit it.
The lower part of the modal window will inform you about the status of your last action :
&lt;ul&gt;
	&lt;li&gt;If the plugin is not enabled, or the IDE not running : it will display an error message&lt;/li&gt;
	&lt;li&gt;If all went like expected : it will display a confirmation message&lt;/li&gt;
&lt;/ul&gt;
I hope it will help other teams using this great framework, or it will give ideas to user of others frameworks.&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;p&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;alignright size-full wp-image-90&quot; title=&quot;Wicket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/logo-wicket1.png&quot; alt=&quot;&quot; width=&quot;200&quot; height=&quot;199&quot; /&gt;It is not a secret that the &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt; platform is developped using the &lt;a href=&quot;http://wicket.apache.org/&quot;&gt;Apache Wicket&lt;/a&gt; framework.&lt;/p&gt;&lt;p&gt;As our application became bigger and so our team, it&#39;s getting harder to find the correct Wicket class beneath the view of the page we get in our browsers.&lt;/p&gt;&lt;p&gt;To help the team in this process, I made a simple Chrome extension and a IntelliJ IDEA plugin allowing to send class names to the IDE from the web browser (at the cost of a very simple class in your project, disabled in deployment mode).&lt;/p&gt;&lt;h2&gt;Getting your project ready&lt;/h2&gt;&lt;p&gt;In the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example&quot;&gt;chrome-wicket-idea-example&lt;/a&gt; github repository, you have a very simple example of what needs to be done to enable navigation between your browser and your project opened in your IDE. Have a look at the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example/blob/master/src/main/java/fr/gatay/WicketApplication.java&quot;&gt;WicketApplication&lt;/a&gt; class (specifically in the the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example/blob/master/src/main/java/fr/gatay/WicketApplication.java#L28&quot;&gt;init()&lt;/a&gt; method) and at the &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-idea-example/blob/master/src/main/java/fr/gatay/DebugComponentBeforeRenderListener.java&quot;&gt;DebugComponentBeforeRenderListener&lt;/a&gt; class (it is where the &#39;simple&#39; magic happen). The good thing is you only need to use this class in your project (confirmed working with Wicket 1.4, 1.5, and 6), and to mimic the initializer logic to get started.&lt;/p&gt;&lt;p&gt;Please notice that you can specify which classes you want to track in your markup (by restricting on package names) at the listener&#39;s instanciation.&lt;br /&gt;&lt;br /&gt; To test the sample project, you can run the embedded jetty server by running :&lt;/p&gt;&lt;pre class=&quot;brush: shell&quot;&gt;mvn jetty:run&lt;/pre&gt;&lt;h2&gt;Wicket Open In IDEA&lt;/h2&gt;&lt;h3&gt;IDEA part&lt;/h3&gt;&lt;p&gt;The IntelliJ plugin listens for classnames to open on a http socket (10462, overridable in plugin settings).&lt;/p&gt;[caption id=&quot;attachment_719&quot; align=&quot;aligncenter&quot; width=&quot;941&quot;]&lt;img class=&quot;size-full wp-image-719&quot; title=&quot;Plugin settings&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-18-à-19.25.17.png&quot; alt=&quot;&quot; width=&quot;941&quot; height=&quot;419&quot; /&gt; Plugin settings[/caption]&lt;p&gt;You can get the IDEA plugin in its &lt;a href=&quot;https://github.com/srmvision/wicket-open-in-idea-plugin/downloads&quot;&gt;github repository&lt;/a&gt;, to install it, you have to select &quot;Install plugin from disk&quot; from the &quot;Plugins&quot; category in your IDE settings.&lt;/p&gt;&lt;h3&gt;Chrome part&lt;/h3&gt;&lt;p&gt;The Chrome extension is really simple, like my TrelloScrum fork, it is not (yet) available on the Chrome Web Store, thus, you have to &lt;a href=&quot;https://github.com/CedricGatay/chrome-wicket-open-to-idea/downloads&quot;&gt;download the release here&lt;/a&gt; and drag and drop it on your &lt;a href=&quot;chrome://extensions&quot;&gt;chrome://extensions&lt;/a&gt; page.&lt;br /&gt;&lt;br /&gt; If you want, you can tweak its settings, via the &quot;Options&quot; page :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;IDE Host : if you change the setup of the plugin in your IDE (or run your IDE on another machine than your browser), you might need to change the host and port to reflect this.&lt;/li&gt;&lt;li&gt;Context menu presence host : if you want the context menu icon to appear only on sites where it should, you can narrow the domains here.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To use it, you only have to right click on an item in your &quot;enhanced&quot; web application and select &quot;Wicket debug this&quot;.&lt;/p&gt;[caption id=&quot;attachment_709&quot; align=&quot;aligncenter&quot; width=&quot;315&quot;]&lt;img class=&quot;size-full wp-image-709 &quot; title=&quot;Wicket debug this&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-18-à-18.56.11.png&quot; alt=&quot;&quot; width=&quot;315&quot; height=&quot;270&quot; /&gt; Context menu item[/caption]&lt;p&gt;From there you&#39;ll get a modal window listing the matching classes names (sorted by parent order, the first is the closer to the element you pointed to, the next one is the parent class and so on). If there is not any opened modal when you try to use it, it means the extension did not detect any classname in the markup.&lt;/p&gt;[caption id=&quot;attachment_711&quot; align=&quot;aligncenter&quot; width=&quot;584&quot;]&lt;img class=&quot; wp-image-711 &quot; title=&quot;Send to IDEA Modal&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/11/Capture-d’écran-2012-11-18-à-19.07.40-1024x740.png&quot; alt=&quot;&quot; width=&quot;584&quot; height=&quot;422&quot; /&gt; Class modal selection[/caption]&lt;p&gt;Each classname, when clicked, is sent to your IDE which will in turn opens the class matching the classname so you can edit it.&lt;br /&gt;&lt;br /&gt; The lower part of the modal window will inform you about the status of your last action :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If the plugin is not enabled, or the IDE not running : it will display an error message&lt;/li&gt;&lt;li&gt;If all went like expected : it will display a confirmation message&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I hope it will help other teams using this great framework, or it will give ideas to user of others frameworks.&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Trying to learn Scala</title>
   <link href="http://bloggure.info/work/2012/10/21/learn-scala.html"/>
   <updated>2012-10-21T00:00:00+02:00</updated>
   <id>http://bloggure.info/work/2012/10/21/learn-scala</id>
   <content type="html">&lt;!--:en--&gt;There is a lot of buzz around &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;Scala&lt;/a&gt; these days. The language is now known to divide a lot of programmers (specially ones with a Java background). To chose the side I&#39;m on, I read the excellent book from Martin Odersky, Lex Spoon and Bill Veners : &lt;a href=&quot;http://www.amazon.com/Programming-Scala-Comprehensive-Step---Step/dp/0981531644/ref=sr_1_1?ie=UTF8&amp;amp;qid=1350837328&amp;amp;sr=8-1&amp;amp;keywords=programming+in+scala&quot;&gt;Programming in Scala&lt;/a&gt;. The book is really well written, it explains a lot of great things about the language, but reading without exercising is not really efficient (of course you can try the examples yourself, but as I read it in bed, it is not that easy to do).

&lt;img class=&quot;alignright  wp-image-681&quot; title=&quot;LearningScala&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/small-icon.hover_.png&quot; alt=&quot;&quot; width=&quot;240&quot; height=&quot;135&quot; /&gt;

In the meantime, I found that Martin Odersky, via coursera, gives a free course &quot;&lt;a href=&quot;https://www.coursera.org/course/progfun&quot;&gt;Functional Programming Principles in Scala&lt;/a&gt;&quot;. I am actually attending it, and, I have to say I enjoy learning this language. I am starting to think differently when coding, I found myself really more critic regarding the side effects of my methods for example.

If you&#39;re curious about Scala or about functional programming paradigm, you should attend this course and do the assignments, it takes time but really worth it.&lt;!--:--&gt;&lt;!--:fr--&gt;There is a lot of buzz around &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;Scala&lt;/a&gt; these days. The language is now known to divide a lot of programmers (specially ones with a Java background). To chose the side I&#39;m on, I read the excellent book from Martin Odersky, Lex Spoon and Bill Veners : &lt;a href=&quot;http://www.amazon.com/Programming-Scala-Comprehensive-Step---Step/dp/0981531644/ref=sr_1_1?ie=UTF8&amp;amp;qid=1350837328&amp;amp;sr=8-1&amp;amp;keywords=programming+in+scala&quot;&gt;Programming in Scala&lt;/a&gt;. The book is really well written, it explains a lot of great things about the language, but reading without exercising is not really efficient (of course you can try the examples yourself, but as I read it in bed, it is not that easy to do).

&lt;img class=&quot;alignright  wp-image-681&quot; title=&quot;LearningScala&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/small-icon.hover_.png&quot; alt=&quot;&quot; width=&quot;240&quot; height=&quot;135&quot; /&gt;

In the meantime, I found that Martin Odersky, via coursera, gives a free course &quot;&lt;a href=&quot;https://www.coursera.org/course/progfun&quot;&gt;Functional Programming Principles in Scala&lt;/a&gt;&quot;. I am actually attending it, and, I have to say I enjoy learning this language. I am starting to think differently when coding, I found myself really more critic regarding the side effects of my methods for example.

If you&#39;re curious about Scala or about functional programming paradigm, you should attend this course and do the assignments, it takes time but really worth it.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Trello as a Scrum sprint board</title>
   <link href="http://bloggure.info/.js/2012/10/18/using-trello-as-a-scrum-sprint-board.html"/>
   <updated>2012-10-18T00:00:00+02:00</updated>
   <id>http://bloggure.info/.js/2012/10/18/using-trello-as-a-scrum-sprint-board</id>
   <content type="html">&lt;!--:en--&gt;&lt;p&gt;At &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt;, we use agile methods since day one, mainly Scrum, which we rearranged to fit our needs and goals at times. We&#39;ve always looked for the perfect computerized alternative to good old stickies.&lt;/p&gt;&lt;h2&gt;TrelloScrum Chrome Extension&lt;img class=&quot;alignright size-full wp-image-644&quot; title=&quot;Trello-Icon&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/Trello-Icon1.png&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;&lt;/h2&gt;&lt;p&gt;When it came out, it was clear to me that &lt;a href=&quot;http://www.trello.com&quot;&gt;Trello&lt;/a&gt; could be the cornerstone of our internal workflow, we started from the very good &lt;a href=&quot;https://chrome.google.com/webstore/detail/trello-scrum/jdbcdblgjdpmfninkoogcfpnkjmndgje&quot;&gt;TrelloScrum plugin available on the Chrome Web Store&lt;/a&gt; to count story points. This plugin is really useful in planning sprints, it allows the Scrum master to track story points scheduled in order to fill every single day in the sprint.&lt;/p&gt;&lt;h2&gt;Forking the extension&lt;/h2&gt;&lt;p&gt;After a few sprints, we realized we needed more than what was included in the plugin. The main thing needed was tracking consumed story points to get a really rapid and efficient feedback on our sprint (real-time burndown values). Thanks to the guys behind the plugin (&lt;a href=&quot;http://q42.nl/blog&quot;&gt;Q42&lt;/a&gt;) and to Github, I was able to fork the project and add these features :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;if you note points in square brackets : [3] they are considered as consumed points (contributed back to the plugin available in the Chrome Web Store)&lt;/li&gt;&lt;li&gt;on card detail, hitting the &quot;Done&quot; button flags the whole card points consumed and moves the card to the bottom of the list, then the card view is closed so you can focus on something else (only available in my fork)&lt;/li&gt;&lt;li&gt;plugged to the Trello client API, less flickering when updating cards&lt;/li&gt;&lt;/ul&gt;[caption id=&quot;attachment_631&quot; align=&quot;aligncenter&quot; width=&quot;315&quot;]&lt;img class=&quot;size-full wp-image-631 &quot; title=&quot;list&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/list.png&quot; alt=&quot;&quot; width=&quot;315&quot; height=&quot;290&quot; /&gt; List and cards points counts[/caption]&lt;p&gt;With this plugin, you&#39;ll get two counters on the top of each list and on a top of the board : consumed points in light blue and scheduled poins in blue. The scheduled and consumed terms are the one we use at &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt;, but you can use it the way you like to manage your sprints.&lt;/p&gt;&lt;h2&gt;Using the extension&lt;/h2&gt;&lt;p&gt;If you want to use my fork of the extension, you&#39;ll need to get it in my &lt;a href=&quot;https://github.com/CedricGatay/TrelloScrum/downloads&quot;&gt;Github account&lt;/a&gt;. As it is not available in the store, you&#39;ll need to drag and drop the downloaded file on the &lt;a href=&quot;chrome://extensions&quot;&gt;chrome://extensions&lt;/a&gt; page.&lt;/p&gt;[caption id=&quot;attachment_633&quot; align=&quot;alignright&quot; width=&quot;133&quot;]&lt;img class=&quot;size-full wp-image-633 &quot; style=&quot;text-align: center;&quot; title=&quot;unauthenticated&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/unauthenticated.png&quot; alt=&quot;&quot; width=&quot;133&quot; height=&quot;46&quot; /&gt; Unauthenticated plugin[/caption]&lt;p&gt;Next, you&#39;ll need to authenticate the plugin to your Trello account, to do so, there is a little circle on top of your profile picture which is on the top right corner of Trello.&lt;/p&gt;&lt;p&gt;You can use the plugin without allowing it to authenticate, if you do so, you won&#39;t be able to flag cards as Done using the button and thus, cards won&#39;t be moved to the bottom. To authenticate, you need to click the circle, it will popup the authenticate dialog, just follow the steps in this popup (and close it manually when you see a blank page - limitation of the extension).&lt;/p&gt;[caption id=&quot;attachment_632&quot; align=&quot;alignright&quot; width=&quot;139&quot;]&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/authenticated.png&quot;&gt;&lt;img class=&quot;size-full wp-image-632 &quot; title=&quot;authenticated&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/authenticated.png&quot; alt=&quot;&quot; width=&quot;139&quot; height=&quot;48&quot; /&gt;&lt;/a&gt; Authenticated plugin[/caption]&lt;p&gt;Once authenticated, you should see a green circle and a &quot;Done&quot; button on cards details.&lt;/p&gt;&lt;p&gt;If you have feature requests or bugs, don&#39;t hesitate to use the &lt;a href=&quot;https://github.com/CedricGatay/TrelloScrum/issues&quot;&gt;Github issue tracker&lt;/a&gt;.&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;p&gt;Chez &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt;, nous utilisons les méthodes agile depuis le début, principalement Scrum, que nous avons quelque peu modifié pour coller à nos besoins au fil du temps. Nous avons cherché depuis le début une bonne alternative informatisée aux bons vieux post-it.&lt;/p&gt;
&lt;h2&gt;TrelloScrum Chrome Extension&lt;img class=&quot;alignright size-full wp-image-644&quot; title=&quot;Trello-Icon&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/Trello-Icon1.png&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;&lt;/h2&gt;
&lt;p&gt;Quand je l&#39;ai découvert, j&#39;ai rapidement pensé que &lt;a href=&quot;http://www.trello.com&quot;&gt;Trello&lt;/a&gt; pouvait être un des piliers de notre organisation interne. Nous avons d&#39;abord commencé par utiliser la très bonne extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/trello-scrum/jdbcdblgjdpmfninkoogcfpnkjmndgje&quot;&gt;TrelloScrum disponible sur le Chrome Web Store&lt;/a&gt; pour effectuer le décompte des points de nos sprints. Ce plugin est réellement utile dans la planification de sprint, il permet au Scrum-master de facilement gérer le nombre de points utilisés pour remplir efficacement chaque jour du sprint.&lt;/p&gt;
&lt;h2&gt;Contribuer à l&#39;extension&lt;/h2&gt;
&lt;p&gt;Après quelques sprints, nous nous sommes rendus compte que nous avions besoin d&#39;un petit peu plus que ce que le plugin offrait. La principale chose dont nous avions besoin était d&#39;identifier les points consommés au jour le jour afin d&#39;avoir une analyse rapide (on obtient donc un burndown en temps réel). Grace aux développeurs de l&#39;extension originale (&lt;a href=&quot;http://q42.nl/blog&quot;&gt;Q42&lt;/a&gt;) et à la magie de Github, j&#39;ai pu contribuer à l&#39;extension en ajoutant ces fonctionnalités :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;en notant les points entre crochets : [3] ceux-ci seront considérés en tant que points utilisés (cette amélioration est maintenant présente dans la version disponible sur le Chrome Web Store)&lt;/li&gt;
&lt;li&gt;dans le détail d&#39;une carte, le bouton &quot;Done&quot; permet de marquer l&#39;intégralité des points de la carte utilisés, de fermer la carte, et de la bouger à la fin de la liste, pour permettre de se concentrer sur la prochaine tâche à effectuer (uniquement disponible dans ma version modifiée)&lt;/li&gt;
&lt;li&gt;utilisation de l&#39;API cliente Trello, les modifications provoquent moins de clignotements dans l&#39;interface&lt;/li&gt;
&lt;/ul&gt;
[caption id=&quot;attachment_631&quot; align=&quot;aligncenter&quot; width=&quot;315&quot;]&lt;img class=&quot;size-full wp-image-631 &quot; title=&quot;list&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/list.png&quot; alt=&quot;&quot; width=&quot;315&quot; height=&quot;290&quot; /&gt; Décompte de points sur la liste et les cartes[/caption]
&lt;p&gt;Grace à cette version, vous aurez deux décomptes dans le coin supérieur droit de chaque liste ainsi qu&#39;en haut de l&#39;ardoise en cours. Les points utilisés sont présentés en bleu clair et les points restant en bleu foncé. Les notions de points &quot;utilisés&quot; et &quot;restant&quot; sont les termes que nous utilisons pour gérer nos sprints chez SRMvision, mais vous pouvez bien entendu changer la signification des décomptes pour coller à votre façon de gérer vos sprints.&lt;/p&gt;
&lt;h2&gt;Utiliser l&#39;extension&lt;/h2&gt;
&lt;p&gt;Si vous désirez utiliser ma version de l&#39;extension, vous devrez la récupérer en allant la télécharger depuis mon &lt;a href=&quot;https://github.com/CedricGatay/TrelloScrum/downloads&quot;&gt;compte Github&lt;/a&gt;. Puisqu&#39;elle n&#39;est pas disponible dans le Chrome Web Store, vous devrez effectuer un glisser déplacer du fichier téléchargé sur la page &lt;a href=&quot;chrome://extensions&quot;&gt;chrome://extensions&lt;/a&gt; de votre navigateur.&lt;/p&gt;
[caption id=&quot;attachment_633&quot; align=&quot;alignright&quot; width=&quot;133&quot;]&lt;img class=&quot;size-full wp-image-633 &quot; style=&quot;text-align: center;&quot; title=&quot;unauthenticated&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/unauthenticated.png&quot; alt=&quot;&quot; width=&quot;133&quot; height=&quot;46&quot; /&gt; Plugin non autorisé[/caption]
&lt;p&gt;Ensuite, vous devrez autoriser le plugin auprès de votre compte Trello. Pour ce faire, il y a un petit cercle présent au dessus de votre image de profil (dans le coin supérieur droit).&lt;/p&gt;
&lt;p&gt;Vous pouvez utiliser le plugin sans l&#39;autoriser, si c&#39;est le cas, vous n&#39;aurez pas le bouton &quot;Done&quot; dans le détail d&#39;une carte et vous ne bénéficierez pas du déplacement automatique des cartes.&lt;/p&gt;
&lt;p&gt;Pour autoriser le plugin, vous devez cliquer sur le cercle, la fenêtre d&#39;autorisation s&#39;ouvrira, dans laquelle il suffit de suivre les étapes pour autoriser le plugin (vous devrez fermer manuellement la fenêtre qui s&#39;est ouverte - limite de l&#39;extension pour l&#39;instant).&lt;/p&gt;
[caption id=&quot;attachment_632&quot; align=&quot;alignright&quot; width=&quot;139&quot;]&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/authenticated.png&quot;&gt;&lt;img class=&quot;size-full wp-image-632 &quot; title=&quot;authenticated&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/10/authenticated.png&quot; alt=&quot;&quot; width=&quot;139&quot; height=&quot;48&quot; /&gt;&lt;/a&gt; Plugin autorisé[/caption]
&lt;p&gt;Une fois le plugin autorisé, vous devriez voir le plugin passer au vert, et vous devriez avoir le bouton &quot;Done&quot; présent sur le détail des cartes.&lt;/p&gt;
&lt;p&gt;Si vous avez des idées de fonctionnalités ou détecté un bug, n&#39;hésitez pas à vous servir du &lt;a href=&quot;https://github.com/CedricGatay/TrelloScrum/issues&quot;&gt;système de ticket de Github&lt;/a&gt;.&lt;/p&gt;
&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Vert.x in Homebrew</title>
   <link href="http://bloggure.info/work/2012/05/13/vert-x-in-homebrew.html"/>
   <updated>2012-05-13T00:00:00+02:00</updated>
   <id>http://bloggure.info/work/2012/05/13/vert-x-in-homebrew</id>
   <content type="html">&lt;!--:en--&gt;I just made a pull request for integrating &lt;a href=&quot;http://vertx.io&quot;&gt;Vert.x&lt;/a&gt; into Homebrew. You can see it here : &lt;a href=&quot;https://github.com/mxcl/homebrew/pull/12227&quot;&gt;https://github.com/mxcl/homebrew/pull/12227&lt;/a&gt;, when it will be merged, a simple brew install vert.x will allow you to enjoy this sweet framework.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>GitlabHQ - SQLite to mySQL</title>
   <link href="http://bloggure.info/.git/work/2012/05/08/gitlabhq-sqlite-to-mysql.html"/>
   <updated>2012-05-08T00:00:00+02:00</updated>
   <id>http://bloggure.info/.git/work/2012/05/08/gitlabhq-sqlite-to-mysql</id>
   <content type="html">&lt;!--:en--&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/gitlabhq-logo.png&quot; alt=&quot;&quot; title=&quot;gitlabhq-logo&quot; width=&quot;175&quot; height=&quot;60&quot; class=&quot;alignright size-full wp-image-528&quot; /&gt;&lt;p&gt;As our &lt;a href=&quot;http://gitlabhq.com/&quot;&gt;GitlabHQ&lt;/a&gt; setup at &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt; is mean to stay, we wanted to migrate from the standard SQLite database to an easier to manage for us : mySQL.&lt;br /&gt; The steps are quite straighforward, first, setup mySQL :&lt;/p&gt;
&lt;pre class=&quot;brush: sql&quot;&gt;
create database gitlab; 
grant all privileges on gitlab.* to &quot;gitlab&quot; identified by &quot;gitlab&quot;; 
flush privileges;&lt;/pre&gt;
Then prepare to dump the data out of GitlabHQ, stop your webserver, then, from your GitlabHQ folder : 
&lt;pre class=&quot;brush: bash&quot;&gt;bundle exec rake db:data:dump RAILS_ENV=production&lt;/pre&gt;
this will create a db/data.yml file. All you have to do now is reconfigure GitlabHQ to connect to mySQL and reimport the data. The database configuration takes place in the config/database.yml file, backup your existing file and rename the database.yml.example :
&lt;pre class=&quot;brush: bash&quot;&gt;
mv config/database.yml config/database.yml.old
cp config/database.yml.example config/database.yml
&lt;/pre&gt;
Then edit the file to reflect your new configuration, only the production section is relevant in our case :
&lt;pre class=&quot;brush: bash&quot; highlight=&quot;27,28,30,31,32&quot; title=&quot;database.yml&quot;&gt;
development:
  adapter: mysql2
  encoding: utf8
  reconnect: false
  database: gitlabhq_development
  pool: 5
  username: root
  password: &quot;secure password&quot;
  # socket: /tmp/mysql.sock

# Warning: The database defined as &quot;test&quot; will be erased and
# re-generated from your development database when you run &quot;rake&quot;.
# Do not set this db to the same as development or production.
test:
  adapter: mysql2
  encoding: utf8
  reconnect: false
  database: gitlabhq_test
  pool: 5
  username: root
  password: &quot;secure password&quot;
  # socket: /tmp/mysql.sock

production:
  adapter: mysql2
  encoding: utf8
  reconnect: true # allows to autoreconnect if the mysql service restarts
  database: gitlab # to replace with your database name
  pool: 5
  username: gitlab # to replace with your credentials
  password: &quot;gitlab&quot; # to replace with your credentials
  socket: /var/run/mysqld/mysqld.sock # mysql socket location on debian
&lt;/pre&gt;
Once this is done, you have to create the schema and restore your data :
&lt;pre class=&quot;brush: bash&quot;&gt;
bundle exec rake db:setup RAILS_ENV=production
bundle exec rake db:data:load RAILS_ENV=production
&lt;/pre&gt;
Job&#39;s done, you just need to restart the GitlabHQ server now (nginx, apache...). If you encounter a problem and this does not work as expected, you just have to restore the database.yml.old file to go back to SQLite.&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/gitlabhq-logo.png&quot; alt=&quot;&quot; title=&quot;gitlabhq-logo&quot; width=&quot;175&quot; height=&quot;60&quot; class=&quot;alignright size-full wp-image-528&quot; /&gt;&lt;p&gt;Comme notre installation de &lt;a href=&quot;http://gitlabhq.com/&quot;&gt;GitlabHQ&lt;/a&gt; à &lt;a href=&quot;http://www.srmvision.com&quot;&gt;SRMvision&lt;/a&gt; est faite pour rester, nous avons décidé de migrer de la base SQLite vers un système plus simple à gérer pour nous : mySQL.&lt;br /&gt; Les étapes sont assez simple, premièrement, configurons mySQL :&lt;/p&gt;
&lt;pre class=&quot;brush: sql&quot;&gt;
create database gitlab; 
grant all privileges on gitlab.* to &quot;gitlab&quot; identified by &quot;gitlab&quot;; 
flush privileges;&lt;/pre&gt;
Ensuite récupérons les données existantes dans GitlabHQ, arrêtez votre serveur, puis, depuis le dossier de GitlabHQ : 
&lt;pre class=&quot;brush: bash&quot;&gt;bundle exec rake db:data:dump RAILS_ENV=production&lt;/pre&gt;
ceci va créer un fichier db/data.yml. Tout ce qu&#39;il vous reste à faire maintenant est de reconfigurer GitlabHQ pour lui dire de se connecter à mySQL et d&#39;y intégrer les données existantes.
La configuration de la base de données à utiliser se trouve dans le fichier config/database.yml, sauvegardez le et récupérez le database.yml.example comme base de travail:
&lt;pre class=&quot;brush: bash&quot;&gt;
mv config/database.yml config/database.yml.old
cp config/database.yml.example config/database.yml
&lt;/pre&gt;
Il ne vous reste qu&#39;à éditer le fichier pour refléter votre configuration, seule la partie production du fichier est utile dans notre cas :
&lt;pre class=&quot;brush: bash&quot; highlight=&quot;27,28,30,31,32&quot; title=&quot;database.yml&quot;&gt;
development:
  adapter: mysql2
  encoding: utf8
  reconnect: false
  database: gitlabhq_development
  pool: 5
  username: root
  password: &quot;secure password&quot;
  # socket: /tmp/mysql.sock

# Warning: The database defined as &quot;test&quot; will be erased and
# re-generated from your development database when you run &quot;rake&quot;.
# Do not set this db to the same as development or production.
test:
  adapter: mysql2
  encoding: utf8
  reconnect: false
  database: gitlabhq_test
  pool: 5
  username: root
  password: &quot;secure password&quot;
  # socket: /tmp/mysql.sock

production:
  adapter: mysql2
  encoding: utf8
  reconnect: true # permet de se reconnecter quand le service mysql redémarre
  database: gitlab # à remplacer avec le nom de votre base
  pool: 5
  username: gitlab # à remplacer avec vos identifiants
  password: &quot;gitlab&quot; # à remplacer avec vos identifiants
  socket: /var/run/mysqld/mysqld.sock # mysql socket location on debian
&lt;/pre&gt;
Une fois ceci fait, il vous reste à créer le schéma et à importer vos données sauvegardées :
&lt;pre class=&quot;brush: bash&quot;&gt;
bundle exec rake db:setup RAILS_ENV=production
bundle exec rake db:data:load RAILS_ENV=production
&lt;/pre&gt;
C&#39;est tout, il ne reste plus qu&#39;à redémarrer le serveur de GitlabHQ. Si toutefois ça ne fonctionnait pas, vous n&#39;avez qu&#39;à restaurer le fichier database.yml.old pour retourner à la configuration par défaut utilisant SQLite.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Control Trac ticket workflow from your Git commits</title>
   <link href="http://bloggure.info/.git/ci/2012/05/06/control-trac-ticket-workflow-from-your-git-commits.html"/>
   <updated>2012-05-06T00:00:00+02:00</updated>
   <id>http://bloggure.info/.git/ci/2012/05/06/control-trac-ticket-workflow-from-your-git-commits</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-full wp-image-594&quot; title=&quot;Trac_Logo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Trac_Logo_512x512.png&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;&lt;p&gt;As I said in an &lt;a title=&quot;GitLabHQ and a good branching model&quot; href=&quot;http://www.bloggure.info/work/gitlabhq.html&quot;&gt;earlier post&lt;/a&gt;, at SRMvision, we use feature branches to isolate our work and be able to publish it to our production environment with a clear change history.&lt;/p&gt;&lt;p&gt;One thing we use since the beginning (at the subversion time, pre-git era), is the control of our ticket tracker (&lt;a href=&quot;http://trac.edgewall.org/&quot;&gt;Trac&lt;/a&gt;) from our commit messages. We have the following verbs to control our tickets (synonyms are available, but we rarely use them) :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;see #NUM to link to a ticket&lt;/li&gt;&lt;li&gt;fix #NUM to close a ticket&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Repository references to commits are automatically added into ticket&#39;s history in our Trac instance.&lt;/p&gt;&lt;p&gt;&lt;img title=&quot;Git_Commit_message&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Capture-d’écran-2012-05-06-à-13.14.46.png&quot; alt=&quot;&quot; width=&quot;774&quot; height=&quot;164&quot; /&gt;&lt;/p&gt;&lt;p&gt;To be sure of the quality of our code, we set up a custom workflow in Trac. Once a dev/bugfix is done, we set the corresponding ticket to the &quot;Testing&quot; status. The next step is simple, either the test passes and the ticket is closed, or it does not and it returns to the developer. So, we added another verb to our commit handler : &quot;test&quot; to automatically set a ticket to the &quot;Testing&quot; status.&lt;/p&gt;&lt;p&gt;Our adoption of feature branches has forced us to rethink our workflow. Passing a ticket to &quot;testing&quot; while it is not even merged into our &quot;testable&quot; branch was really polluting Trac. That&#39;s why we added the status &quot;Fixed on branch&quot; to allow us to differentiate really testable ticket from not ready ones.&lt;/p&gt;&lt;p&gt;We finally adopted the following mecanism, keeping only our three verbs (see, fix, test) :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;test on a branch other than master, ticket&#39;s status is set to &quot;Fixed on branch&quot;&lt;/li&gt;&lt;li&gt;on a branch merge to master, &quot;Fixed on branch&quot; tickets are reopened and set to &quot;Testing&quot;&lt;/li&gt;&lt;li&gt;on the branch master, test sets the ticket to &quot;Testing&quot;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;On a classic development, we can have 50 &quot;Fixed on branch&quot; tickets that automatically pass to &quot;Testing&quot; once merged onto master. Using this technique allows us to check if every single ticket related to the feature has been correctly handled from development to quality testing.&lt;/p&gt;&lt;p&gt;If you want to deploy a similar technique in your environment, files we are using are available at the following address : &lt;a href=&quot;https://github.com/CedricGatay/sandbox/tree/master/trac-git-hook&quot;&gt;https://github.com/CedricGatay/sandbox/tree/master/trac-git-hook&lt;/a&gt;&lt;/p&gt;&lt;p&gt;You will find the following files :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;post-receive : git hook, to copy into the hooks/ directory of your &quot;central&quot; repository (the one connected to Trac), triggers delayed launch (1 minute later) of the next script (avoiding to block the commit),&lt;/li&gt;&lt;li&gt;trac-post-commit-hook : Trac hook parsing commit messages to control tickets&lt;/li&gt;&lt;li&gt;trac.options.ini : excerpt from Trac configuration file allowing to customize workflow&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Please notice il will be necessary for you to edit script settings referring to git repository in Trac (called &#39;git-clone&#39; for us) and paths corresponding to your environment.&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img class=&quot;alignright size-full wp-image-594&quot; title=&quot;Trac_Logo&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Trac_Logo_512x512.png&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;Comme mentionné dans un &lt;a title=&quot;GitLabHQ and a good branching model&quot; href=&quot;http://www.bloggure.info/work/gitlabhq.html&quot;&gt;précédent billet&lt;/a&gt;, chez SRMvision, nous utilisons intensivement les features branches pour isoler nos développements et nous permettre de basculer facilement une fonctionnalité en production avec un historique clair des modifications.

Une des pratiques que nous avions mis en place depuis le début (à l&#39;époque ou nous utilisions subversion) est l&#39;interaction avec notre gestionnaire d&#39;incidents (&lt;a href=&quot;http://trac.edgewall.org/&quot;&gt;Trac&lt;/a&gt;) depuis nos commits. Ainsi, nous utilisons les commandes suivantes dans nos messages de commits (des synonymes existent, mais nous les utilisons peu) :
&lt;ul&gt;
	&lt;li&gt;see #NUM pour référencer un ticket&lt;/li&gt;
	&lt;li&gt;fix #NUM pour clore un ticket&lt;/li&gt;
&lt;/ul&gt;
Les références vers les commits concernés sont donc intégrées automatiquement dans l&#39;historique des tickets sur Trac.

&lt;img class=&quot;aligncenter size-full wp-image-600&quot; title=&quot;Git_Commit_message&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Capture-d’écran-2012-05-06-à-13.14.46.png&quot; alt=&quot;&quot; width=&quot;774&quot; height=&quot;164&quot; /&gt;

Pour s&#39;assurer de la qualité de nos développements, nous avons mis en place un workflow personnalisé dans Trac. Une fois un développement / bugfix terminé, nous passons le ticket le concernant en statut &quot;Testing&quot;. Le résultat est simple, soit le test est concluant et le ticket est clos, soit il ne l&#39;est pas et il retourne donc au développeur. Ainsi, aux commandes décrites précédemment, nous avons ajouté la possibilité de passer un ticket en test en mettant la commande &quot;test&quot; dans nos commits.

Le fait d&#39;avoir maintenant beaucoup de branches nous a conduit à repenser notre façon de fonctionner pour avoir un contrôle plus efficace des tickets. En effet, contrôler le workflow des tickets pour les passer en test alors qu&#39;ils ne sont pas encore sur la branche &quot;recettable&quot; a commencé à introduire plus de bruit sur Trac que de bénéfices réels. Nous avons donc rajouté un statut &quot;Fixed on branch&quot; nous permettant de différencier les tickets réellement testables de ceux qui ne sont pas encore prêts.

Après quelques hésitations, nous avons fini par obtenir le mécanisme suivant, tout en gardant les mêmes trois verbes principaux (see, fix, test) :
&lt;ul&gt;
	&lt;li&gt;Lors d&#39;un commit incluant le verbe &quot;test&quot; sur une branche autre que le master, le statut du ticket est passé à &quot;Fixed on branch&quot; et le ticket est clos.&lt;/li&gt;
	&lt;li&gt;Lors du merge de la branche sur le master, les tickets &quot;Fixed on branch&quot; sont automatiquement repassés en &quot;Testing&quot;&lt;/li&gt;
	&lt;li&gt;Le comportement sur la branche master reste identique&lt;/li&gt;
&lt;/ul&gt;
Sur un développement de fonctionnalité classique, nous pouvons avoir 50 tickets &quot;Fixed on branch&quot; qui se réouvrent automatiquement en &quot;Testing&quot; lors du passage de la fonctionnalité sur le master. Cette technique nous permet de suivre facilement le développement d&#39;une fonctionnalité de sa réalisation à sa livraison.

Si vous désirez mettre en place un mécanisme similaire dans votre environnement, les fichiers que nous utilisons sont disponibles à l&#39;adresse suivante : &lt;a href=&quot;https://github.com/CedricGatay/sandbox/tree/master/trac-git-hook&quot;&gt;https://github.com/CedricGatay/sandbox/tree/master/trac-git-hook&lt;/a&gt;

Vous trouverez les trois fichiers suivants:
&lt;ul&gt;
	&lt;li&gt;post-receive : hook git à proprement parler, à placer dans le dossier hooks/ de votre dépôt central, déclenche le lancement différé (1 minute plus tard) du script suivant (pour éviter de bloquer le commit),&lt;/li&gt;
	&lt;li&gt;trac-post-commit-hook : hook trac effectuant le traitement des messages de commit pour intéragir avec les tickets&lt;/li&gt;
	&lt;li&gt;trac.options.ini : extrait du fichier de configuration Trac permettant de personnaliser le workflow des tickets&lt;/li&gt;
&lt;/ul&gt;
Notez qu&#39;il sera certainement nécessaire de modifier les variables des scripts python permettant de référencer le dépôt git dans Trac (dans notre cas il est nommé git-clone), ainsi que les chemins utilisés dans votre environnement.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>How Github uses Pull Request</title>
   <link href="http://bloggure.info/.git/thoughts/www/2012/05/04/how-github-uses-pull-request.html"/>
   <updated>2012-05-04T00:00:00+02:00</updated>
   <id>http://bloggure.info/.git/thoughts/www/2012/05/04/how-github-uses-pull-request</id>
   <content type="html">&lt;!--:en--&gt;I just read a very interesting blog post on the Github Blog : &quot;&lt;a href=&quot;https://github.com/blog/1124-how-we-use-pull-requests-to-build-github&quot; rel=&quot;bookmark&quot;&gt;How we use Pull Requests to build GitHub&lt;/a&gt;&quot;
I think their solution to track features is very clever, I will try to mimic their solution using &lt;a href=&quot;http://gitlabhq.com/&quot;&gt;GitlabHQ&lt;/a&gt; merge requests.&lt;!--:--&gt;&lt;!--:fr--&gt;Je viens juste de lire un billet très intéressant sur le Blog de Github : &quot;&lt;a href=&quot;https://github.com/blog/1124-how-we-use-pull-requests-to-build-github&quot; rel=&quot;bookmark&quot;&gt;How we use Pull Requests to build GitHub&lt;/a&gt;&quot;
Je trouve leur solution pour suivre le développement des fonctionnalités très malin, je pense essayer d&#39;adopter leur technique en utilisant les &quot;merge request&quot; de &lt;a href=&quot;http://gitlabhq.com/&quot;&gt;GitlabHQ&lt;/a&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Bitbucket : free personal Git (and Mercurial) repositories</title>
   <link href="http://bloggure.info/.git/work/2012/05/04/bitbucket-free-personal-git-and-mercurial-repositories.html"/>
   <updated>2012-05-04T00:00:00+02:00</updated>
   <id>http://bloggure.info/.git/work/2012/05/04/bitbucket-free-personal-git-and-mercurial-repositories</id>
   <content type="html">&lt;!--:en--&gt;Some of you might have noticed that since I tried git I don&#39;t want to got back to another Version Control System for my work. At my company we now officially all use Git for about nine months without any hickup, we have our own hosted infrastructure using the wonderful &lt;a href=&quot;http://gitlabhq.com&quot;&gt;gitlabhq&lt;/a&gt;.&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Bitbucket.png&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-586&quot; title=&quot;Bitbucket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Bitbucket.png&quot; alt=&quot;&quot; width=&quot;256&quot; height=&quot;256&quot; /&gt;&lt;/a&gt;

For my personal projects (&lt;a href=&quot;https://play.google.com/store/apps/developer?id=Cedric+Gatay&quot;&gt;mainly Android applications&lt;/a&gt;), I only had local git repositories allowing me to really develop without being afraid of losing history. However, these local repositories were not synced anywhere but on my own hard drive (that&#39;s not really a secure way of handling things). My first attempt was to do as often as I though tarballs of my repositories and sync them on Dropbox.The problem in the chain was the fact the backup were done at times, which, in practice, means really rarely.

I had looked for free git hosting providing private repositories, but I did not find a free one that satisfies my main prerequisite : unlimited (or large) private repositories count.

A few days ago, I cleaned my whole personal development folder and I began searching another time for a free hosting. I found out that &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;, which at the time I first looked at it was only providing Mercurial hosting, now offers free git hosting with unlimited repositories.

The &quot;one more thing&quot; of this hosting solution (but not only) will only be interesting for Mac users.
&lt;a href=&quot;http://www.atlassian.com/&quot;&gt;Atlassian&lt;/a&gt; released a free GUI client for Git and Mercurial &lt;a href=&quot;http://www.sourcetreeapp.com/&quot;&gt;SourceTree.app&lt;/a&gt;, and, although I am not fan of a GUI for Git, but I must say I use it regularly (its branch view is awesome).&lt;!--:--&gt;&lt;!--:fr--&gt;Certains d&#39;entre vous auront remarqué que depuis que j&#39;ai essayé Git je ne veux pas revenir à un autre système de gestion de version. Dans ma société nous utilisons maintenant officiellement Git depuis un peu plus de neuf mois sans aucun heurt, nous utilisons cependant notre propre architecture d&#39;hébergement en utilisant l&#39;excellent &lt;a href=&quot;http://gitlabhq.com&quot;&gt;gitlabhq&lt;/a&gt;.&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Bitbucket.png&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-586&quot; title=&quot;Bitbucket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/Bitbucket.png&quot; alt=&quot;&quot; width=&quot;256&quot; height=&quot;256&quot; /&gt;&lt;/a&gt;

Pour mes projets personnel (&lt;a href=&quot;https://play.google.com/store/apps/developer?id=Cedric+Gatay&quot;&gt;principalement des applications Android&lt;/a&gt;), j&#39;utilisais uniquement des dépôts git locaux. Ceux-ci me permettaient de développer sans me soucier de perdre l&#39;historique de ce que j&#39;avais pu faire. Cependant, ces dépôts locaux n&#39;étaient synchronisés nulle part ailleurs (ce n&#39;est pas vraiment une façon sûre de stocker des choses auxquelles on tient). Ma première solution était de faire des archives aussi souvent que j&#39;y pensais de mes dépôts et de les copier sur Dropbox. Le principal problème dans ma technique cette technique est que je le faisais quand j&#39;y pensais, ce qui, en réalité, arrivait assez rarement.

J&#39;avais recherché des solutions d&#39;hébergement Git gratuites mais je n&#39;avais pas trouvé une seule gratuite qui satisfasse ma condition principale : disposer d&#39;un nombre illimité de dépôts privés.

Il y a quelques jours, j&#39;ai fait du ménage dans mes développements personnels et j&#39;ai recommencé à chercher à nouveau un hébergement gratuit. J&#39;ai fini par me rendre compte que &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;, qui à l&#39;époque de ma première recherche ne fournissait que Mercurial, propose maintenant l&#39;hébergement d&#39;un nombre illimité de dépôt Git également dans sa version gratuite.

Le &quot;one more thing&quot; de cette solution (mais pas seulement) ne sera intéressant que pour les utilisateurs de Mac.

&lt;a href=&quot;http://www.atlassian.com/&quot;&gt;Atlassian&lt;/a&gt; a développé un excellent client graphique gratuit pour Git et Mercurial &lt;a href=&quot;http://www.sourcetreeapp.com/&quot;&gt;SourceTree.app&lt;/a&gt;, et, bien que je ne sois pas fan d&#39;une interface graphique pour utiliser Git, je dois reconnaître que je l&#39;utilise régulièrement (la visualisation des branches est géniale).&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>(Parts of) Android in C# ?</title>
   <link href="http://bloggure.info/.android/www/2012/05/02/parts-of-android-in-c.html"/>
   <updated>2012-05-02T00:00:00+02:00</updated>
   <id>http://bloggure.info/.android/www/2012/05/02/parts-of-android-in-c</id>
   <content type="html">&lt;!--:en--&gt;While reading Hacker news, I found out this crazy project from the guys of &lt;a href=&quot;http://www.xamarin.com&quot;&gt;Xamarin&lt;/a&gt;. They started to port Android Java code (roughly 1M SLOC) to C# for running with Mono. Read more &lt;a href=&quot;http://blog.xamarin.com/2012/05/01/android-in-c-sharp/&quot;&gt;here&lt;/a&gt;.&lt;!--:--&gt;&lt;!--:fr--&gt;En me balladant sur Hacker news, je suis tombé sur ce projet de malade des mecs de &lt;a href=&quot;http://www.xamarin.com&quot;&gt;Xamarin&lt;/a&gt;. Ils ont commencé à porter le code Java d&#39;Android (environ 1 million de lignes de code) vers C# pour l&#39;utiliser au dessus de Mono (plus performant selon eux). Plus de détails sur &lt;a href=&quot;http://blog.xamarin.com/2012/05/01/android-in-c-sharp/&quot;&gt;leur blog&lt;/a&gt;.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Amazon Cloud Drive Desktop</title>
   <link href="http://bloggure.info/www/2012/05/02/amazon-cloud-drive-desktop.html"/>
   <updated>2012-05-02T00:00:00+02:00</updated>
   <id>http://bloggure.info/www/2012/05/02/amazon-cloud-drive-desktop</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-full wp-image-581&quot; title=&quot;Amazon Cloud Drive&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/AppIcon_128.ico&quot; alt=&quot;&quot; /&gt;

It is the war of pure players for cloud storage. Amazon has released its &lt;a href=&quot;http://www.amazon.com/gp/feature.html/ref=pe_234810_23726170_pe_button/?ie=UTF8&amp;amp;docId=1000796781&quot;&gt;desktop solution (Windows, Mac OS)&lt;/a&gt; for using Amazon Cloud Drive (another free 5Gb). We now have a wide choice of cloud storage solutions (aside &lt;a href=&quot;https://drive.google.com/start&quot;&gt;Google Drive&lt;/a&gt;, &lt;a href=&quot;https://www.dropbox.com&quot;&gt;Dropbox&lt;/a&gt;, &lt;a href=&quot;http://box.com/&quot;&gt;Box&lt;/a&gt;...)

&amp;nbsp;

&lt;strong&gt;Edit: &lt;/strong&gt;It seems to be a light app only allowing to quickly upload a file or access the web application, hope they&#39;ll update it to be more feature complete (ala Dropbox)&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img class=&quot;alignright size-full wp-image-581&quot; title=&quot;Amazon Cloud Drive&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/05/AppIcon_128.ico&quot; alt=&quot;&quot; /&gt;

C&#39;est la guerre du stockage en ligne. Amazon a rendu disponible sa version &lt;a href=&quot;http://www.amazon.com/gp/feature.html/ref=pe_234810_23726170_pe_button/?ie=UTF8&amp;amp;docId=1000796781&quot;&gt;pour ordinateur (Windows, Mac OS)&lt;/a&gt; d&#39;Amazon Cloud Drive (encore un autre avec 5Go gratuits). Ceci augmente encore les possibilités pour sécuriser nos données (en plus de &lt;a href=&quot;https://drive.google.com/start&quot;&gt;Google Drive&lt;/a&gt;, &lt;a href=&quot;https://www.dropbox.com&quot;&gt;Dropbox&lt;/a&gt;, &lt;a href=&quot;http://box.com/&quot;&gt;Box&lt;/a&gt;...)

&amp;nbsp;

&lt;strong&gt;Edit: &lt;/strong&gt;Il s&#39;agit juste d&#39;une application permettant d&#39;uploader un fichier ou d&#39;accéder à l&#39;interface web. J&#39;espère qu&#39;ils feront évoluer l&#39;application pour se rapprocher de celle de Dropbox.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing HomeBrew without XCode</title>
   <link href="http://bloggure.info/work/2012/04/28/installing-homebrew-without-xcode.html"/>
   <updated>2012-04-28T00:00:00+02:00</updated>
   <id>http://bloggure.info/work/2012/04/28/installing-homebrew-without-xcode</id>
   <content type="html">&lt;!--:en--&gt;&lt;p&gt;&lt;img class=&quot;alignright  wp-image-568&quot; title=&quot;Logo XCode&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/04/250px-Logo_xcode.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;&lt;/p&gt;&lt;p&gt;Since I have a SSD in my laptop, I am always looking after things that waste the precious space of my main drive. Although I have a 120Gb drive, I have to say it is rapidly filled at 80% (maven downloading the internet syndrome). On of the good thing owning a Mac is the Unix subsystem allowing to use almost every software written for the Unix world.&lt;/p&gt;&lt;p&gt;There is some package systems for Mac OS X, &lt;a href=&quot;http://www.macports.org/&quot;&gt;MacPorts&lt;/a&gt;, &lt;a href=&quot;http://www.finkproject.org/&quot;&gt;Fink&lt;/a&gt;, &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;HomeBrew&lt;/a&gt; being the last one and the most convenient one. When I last switched to a Core i7 MacBook Pro, I migrated to HomeBrew and I have to say it is way lighter than MacPort. The only thing I find cumbersome is the need for a complete XCode install on drive, even though I do not develop using XCode. XCode is a heavy tool suite, weighting about 5Gb on your drive, only to get the tools needed for HomeBrew.&lt;/p&gt;&lt;p&gt;The nightmare is now over, Apple released Command Line Tools for XCode, that you can download on the official &lt;a href=&quot;https://developer.apple.com/downloads/index.action&quot;&gt;Apple Developer Site&lt;/a&gt; (you will need to log in with a valid developer id account, this is free don&#39;t worry).&lt;/p&gt;&lt;p&gt;Here is a simple step by step guide to uninstall XCode and replace it by Command Line Tools :&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Go to the Apple Developer site and download the dmg image of Command Line Tools&lt;/li&gt;&lt;li&gt;Open Terminal.app and run&lt;/li&gt;&lt;pre class=&quot;brush: bash&quot;&gt;sudo /Developer/Library/uninstall-devtools&lt;/pre&gt;&lt;li&gt;Open the dmg image and install the tools&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;That&#39;s all folks ! You can now install HomeBrew and enjoy your favorites open source software without the whole XCode suite.&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img class=&quot;alignright  wp-image-568&quot; title=&quot;Logo XCode&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2012/04/250px-Logo_xcode.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;

Depuis que j&#39;ai un SSD dans mon ordinateur, je suis toujours à la recherche des éléments qui gaspillent le spacieux espace de mon disque. Bien que j&#39;ai un disque de 120Go, celui-ci se remplit très rapidement à 80% (certainement grace à Maven qui télécharge internet). L&#39;un des points fort lorsqu&#39;on possède un Mac est le système Unix permettant l&#39;utilisation de quasiment tous les logiciels écrit dans le monde Unix.

Il y a quelques gestionnaires de paquets pour Mac OS X, &lt;a href=&quot;http://www.macports.org/&quot;&gt;MacPorts&lt;/a&gt;, &lt;a href=&quot;http://www.finkproject.org/&quot;&gt;Fink&lt;/a&gt;, &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;HomeBrew&lt;/a&gt; étant le plus récent et le plus pratique selon moi. La dernière fois que j&#39;ai changé de machine pour un MacBook Pro Core i7, j&#39;ai migré vers HomeBrew et je dois reconnaître que ce système est bien plus léger que MacPorts. La seule chose que je trouve rébarbative est la nécessité d&#39;installer la suite XCode complète sur le disque, même si je ne développe pas en utilisant cet IDE. XCode est une suite assez lourde, pesant environ 5Go sur le disque, uniquement pour permettre l&#39;utilisation de HomeBrew.

Le cauchemard est maintenant terminé, Apple a rendu disponible Command Line Tools for XCode, librement &lt;a href=&quot;https://developer.apple.com/downloads/index.action&quot;&gt;téléchargeable sur le site développeur d&#39;Apple&lt;/a&gt; (vous aurez besoin d&#39;un compte développeur pour accéder au téléchargement, qui est gratuit ne vous inquiétez pas).

Enfin voilà un rapide guide étape par étape permettant de désinstaller XCode et de le remplacer par les outils ligne de commande :
&lt;ul&gt;
	&lt;li&gt;Allez sur le site développeur d&#39;Apple et téléchargez l&#39;image dmg des outils lignes de commande.&lt;/li&gt;
	&lt;li&gt;Ouvrez Terminal.app et lancez&lt;/li&gt;
&lt;pre class=&quot;brush: bash&quot;&gt;sudo /Developer/Library/uninstall-devtools&lt;/pre&gt;
	&lt;li&gt;Ouvrez l&#39;image dmg et installez les outils&lt;/li&gt;
&lt;/ul&gt;
C&#39;est terminé ! Vous pouvez maintenant installer HomeBrew et installer / utiliser vos outils favoris sans l&#39;intégralité de la suite XCode.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Devoxx France</title>
   <link href="http://bloggure.info/work/2012/04/24/devoxx-france.html"/>
   <updated>2012-04-24T00:00:00+02:00</updated>
   <id>http://bloggure.info/work/2012/04/24/devoxx-france</id>
   <content type="html">&lt;!--:en--&gt;&lt;p&gt;Sorry folks, to be concise I choosed not to translate my blog post in English for now, thus I respect the 75% french - 25% english part of Devoxx France ;).&lt;br/&gt;
However, if you&#39;re interested in my opinion, you can try to Google translate my french version located &lt;a href=&quot;http://www.bloggure.info/?p=543&amp;lang=fr&quot;&gt;here&lt;/a&gt;&lt;p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;J&#39;ai eu la chance d&#39;assister à l&#39;intégralité de la première édition de Devoxx France. 
&lt;h2&gt;Devoxx France ?&lt;/h2&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/04/logo_devoxx_fr_ombre_web.jpeg&quot; alt=&quot;&quot; title=&quot;logo_devoxx_fr_ombre_web&quot; width=&quot;400&quot; height=&quot;206&quot; class=&quot;aligncenter size-full wp-image-558&quot; /&gt;
Pour les personnes peu bercées dans la culture Java il s&#39;agit de la création en France d&#39;une conférence destinée aux développeurs passionnés. C&#39;est un format adapté de l&#39;ancienne conférence Javapolis renommée Devoxx il y a quelques temps (une sombre histoire d&#39;utilisation du terme déposé Java que Sun voulait empêcher) qui a lieu tous les ans en Novembre à Anvers en Belgique. 
La principale différence entre les deux conférences réside dans l&#39;obligation pour Devoxx France de proposer au minimum de 75% de talks en français.
&lt;!-- more --&gt;

&lt;h2&gt;Formule&lt;/h2&gt;
La formule retenue pour cette conférence est divisée en deux formats : 
&lt;ul&gt;
&lt;li&gt;
le premier jour était dans un format &quot;Université&quot; qui correspond à des conférences de 3h permettant de bien approfondir un sujet précis, des sessions Tools in action de 30 minutes pour découvrir une nouvelle technologie et des sessions &quot;Tools in action&quot; de 3h permettant de mettre les mains dans le camboui,&lt;/li&gt;
&lt;li&gt;
les seconds et troisièmes jours étaient dans un format conférences de 55 minutes ainsi que deux sessions quickies de 15min à la pause déjeuner .
&lt;/li&gt;
&lt;/ul&gt;
Chaque soir il y a eu des B.O.Fs permettant aux différentes communautés de se retrouver et d&#39;échanger, ainsi que la soirée Meet &amp; Greet du jeudi ouverte à tous.


&lt;h2&gt;Quelques chiffres&lt;/h2&gt;
Je retranscris les chiffres que l&#39;équipe de Devoxx France nous a communiqué lors de la keynote d&#39;ouverture : 
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;133&lt;/b&gt; présentations&lt;/li&gt;
&lt;li&gt;&lt;b&gt;199&lt;/b&gt; speakers&lt;/li&gt;
&lt;li&gt;&lt;b&gt;36&lt;/b&gt; JUGs et UGs&lt;/li&gt;
&lt;li&gt;&lt;b&gt;1250&lt;/b&gt; participants&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Impressions&lt;/h2&gt;
&lt;h3&gt;Jour 1 : 18 Avril 2012&lt;/h3&gt;
J&#39;ai participé, dans l&#39;ordre, aux sessions suivantes : 
&lt;h4&gt;&lt;a href=&#39;http://devoxx.fr/display/FR12/Les+5+mercenaires+du+DevOps&#39;&gt;Les 5 mercenaires du DevOps&lt;/a&gt;&lt;/h4&gt;
Le sujet est très porteur actuellement, beaucoup de structure sont en train de se demander comment faire communiquer de façon plus efficace ses différents services. L&#39;approche utilisée pour traiter le sujet a réellement été très instructive et basée sur un cas concret : la création d&#39;un service de partage de fichiers. La chaîne des techniques utilisées est partie de la rache (ISO 1664) pour arriver à un déploiement en continu via la construction de package natif déployable automatiquement par le serveur d&#39;intégration continue.
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/pages/viewpage.action?pageId=6128042&quot;&gt;Guide de survie en théorie des langages&lt;/a&gt;&lt;/h4&gt;
Cette présentation nous a proposé un parcours de l&#39;ensemble des domaines existants permettant d&#39;exprimer nos besoins algorithmiques par le biais des langages. Des échanges très intéressants ont eu lieu lors de la session permettant de réellement se rendre compte de la problématique de recherche inhérente à la théorie des langages. Le support utilisé pour illustrer la programmation fonctionnelle était Scala.
&lt;h4&gt;&lt;a href=&#39;http://devoxx.fr/display/FR12/Reduire+la+pression+sur+l%27allocation+memoire+++le+prochain+pas+dans+l%27optimisation+des+performances+de+la+JVM&#39;&gt;Réduire la pression sur l&#39;allocation mémoire : le prochain pas dans l&#39;optimisation des performances de la JVM&lt;/a&gt;&lt;/h4&gt;
La problématique de la bonne utilisation de la mémoire est quelque chose qui me tient à coeur c&#39;est pourquoi je suis allé voir cette présentation sur un projet naissant permettant de faire du cache off-heap : &lt;a href=&quot;http://incubator.apache.org/directmemory/&quot;&gt;Apache DirectMemory&lt;/a&gt;. Celui-ci en est à ses balbutiements mais est vraiment très intéressant et mérite de réellement s&#39;y pencher !
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Chouchoutez+votre+code+JavaScript&quot;&gt;Chouchoutez votre code JavaScript&lt;/a&gt;&lt;/h4&gt;
Le javascript prend une place de plus en plus importante dans nos applications, cependant il reste encore en retrait en ce qui concerne l&#39;outillage permettant de s&#39;assurer de sa qualité. Dans cette présentation, différents outils permettant d&#39;augmenter la qualité du code produit ont été présentés. L&#39;approche était didactique en montrant comment, de façon simple, remonter des informations depuis jenkins vers sonar (résultats des tests, violations, couverture...).
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Realiser+des+tests+de+charges+avec+Gatling&quot;&gt;Réaliser des tests de charges avec Gatling&lt;/a&gt;&lt;/h4&gt;
La problèmatique de montée en charge d&#39;une application et du bon comportement de celle-ci est réellement quelque chose de fondamental dans les applications que nous produisons actuellement. Ce projet récent mais néanmoins complet offre une approche basée sur un DSL pour tester son applicatif. La façon de faire est très intéressante puisque plus &quot;parlante&quot; selon moi que ce que les autres outils fonctionnant sur un mécanisme d&#39;enregistrement permettent de faire. La présentation nous a permis de cerner comment utiliser le projet et visualiser les résultats obtenus. C&#39;est un projet que je vais essayer au sein de SRMvision pour anticiper notre montée en charge.

&lt;h3&gt;Jour 2 : 19 Avril 2012&lt;/h3&gt;
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Bienvenue+a+Devoxx+France&quot;&gt;Bienvenue à Devoxx France&lt;/a&gt;&lt;/h4&gt;
Cette keynote d&#39;ouverture était très bien tenue et a permis de resituer l&#39;histoire de Devoxx France et du Paris JUG qui en est l&#39;organisateur originel.
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Fier+d%27etre+developpeur&quot;&gt;Fier d&#39;être développeur ?&lt;/a&gt;&lt;/h4&gt;
Présentation très intéressante sur la façon d&#39;aborder les choses du point de vue du développeur. Le sujet a été très bien traité et permet de ressortir en se disant qu&#39;il est nécessaire pour un développeur de s&#39;ouvrir aux personnes qui l&#39;entourent pour produire du logiciel qui réponde réellement aux besoins utilisateurs.
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/This+could+be+Heaven+or+this+could+be+Hell&quot;&gt;This could be Heaven or this could be Hell&lt;/a&gt;&lt;/h4&gt;
La présentation a été abordée de façon humoristique essayant de se projeter dans 5 ou 10 ans et de deviner ce que peut devenir le paysage du développeur. La présentation a été rondement menée et permet de prendre du recul en se disant qu&#39;énormément de choses peuvent changer en très peu de temps.

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Manipulation+de+bytecode+++democratisons+la+magie+noire&quot;&gt;Manipulation de bytecode : démocratisons la magie noire&lt;/a&gt;&lt;/h4&gt;
Cette présentation a permis d&#39;aborder, de façon simple, le bytecode manipulé par la JVM. Après une introduction rappelant les mécanismes utilisés en assembleur, différents outils jonglant avec le bytecode ont été présenté, de la génération de bytecode via ASM, à l&#39;injection de code dynamiquement via Byteman en passant par la programmation orientée aspect d&#39;AspectJ. Enfin, la présentation de Jooflux, projet de recherche permettant de changer, à chaud, les appels de méthodes grace à invokeDynamic du JDK7 a conclu la présentation. 
Le tout a été présenté avec une très bonne approche, didactique  et surtout assez exhaustive des possibilités offertes via la manipulation du bytecode.
&lt;h4&gt;&lt;a href=&#39;http://devoxx.fr/display/FR12/NodeJS+and+JavaScript+Everywhere&#39;&gt;NodeJS and JavaScript Everywhere&lt;/a&gt;&lt;/h4&gt;
Cette présentation a permis de montrer de façon très simple, la puissance du Javascript côté serveur grace à NodeJS. Le speaker a fait la démonstration du développement d&#39;un proxy http basique en une vingtaine de lignes de javascript. Le résultat est assez bluffant il faut l&#39;avouer. Il a ensuite prolongé sa présentation par une petite revue des points de vigilance nécessaire avec la programmation fonctionnelle, utilisation de fonctions comme méthodes de rappel pour éviter d&#39;être bloquant.
&lt;h4&gt;&lt;a href=&#39;http://devoxx.fr/display/FR12/Client+Server+Apps+with+HTML5+and+Java&#39;&gt;Client/Server Apps with HTML5 and Java&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Cette présentation de James Ward a permis de se rendre compte de la simplicité de développement en utilisant Play2! Ceux qui étaient à son université la veille m&#39;ont dit qu&#39;ils ont eu l&#39;impression de revivre la même présentation, ce qui est fort dommage. L&#39;axe utilisé lors de la présentation prônait le fait de s&#39;appuyer au maximum sur les CDN pour servir les données statiques de son site (pour réduire la latence), et de servir les données dynamiques en utilisant JSON. Sa démonstration était bien sûr appuyée par l&#39;utilisation d&#39;heroku pour déployer simplement son application dans le cloud.&lt;br/&gt;
C&#39;est exactement l&#39;approche utilisée par Trello pour leur très bonne application de gestion de tâche : ils distribuent le moteur en utilisant les CDN et fournissent les données en utilisant du JSON, la mise en forme est faite par un moteur de templating Javascript.&lt;br/&gt;
La technique permet de facilement transformer une application &quot;classique&quot; en application communicante via des appels Javascript asynchrones, en attendant que Websocket soit réellement démocratisé.&lt;br/&gt;
La présentation a été l&#39;occasion pour James Ward de nous parler du projet &lt;a href=&quot;https://github.com/webjars&quot;&gt;web-jars&lt;/a&gt; qu&#39;il venait de lancer, l&#39;initiative est excellente, et l&#39;idée simple, il s&#39;agit de simplement utiliser la puissance de la gestion des dépendances de maven pour représenter les librairies javascript utilisées dans un projet. L&#39;approche est bien plus élégante qu&#39;un bête copier coller des fichiers javascript au sein de son projet.
&lt;/p&gt;
&lt;h4&gt;&lt;a href=&#39;http://devoxx.fr/pages/viewpage.action?pageId=6128306&#39;&gt;BigData et Hadoop au secours de téraoctets de logs inexploitables chez l&#39;un des plus grands sites marchands du web européen&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Je pense qu&#39;il s&#39;agit d&#39;une des conférences les plus intéressantes que j&#39;ai pu voir cette année. Le sujet traite d&#39;une étude d&#39;une réelle problèmatique d&#39;entreprise. Le sujet était la gestion des logs d&#39;un site marchant, le volume de données à traiter était considérable (7 Go de logs / serveur / jour pour 500 serveurs), l&#39;idée est d&#39;extraire le maximum d&#39;informations des logs en un minimum de temps. Je ne pourrais pas facilement résumer la présentation mais je peux citer les technologies utilisées pour arriver à une exploitation correcte des logs et une analyse complète avec seulement 2 minutes de délai.&lt;br/&gt;
La chaîne utilisée pour cette analyse de log part d&#39;une centralisation des logs dans un cluster Hadoop grace à l&#39;utilisation de Flume (pour l&#39;instant syslog-ng est utilisé mais n&#39;est pas réellement indispensable), de là, l&#39;interrogation des données est faite via MongoDB et la restitution visuelle est faite grace à Play! La chaîne est relativement simple mais a nécessité des optimisations de la configuration des différentes couches réseau traversées (pile TCP, interface réseau dédiée...)&lt;/p&gt;

&lt;h4&gt;&lt;a href=&#39;http://devoxx.fr/display/FR12/Pour+un+developpement+durable&#39;&gt;Pour un développement durable&lt;/a&gt;&lt;/h4&gt;
Je m&#39;attendais à une présentation permettant de résumer de façon efficace les différentes pratiques permettant à un développement de durer dans le temps,  je pensais que j&#39;entendrais des évidences, mais pas autant que j&#39;en ai entendu, le discours était bien mené mais trop simpliste selon moi, je pourrais le résumer en une phrase : &quot;prendre le temps de bien faire les choses au début coûte moins cher que de devoir en assurer la maintenance&quot;.

&lt;h4&gt;B.O.Fs&lt;/h4&gt;
J&#39;ai participé au BOF destné à l&#39;Open Source, le thème était intéressant et il y a eu un vrai échange sur les sujets suivant : 
&lt;ul&gt;
&lt;li&gt;Qu&#39;est ce qui nous entraîne à contribuer à l&#39;Open Source?&lt;/li&gt;
&lt;li&gt;Comment justifier la contribution Open Source à son employeur ?&lt;/li&gt;
&lt;li&gt;Où en serait le paysage informatique sans l&#39;Open Source (l&#39;exemple de la chaîne de build a été pris comme exemple)?&lt;/li&gt;
&lt;/ul&gt;
J&#39;ai ensuite profité de la fin de la soirée pour discuter avec les différents exposant présent sur les stands et enfin terminer cette dernière journée avec l&#39;équipe du Paris Android User Group ainsi que Romain Guy au restaurant, où nous avons pu échanger sur nos différents parcours et nos activités.

&lt;h3&gt;Jour 3 : 20 Avril 2012&lt;/h3&gt;
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Trends+in+mobile+application+development&quot;&gt;Trends in mobile application development&lt;/a&gt;&lt;/h4&gt;
Cette présentation était une présentation sponsorisée d&#39;IBM, rien d&#39;intéressant à se mettre sous la dent, le réveil difficile a en plus été plutôt inutile. Cette présentation ne m&#39;a strictement rien apporté, à part l&#39;envie de prendre un café supplémentaire pour rester éveillé.

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Portrait+du+developpeur+en+The+Artist&quot;&gt;Portrait du développeur en &quot;The Artist&quot; &lt;/a&gt;&lt;/h4&gt;
Excellente présentation, Patrick Chanezon a pris le parti de comparer la vie d&#39;un développeur à l&#39;histoire de The Artist, pour relever les écueils auquel un développeur est souvent confronté au cours de son expérience professionnelle. Le passage quasi obligatoire en chef de projet au bout d&#39;un laps de temps très court qui finalement ne correspond pas aux envies de la majorités des développeurs. Je n&#39;&#39;ai finalement pas regretté de m&#39;être levé, cette intervention était réellement exceptionnelle.

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Abstraction+Distractions+for+France&quot;&gt;Abstraction Distractions for France &lt;/a&gt;&lt;/h4&gt;
Neal Ford est un speaker reconnu, je n&#39;avais jamais eu la chance d&#39;assister à l&#39;une de ses présentations, c&#39;est maintenant chose faite et je peux vous confirmer que sa réputation n&#39;est pas surfaite. En admettant que nous sommes obligés de nous positionner au dessus d&#39;abstractions pour réaliser notre travail de tous les jours, il a permis, via des exemples très bien trouvés, de faire passer le message qu&#39;il est nécessaire de connaître le niveau d&#39;abstraction inférieur à celui sur lequel nous nous basons pour être réellement efficace dans notre travail.

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Improving+Resource+Utilisation+-+the+JVM%2C+the+OS+and+the+Hardware&quot;&gt;Improving Resource Utilisation - the JVM, the OS and the Hardware&lt;/a&gt;&lt;/h4&gt;
J&#39;ai été un peu déçu par cette présentation, je m&#39;attendais à de réels exemples et bonnes pratiques permettant de tirer le maximum du matériel. Il s&#39;agissait en fait d&#39;une conférence rappelant l&#39;architecture de nos systèmes et nous rappelant que la principal goulot d&#39;étranglement de nos systèmes se trouve être les accès au monde extérieur depuis le ou les CPU(s) et qu&#39;il est donc important de bien gérer les entrées / sorties.

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Hibernate+OGM++JPA+pour+NoSQL&quot;&gt;Hibernate OGM: JPA pour NoSQL&lt;/a&gt;&lt;/h4&gt;
Très bonne présentation permettant d&#39;appréhender la version NoSQL de l&#39;ORM Hibernate. L&#39;idée est de réutiliser au maximum l&#39;existant d&#39;Hibernate pour être capable de passer d&#39;un système relationnel classique à un backend NoSQL en utilisant le même mécanisme d&#39;annotation que celui qui est connu de tous sur les entités JPA. Le projet est pour l&#39;instant encore en phase de démarrage, et les backend supportés ne sont pas nombreux (Infinispan, Mongodb de façon sommaire)

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/An+Overview+of+Guava++Google+Core+Libraries+for+Java&quot;&gt;An Overview of Guava: Google Core Libraries for Java&lt;/a&gt;&lt;/h4&gt;
Conférence un peu décevante, je m&#39;attendais à avoir autre chose qu&#39;une simple lecture de la documentation de l&#39;API de Google Guava. Bien qu&#39;intéressant, il n&#39;y avait finalement que peu de points qui n&#39;étaient pas abordés explicitement dans la documentation du projet. Cependant, l&#39;ouverture vers l&#39;API de cache m&#39;a donné envie d&#39;aller voir la conférence suivante qui traitait justement de cette API.
&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Java+Caching+with+Guava&quot;&gt;Java Caching with Guava&lt;/a&gt;&lt;/h4&gt;
Cette conférence était malheureusement très similaire à la précédente, l&#39;approche n&#39;était pas très intéressante et se résumait à une lecture de l&#39;API documentée. Quelques exemples venaient étayer l&#39;ensemble, mais je n&#39;ai pas trouvé le contenu très enrichissant.

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/pages/viewpage.action?pageId=6128416&quot;&gt;OOM m&#39;a tuer : paramétrage de la Heap et du Garbage Collector sous forte charge&lt;/a&gt;&lt;/h4&gt;
Cette conférence était une étude d&#39;un cas pratique exposant, de façon didactique, les différentes étapes et concepts à connaître lorsqu&#39;on veut optimiser au maximum la configuration de la mémoire au sein de la JVM utilisée par son application. L&#39;objectif étant de minimiser au maximum les phases de &quot;Stop the world&quot; présentes lorsque la JVM lance le Garbage Collector pour récupérer de la mémoire.

&lt;h4&gt;&lt;a href=&quot;http://devoxx.fr/display/FR12/Les+Cast+Codeurs+Podcast&quot;&gt;Les Cast Codeurs Podcast&lt;/a&gt;&lt;/h4&gt;
Les trois jours de Devoxx France se sont terminés sur l&#39;enregistrement live d&#39;un épisode des Cast Codeurs en direct de Devoxx France. Au menu, un bon moment de rigolade et de convivialité que vous pouvez librement &lt;a href=&quot;http://lescastcodeurs.com/2012/04/les-cast-codeurs-podcast-episode-57-en-direct-de-devoxx-france-2012/&quot;&gt;écouter en vous rendant sur le site&lt;/a&gt;.

&lt;h2&gt;Conclusion&lt;/h2&gt;
C&#39;est la première fois que je me rend à ce genre de conférence, et ce n&#39;est certainement pas la dernière. Bien que rythmées, les journées sont loin d&#39;être ennuyeuses, les sujets abordés par les conférences sont dans la majorités des cas très intéressants, et il est également possible de faire des rencontres sympa et d&#39;échanger simplement avec d&#39;autres développeurs. Un point très positif est que toutes les conférences seront visible sur la plateforme Parleys, dont un accès est fourni à chaque participant. Il est ainsi possible de revoir toutes les sessions !
Merci à toute l&#39;équipe des organisateurs qui s&#39;est démenée pour organiser ces trois jours :
&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2012/04/equipe_devoxx_france_2012.jpeg&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/04/equipe_devoxx_france_2012-300x175.jpg&quot; alt=&quot;&quot; title=&quot;equipe_devoxx_france_2012&quot; width=&quot;300&quot; height=&quot;175&quot; class=&quot;aligncenter size-medium wp-image-559&quot; /&gt;&lt;/a&gt;
Rendez vous à Devoxx World en Novembre si je parviens à y aller, et sinon, à Devoxx France l&#39;année prochaine !&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Devoxx France / D-3</title>
   <link href="http://bloggure.info/work/2012/04/16/devoxx-france-d-3.html"/>
   <updated>2012-04-16T00:00:00+02:00</updated>
   <id>http://bloggure.info/work/2012/04/16/devoxx-france-d-3</id>
   <content type="html">&lt;!--:en--&gt;&lt;p&gt;I will be one of the 1200 geeks in Paris to attend the first edition of the famous &lt;a href=&quot;http://devoxx.fr/&quot;&gt;Devoxx&lt;/a&gt; conference in France. I will try to give feedback here on the keynotes I attend throughout the 3 days of this conference. Stay tuned...&lt;/p&gt;
&lt;p&gt;Have a look at the teaser : &lt;/p&gt;
&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/II6XiGGlJX0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;p&gt;Je vais faire partie des 1200 geeks présent à Paris en cette fin de semaine pour la première édition de &lt;a href=&quot;http://devoxx.fr/&quot;&gt;Devoxx France&lt;/a&gt;. Je résumerai ici mes impressions sur les différentes présentations et ateliers auquel je vais participer. À suivre...&lt;/p&gt;
&lt;p&gt;Jetez un oeil au teaser : &lt;/p&gt;
&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/II6XiGGlJX0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>GitLabHQ and a good branching model</title>
   <link href="http://bloggure.info/.git/work/2012/02/23/gitlabhq.html"/>
   <updated>2012-02-23T00:00:00+01:00</updated>
   <id>http://bloggure.info/.git/work/2012/02/23/gitlabhq</id>
   <content type="html">&lt;!--:en--&gt;&lt;h2&gt;Migrating to Git&lt;/h2&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/12/GitLogo.jpg&quot; alt=&quot;&quot; title=&quot;GitLogo&quot; width=&quot;97&quot; height=&quot;202&quot; class=&quot;alignright size-full wp-image-491&quot; /&gt;
At work, we made the move from subversion to git as our version control tool. I used git for a few times before we migrate the whole project thanks to the git-svn bridge, and, apart from the usual headache when it comes to merging branches, I was rather convinced we would make the migration to git. To explain what branching model I was expecting to use, I dig the Internet for a good tool, hoping to migrate our so &quot;1.0&quot; Trac version control and issue management to a more github like one.

&lt;h2&gt;Founds&lt;/h2&gt;
There is not as much tools as I first thought, I found &lt;a href=&quot;https://gitorious.org/gitorious&quot;&gt;gitorious&lt;/a&gt;, which seems to be a good tool, but it looks complicated to setup and lacks (or I didn&#39;t find it) a good graphical representation of the branches in the repository. 

I came across &lt;a href=&quot;http://gitlabhq.com/&quot;&gt;gitlabhq&lt;/a&gt;, which is a starting project, but promising as it aims to mimic github in many ways. I&#39;ve tried it and I must say I am very impressed, it is now one of the tool we use internally, it is not yet a perfect tool but it does its jobs very well. We still use our old Trac environment with git integration to hunt down our bugs and control ticket workflow with commit messages (blog post to come). We also use Trac&#39;s wiki to write our internal documentation toward developpers.
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;h2&gt;Migration vers Git&lt;/h2&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/12/GitLogo.jpg&quot; alt=&quot;&quot; title=&quot;GitLogo&quot; width=&quot;97&quot; height=&quot;202&quot; class=&quot;alignright size-full wp-image-491&quot; /&gt;
Au travail, nous avons pris la décision de passer de Subversion à Git comme outil de gestion de sources. J&#39;ai utilisé git quelques mois avant de migrer l&#39;intégralité du projet pour tout le monde grace à l&#39;outil git-svn. Et, mis à part les problèmes habituels de merge entre branches svn, j&#39;étais plutôt enthousiaste concernant la migration vers git. L&#39;idée était de disposer d&#39;un outil plus puissant pour pouvoir séparer plus efficacement les développements en utilisant des branches. Pour expliquer quelle technique j&#39;avais envie de mettre en place pour gérer nos branches de développement, j&#39;ai cherché l&#39;outil qu&#39;il nous fallait, tout en espérant pouvoir migrer notre outil de gestion d&#39;incident actuel (Trac) vers un se rapprochant plus de github.

&lt;h2&gt;Résultats&lt;/h2&gt;
Il n&#39;y a pas tant d&#39;outils que je le pensais au préalable. J&#39;ai trouvé &lt;a href=&quot;https://gitorious.org/gitorious&quot;&gt;gitorious&lt;/a&gt;, qui a l&#39;air d&#39;être un bon outil, mais l&#39;installation à l&#39;air complexe et ne propose pas (où je suis passé à côté) d&#39;outil permettant de visualiser de façon graphique les branches.

Je suis tombé sur &lt;a href=&quot;http://gitlabhq.com/&quot;&gt;GitLabHQ&lt;/a&gt;, qui est un projet naissant, mais prometteur puisque l&#39;objectif est de fournir une alternative similaire à github. Je l&#39;ai essayé et je dois dire que je suis réellement très impressionné, à tel point que c&#39;est maintenant un des outils que nous utilisons en complèment de Trac.
Nous utilisons toujours Trac pour gérer nos tickets de bugs et pour contrôler leur workflow à l&#39;aide de messages de commit (il y aura un post ici à ce sujet dans quelques temps). Nous utilisons aussi le wiki de Trac pour la documentation développeur (nous n&#39;avons pas encore pris le temps de la migrer vers GitLabHQ, ce qui arrivera certainement).
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
&lt;h2&gt;GitLabHQ&lt;/h2&gt;
&lt;h3&gt;Repository management&lt;/h3&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/gitlabhq-logo.png&quot; alt=&quot;&quot; title=&quot;gitlabhq-logo&quot; width=&quot;175&quot; height=&quot;60&quot; class=&quot;alignright size-full wp-image-528&quot; /&gt;
Our SVN setup was hooked to our internal LDAP for central authentication across our servers (with pam-ldap), making the move to git made this part rubbish because everything is now handled by ssh key exchange. If you&#39;ve played a bit with gitosis or gitolite, you have probably seen it&#39;s not as straightforward as it seems granting a new user access to a repository. You have to clone the special administrative repository and copy public keys, edit configuration file and push this back to the server. This is a  simple but potentially time-consuming  operation. GitLabHQ provides a GUI allowing to add projects, users, keys.

&lt;h3&gt;User management&lt;/h3&gt;
It handles granting permissions in the underlying gitolite server by using the keys the user configure. The workflow of adding a new user is simple, you go to the administrative interface of gitlab, select the &quot;add user&quot; link, fill in basic informations for that user (login/password/mail) and the user, until he sets up its key, has a nag message on the top inviting him to add a key. There is only a simple form to fill with the key &quot;nickname&quot; and the key itself and it is done. If a user changes computer or got multiple ones, he can easily add another key to its profile, there is no need to ask the git administrator to add it.

&lt;h3&gt;Project management&lt;/h3&gt;
It is easy to setup new projects, GitlabHQ provides a section in its GUI allowing to add a project very easily, the same procedure as the one necessary for adding a user apply : a simple form, then you can set up permission for users (read-only / push-pull, web only access...)&lt;br/&gt;
Once a project created, you can manage it via the rich web interface GitLab offers.
There is : 
&lt;ul&gt;
&lt;li&gt;an integrated issue tracker (without workflow, as simple as the one in github, an issue is open or closed),&lt;/li&gt;
&lt;li&gt;a &quot;merge request&quot; section, you can view it as pull requests in github, it allows a developper to notify a reviewer its feature is ready to be merged into another branch (allowing code review),&lt;/li&gt;
&lt;li&gt;a code browser with built-in comment system (with line note...),&lt;/li&gt;
&lt;li&gt;a network graph tool (nice graphical representation of your branches),&lt;/li&gt;
&lt;li&gt;a snippet mode to share code sample&lt;/li&gt;
&lt;li&gt;a few more features, I have to admit I have enough with what I stated above.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Difficulties&lt;/h3&gt;
GitLabHQ is a project depending on a variety of tools, initial setup is very well explained in the wiki pages of the project, I suggest you follow the guide to install this tool, otherwise you might run into troubles.&lt;br/&gt;
Sometimes GitLabHQ does not seems to work, it gives a 500 error, if it happens, don&#39;t forget to check the logs/production.log file for errors. There is still a few bugs, but as this project is open source, feel free to open an issue on the github page of the project and/or contribute back a patch via a pull request.

&lt;h3&gt;Upgrading GitLabHQ&lt;/h3&gt;
GitLabHQ&#39;s team wants to release every month, to upgrade, simply follow these steps : 
&lt;pre class=&#39;brush: shell&#39;&gt;
#stop your server
git pull origin stable
bundle install --without development test
bundle exec rake db:migrate RAILS_ENV=production
#start your server
&lt;/pre&gt;
This should make the move to the new version, please check version notice if there is some special steps to take.&lt;br/&gt;
You might want to create a local branch containing your configuration (config/gitlab.yml), and to upgrade, simply rebase your local config branch against the tag corresponding to the release (please notice that with 2.2 release, this is not necessary anymore)


&lt;h2&gt;Migrating from Subversion to git&lt;/h2&gt;
The migration is very simple, and very well explained on a &lt;a href=&quot;http://stackoverflow.com/questions/79165/how-to-migrate-svn-with-history-to-a-new-git-repository&quot;&gt;stackoverflow answer&lt;/a&gt;.
Once your svn repository is imported as a git one, you can push it to GitLabHQ. To do so create a repository in GitLabHQ, and just follow the instruction given in the project page (git add origin ... git push)


&lt;h2&gt;Branching model&lt;/h2&gt;
We migrate to git hoping to find and setup a good and easy branching model. I think we now have something really nice :
&lt;ul&gt;
&lt;li&gt;master : branch we merge our feature branches into, the next release branch, the one being actively tested,&lt;/li&gt;
&lt;li&gt;stable : branch corresponding to the production code, from which we branch when bugfixing,&lt;/li&gt;
&lt;li&gt;fix/$issue_number : temporary fix branch, rarely pushed to central repository, coming from stable branch, merged to stable for next hotfix release, and cherry-picked to master&lt;/li&gt;
&lt;li&gt;feature/$feature_name : new feature branch, coming from master, merged to master, can be pushed to central repository if the feature is big enough,&lt;/li&gt;
&lt;li&gt;refactor/$refactor_topic : short lived branch, coming from master, merged to master&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Merging changes&lt;/h3&gt;
Once a feature / fix / refactor is considered complete and stable by the developer(s), we use the &lt;strong&gt;merge request&lt;/strong&gt; feature of GitLabHQ to trigger a manual code review, and once it satisfies our quality standard we merge it into the destination branch.

&lt;h2&gt;Results&lt;/h2&gt;
In the end, you got something like this :
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/gitlabhq-branches.png&quot; alt=&quot;&quot; title=&quot;gitlabhq-branches&quot; width=&quot;838&quot; height=&quot;540&quot; class=&quot;aligncenter size-full wp-image-524&quot; /&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;
&lt;h2&gt;GitLabHQ&lt;/h2&gt;
&lt;h3&gt;Gestion de dépôts&lt;/h3&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/gitlabhq-logo.png&quot; alt=&quot;&quot; title=&quot;gitlabhq-logo&quot; width=&quot;175&quot; height=&quot;60&quot; class=&quot;alignright size-full wp-image-528&quot; /&gt;
Notre installation SVN est connectée à notre LDAP interne qui gère l&#39;authentification sur nos différents serveurs (avec l&#39;aide de pam-ldap). La migration vers Git a rendu cette partie inutile puisque tout est géré maintenant par échange de clefs SSH. 

Si vous avez déjà joué avec gitosis ou gitolite, vous avez probablement remarqué que l&#39;ajout d&#39;un utilisateur à un dépôt n&#39;est pas aussi simple qu&#39;il paraît. Il faut clone le dépôt spécial d&#39;administration, copier la clef publique de l&#39;utilisateur, modifier les fichiers de configuration et effectuer un push de ces modifications vers le serveur.
Une fois bien compris, cette opération est simple mais potentiellement chronophage, GitLabHQ fournit une interface simple permettant d&#39;ajouter des utilisateurs, des projets et des clefs SSH.

&lt;h3&gt;Gestion des utilisateurs&lt;/h3&gt;
Il permet de gérer les permissions pour un utilisateur en mettant à jour le serveur gitolite avec les clefs SSH que l&#39;utilisateur peut renseigner. 
La technique d&#39;ajout d&#39;un nouvel utilisateur est simple, vous vous rendez sur la partie administration de l&#39;interface de GitLabHQ, sélectionnez le lien &quot;ajouter un utilisateur&quot;, remplissez les informations demandées (login/mot de passe/adresse mail). L&#39;utilisateur recevra un mail avec son adresse mail et, tant qu&#39;il n&#39;aura pas renseigné une clef SSH, aura un message l&#39;invitant à le faire.
Il suffit de remplir un formulaire simple avec le &quot;surnom&quot; de la clef et la clef en elle même et l&#39;utilisateur aura accès aux dépôts. L&#39;avantage est évident, si un utilisateur change de machine, ou en a plusieurs, il pourra très simplement ajouter une nouvelle clef à son profil, sans avoir besoin de demander à l&#39;administrateur de Git de le faire.

&lt;h3&gt;Gestion de project&lt;/h3&gt;
Il est simple de configurer de nouveaux projets, GitLabHQ fournit une section dans son interface permettant de le faire très simplement. La procédure est très semblable à celle permettant d&#39;ajouter un utilisateur : un formulaire simple, puis la définition des permissions pour les utilisateurs (lecture seule / push-pull / accès web uniquement...)&lt;br/&gt;
Lorsqu&#39;un projet est créé, vous pouvez le gérer via l&#39;interface web de GitLabHQ.
Il y a : 
&lt;ul&gt;
&lt;li&gt;un gestionnaire de ticket (sans workflow, aussi simple que le système de github, un ticket est ouvert ou clos),&lt;/li&gt;
&lt;li&gt;une section &quot;merge request&quot; , similaire à ce que sont les pull requests dans github, ceci permet à un développeur de demander une revue de code à un autre avant d&#39;intégrer le code au sein d&#39;une autre branche,&lt;/li&gt;
&lt;li&gt;un navigateur de code avec un système de commentaires (à la ligne près,&lt;/li&gt;
&lt;li&gt;un outil de représentation graphique des branches,&lt;/li&gt;
&lt;li&gt;une catégorie permettant d&#39;échanger des morceaux de code,&lt;/li&gt;
&lt;li&gt;un wiki,&lt;/li&gt;
&lt;li&gt;quelques autres fonctionnalités que je n&#39;ai pas encore exploré, puisque ce que j&#39;ai cité plus haut est déjà très bien.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Difficultés rencontrées&lt;/h3&gt;
GitLabHQ est un projet dépendant sur un grand nombre d&#39;autres outils, la configuration initiale est très bien documentée dans les pages wiki du projet, je vous suggère de les suivre scrupuleusement pour éviter tout soucis de mauvaise configuration initiale.&lt;br/&gt;
Quelques fois GitLabHQ ne semble pas marcher, il ne ressort que des erreurs 500, si cela arrive, n&#39;oubliez pas de consulter les logs (fichier logs/production.log) à la recherche d&#39;erreurs. Il y a encore quelques bugs, mais étant donné que ce projet est open-source, n&#39;hésitez pas à effectuer des rapports de bugs et à même contribuer des patchs via le système de pull request de github.

&lt;h3&gt;Mise à jour de GitLabHQ&lt;/h3&gt;
L&#39;équipe de GitLabHQ planifie une nouvelle version tous les moins, pour effectuer la mise à jour, suivez simplement ces étapes :
&lt;pre class=&#39;brush: shell&#39;&gt;
#arrêtez votre serveur
git pull origin stable
bundle install --without development test
bundle exec rake db:migrate RAILS_ENV=production
#redémarrez votre serveur
&lt;/pre&gt;

Ceci devrait suffir pour passer à une nouvelle version, mais vérifiez quand même si des étapes spéciales sont nécessaires en vérifiant les notes de version.&lt;br/&gt;
Vous pouvez vous créer une branche locale contenant votre configuration (config/gitlab.yml), et pour mettre à jour, effectuez un simple git rebase sur votre branche pour inclure les modifications de la branche stable (depuis la version 2.2, le fichier de configuration n&#39;est plus dans les fichiers touchés par un upgrade, cette étape est donc optionnelle)


&lt;h2&gt;Migrating from Subversion to git&lt;/h2&gt;
La migration est très simple, et très bien expliquée sur la &lt;a href=&quot;http://stackoverflow.com/questions/79165/how-to-migrate-svn-with-history-to-a-new-git-repository&quot;&gt;page stackoverflow suivante&lt;/a&gt;.
Une fois que votre dépôt SVN est importé en tant que dépôt Git, vous pouvez effectuer un push vers GitLabHQ. Pour se faire, créez un dépôt dans GitLabHQ, et suivez les instructions données dans GitLabHQ sur la page du projet que vous venez d&#39;ajouter (git add origin ... git push)


&lt;h2&gt;Gestion des branches&lt;/h2&gt;
Nous avons migré vers Git en espérant trouver un moyen simple et efficace de gérer les branches. Nous avons maintenant quelque chose de vraiment sympa :
&lt;ul&gt;
&lt;li&gt;master : la branche cible de toutes nos nouvelles fonctionnalités, celle qui est en recette active,&lt;/li&gt;
&lt;li&gt;stable : la branche qui correspond au code de production, depuis laquelle nous effectuons les corrections de bugs,&lt;/li&gt;
&lt;li&gt;fix/$issue_number : branche temporaire correspondant à un correctif, propagée sur le dépôt central pour en effectuer la revue de code. Provient de la branche stable, sera mergée sur la branche stable pour la livraison de consolidation, et cherry-pickée sur master si le besoin s&#39;en fait sentir,&lt;/li&gt;
&lt;li&gt;feature/$feature_name : branche correspondant à une nouvelle fonctionnalité, provenant de master, mergée sur master, propagée sur master pour effectuer la revue de code,&lt;/li&gt;
&lt;li&gt;refactor/$refactor_topic : branche à durée de vie courte, provenant de master, mergée sur master&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Fusionner les branches&lt;/h3&gt;
Une fois qu&#39;une fonctionnalité, un correctif ou un refactor est considéré terminé et stable par le ou les développeurs, nous utilisons la fonctionnalité de &lt;strong&gt;merge request&lt;/strong&gt; de GitLabHQ pour déclencher une revue de code manuelle, et une fois que nous sommes satisfait du code produit (qu&#39;il respecte la qualité qu&#39;on en attend), nous effectuons le merge (manuellement pour le moment) dans la branche de destination.

&lt;h2&gt;Résultats&lt;/h2&gt;
Au final, nous obtenons quelque chose comme ceci  :
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/gitlabhq-branches.png&quot; alt=&quot;&quot; title=&quot;gitlabhq-branches&quot; width=&quot;838&quot; height=&quot;540&quot; class=&quot;aligncenter size-full wp-image-524&quot; /&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Mac OS X 10.8 - Mountain Lion thoughts</title>
   <link href="http://bloggure.info/thoughts/2012/02/17/mac-os-x-10-8-mountain-lion-thoughts.html"/>
   <updated>2012-02-17T00:00:00+01:00</updated>
   <id>http://bloggure.info/thoughts/2012/02/17/mac-os-x-10-8-mountain-lion-thoughts</id>
   <content type="html">&lt;!--:en--&gt;Apple silently announced their future release of Mac OS X operating system to come this summer (2012). The pages on Apple website show the new features and claim this release is the missing bridge between the iPad and the Macs, I think it narrows the gap between their two OSes even more than they claim, I fear a completely bound to Application Store operating system requiring jailbreak to be free in OS X 10.9...&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>mongoDB request failing when upgrading (1.8 > 2.x)</title>
   <link href="http://bloggure.info/nosql/work/2012/02/12/mongodb-request-failing-when-upgrading-1-8-2-x.html"/>
   <updated>2012-02-12T00:00:00+01:00</updated>
   <id>http://bloggure.info/nosql/work/2012/02/12/mongodb-request-failing-when-upgrading-1-8-2-x</id>
   <content type="html">&lt;!--:en--&gt;At work we faced a strange issue with mongoDB 2.x. Whereas our requests were working perfectly with mongoDB 1.8 we always got errors. The message mongoDB was firing at us was of the form : 

&lt;pre class=&quot;brush: java&quot;&gt;
Caused by: com.mongodb.MongoException: assertion db/../bson/bsonobjbuilder.h:127
       at com.mongodb.MongoException.parse(MongoException.java:82)
&lt;/pre&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/mongo.png&quot; alt=&quot;&quot; title=&quot;mongoDB leaf&quot; width=&quot;128&quot; height=&quot;128&quot; class=&quot;alignright size-full wp-image-507&quot; /&gt;
I found the following issue in &lt;a href=&quot;https://jira.mongodb.org/browse/SERVER-3846&quot;&gt;mongoDB&#39;s Jira&lt;/a&gt; but apparently nothing to do with our requests (we are not using empty properties indexes), it takes me a lot of time to figure out that, at times, our request were sorted on empty properties (&lt;a href=&quot;https://jira.mongodb.org/browse/SERVER-3874&quot;&gt;as stated here&lt;/a&gt;). The fix is really simple, &lt;strong&gt;do not sort on empty properties&lt;/strong&gt; !

As it takes me times to find this and I did not find any blog post explaining this, I hope it will help another developer.&lt;!--:--&gt;&lt;!--:fr--&gt;Nous avons rencontré un problème assez étrange avec mongoDB 2.x. Alors que nos requêtes existantes marchaient sans aucun soucis avec mongoDB 1.8. mongoDB répondait invariablement avec l&#39;erreur suivante :

&lt;pre class=&quot;brush: java&quot;&gt;
Caused by: com.mongodb.MongoException: assertion db/../bson/bsonobjbuilder.h:127
       at com.mongodb.MongoException.parse(MongoException.java:82)
&lt;/pre&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2012/02/mongo.png&quot; alt=&quot;&quot; title=&quot;mongoDB leaf&quot; width=&quot;128&quot; height=&quot;128&quot; class=&quot;alignright size-full wp-image-507&quot; /&gt;
J&#39;ai bien sur trouvé le bug suivant sur &lt;a href=&quot;https://jira.mongodb.org/browse/SERVER-3846&quot;&gt;le Jira du projet mongoDB&lt;/a&gt; mais apparement rien à voir avec nos requêtes (nous n&#39;avons pas d&#39;index sur des propriétés vides). Cela m&#39;a pris pas mal de temps avant de comprendre que, parfois, nos requêtes étaient parfois triées sur des propriétés vides (&lt;a href=&quot;https://jira.mongodb.org/browse/SERVER-3874&quot;&gt;comme précisé ici&lt;/a&gt;).
Le correctif est vraiment simple, &lt;strong&gt;ne triez pas sur des propriétés vides&lt;/strong&gt; !

Puisque j&#39;ai mis pas mal de temps à comprendre ce qui se passait et que je n&#39;ai trouvé aucun billet relatif, j&#39;espère que ça aidera un autre développeur.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>git bisect saved my day !</title>
   <link href="http://bloggure.info/.git/.maven/2011/12/19/git-bisect-saved-my-day.html"/>
   <updated>2011-12-19T00:00:00+01:00</updated>
   <id>http://bloggure.info/.git/.maven/2011/12/19/git-bisect-saved-my-day</id>
   <content type="html">This morning one of the Jenkins job went red, 5 tests were failing, and it was very difficult to find out which commit caused the break (69 commits were concerned), I used git bisect to run maven tests to find the guilty one. Here is a quick howto:
&lt;ul&gt;
	&lt;li&gt;find a stable commit (in my case it was &lt;strong&gt;2ea34cf09cc83804cdcc445476bfb597c617a034&lt;/strong&gt;)&lt;/li&gt;
	&lt;li&gt;write a short script (myScript.sh) allowing you to run the tests:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;brush: shell&quot;&gt;#!/bin/sh
 mvn -f path/to/my/pom.xml -Dtest=MyTestClass test&lt;/pre&gt;
&lt;ul&gt;
	&lt;li&gt;git bisect start &lt;strong&gt;HEAD&lt;/strong&gt; &lt;strong&gt;2ea34cf09cc83804cdcc445476bfb597c617a034&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;git bisect run ./myScript.sh&lt;/li&gt;
&lt;/ul&gt;
That&#39;s all, in a few runs (6 in my cases), git found out the commit causing the test failure, a simple git revert and tests were back to green !
</content>
 </entry>
 
 <entry>
   <title>dotfiles or easily manage your shell environment</title>
   <link href="http://bloggure.info/.shell/2011/12/18/dotfiles-or-easily-manage-your-shell-environment.html"/>
   <updated>2011-12-18T00:00:00+01:00</updated>
   <id>http://bloggure.info/.shell/2011/12/18/dotfiles-or-easily-manage-your-shell-environment</id>
   <content type="html">&lt;!--:en--&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/12/Capture-d’écran-2011-12-18-à-18.55.51.png&quot; alt=&quot;&quot; title=&quot;dotfiles&quot; width=&quot;87&quot; height=&quot;68&quot; class=&quot;alignright size-full wp-image-483&quot; /&gt;
&lt;p&gt;Like many terminal geek, I have a bunch of dot rc files allowing me to configure my environment. While this is a very powerful way to setup an environment, it is painful to log in a machine and set it up like you are used to, you often discover too late your favorite alias is missing.&lt;/p&gt;
&lt;p&gt;
I found a nice way to manage this thing by browsing the &lt;a href=&quot;https://github.com/tomsquest/dotfiles&quot;&gt;github account&lt;/a&gt; of one of a man coming frequently to the &lt;a href=&quot;http://www.toursjug.org/&quot;&gt;Tours Java User Group&lt;/a&gt; meetings. It is commonly called dotfiles and can not be better named I found.&lt;/p&gt;
&lt;p&gt;
I &lt;a href=&quot;https://github.com/CedricGatay/dotfiles&quot;&gt;forked the repository&lt;/a&gt; to customize it to my needs, it is now possible to define aliases and to configure the shell on a per machine basis. 
To install, you will only need ruby and rake (manual install is also possible by symlinking the files) :
&lt;ul&gt;
	&lt;li&gt;cd; git clone git://github.com/CedricGatay/dotfiles.git .dotfiles&lt;/li&gt;
	&lt;li&gt;cd .dotfiles; rake install&lt;/li&gt;
        &lt;li&gt;logout and login, or source your .zshrc / .bashrc&lt;/li&gt;
&lt;/lu&gt;
Please notice that I am a zsh user, the bashrc file provided should work but it will surely need some fixes. There is no better way than digging into the source to understand and adjust it.
&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/12/Capture-d’écran-2011-12-18-à-18.55.51.png&quot; alt=&quot;&quot; title=&quot;dotfiles&quot; width=&quot;87&quot; height=&quot;68&quot; class=&quot;alignright size-full wp-image-483&quot; /&gt;
&lt;p&gt;Comme beaucoup de geek, j&#39;affectionne tout particulièrement la ligne de commande. J&#39;ai tout un lot de fichier de configuration à la racine de mon dossier personnel. Bien que ce soit une façon très puissante de configurer son environnement de travail, c&#39;est perturbant de se connecter sur une machine et de ne pas retrouver ses habitudes.&lt;/p&gt;
&lt;p&gt;
J&#39;ai trouvé un moyen simple et élégant de de gérer ce cas de figure en naviguant sur un&lt;a href=&quot;https://github.com/tomsquest/dotfiles&quot;&gt;dépôt github&lt;/a&gt; d&#39;un des membre régulier du &lt;a href=&quot;http://www.toursjug.org/&quot;&gt;Tours Java User Group&lt;/a&gt;. Le nom courant de ce genre de dépôt est &quot;dotfiles&quot; et je trouve qu&#39;il ne pourrait pas avoir de meilleur nom.&lt;/p&gt;
&lt;p&gt;
J&#39;ai donc&lt;a href=&quot;https://github.com/CedricGatay/dotfiles&quot;&gt;forké le dépôt&lt;/a&gt; pour le faire correspondre à mes besoins. J&#39;ai rajouté une fonctionnalité qui était nécessaire pour moi : la possibilité d&#39;avoir des configurations et des alias sensiblement différents en fonction de la machine sur laquelle le fichier est déployé (j&#39;utilise plusieurs OS, les chemins sont donc parfois différents).
Pour l&#39;installer, il suffit de disposer de ruby et rake (une installation manuelle est aussi possible en créant les liens symboliques que rake crée) :
&lt;ul&gt;
	&lt;li&gt;cd; git clone git://github.com/CedricGatay/dotfiles.git .dotfiles&lt;/li&gt;
	&lt;li&gt;cd .dotfiles; rake install&lt;/li&gt;
        &lt;li&gt;logout and login, or source your .zshrc / .bashrc&lt;/li&gt;
&lt;/lu&gt;
Notez que je suis un utilisateur de zsh, le fichier bashrc devrait marcher mais il présente certainement des bugs puisqu&#39;il date de quelques années. Dans tous les cas, je vous encourage à vous plonger dans le source pour comprendre ce qui se passe et adapter le tout à vos besoins.
&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Trello unread notification favicon userscript</title>
   <link href="http://bloggure.info/.js/www/2011/11/25/trello-unread-notification-favicon-userscript.html"/>
   <updated>2011-11-25T00:00:00+01:00</updated>
   <id>http://bloggure.info/.js/www/2011/11/25/trello-unread-notification-favicon-userscript</id>
   <content type="html">&lt;!--:en--&gt;&lt;h2&gt;What&#39;s Trello ?&lt;/h2&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/11/Capture-d’écran-2011-11-25-à-20.48.43.png&quot; alt=&quot;&quot; title=&quot;Trello unread count&quot; width=&quot;87&quot; height=&quot;61&quot; class=&quot;alignright size-full wp-image-469&quot; /&gt;
Trello is a really nice application to manage about everything you want. The GUI is really cool and simple to use, we are actually testing it in my company and we have a very good first feeling. If you want to discover more, don&#39;t hesitate to watch the presentation video and give it a try at &lt;a href=&quot;https://www.trello.com/&quot;&gt;Trello&lt;/a&gt; website.

&lt;h2&gt;Notification system&lt;/h2&gt;
&lt;p&gt;Trello provides a very nice notification system, instead of spamming you with mail everytimes something happens, it detects your activity on the site and sends you mail only when you&#39;re offline / idle. The only thing I miss is the hability to see if I have missed notification in my pinned tab. I remembered of a good &lt;a href=&quot;http://goo.gl/9D5BE&quot;&gt;userscript for GMail allowing to display the number of unread emails&lt;/a&gt;. As I have no experience in GreaseMonkey scripts, I used the previous one as a learning base and did a script allowing to see the number of missed notification (from 1 to 9, and displaying a + if it exceeds 9). &lt;br/&gt;
You can see it in action in the blog post picture next to GMail pinned tab in Chrome. &lt;/p&gt;

&lt;p&gt;
You can &lt;a href=&quot;http://goo.gl/odAG1&quot;&gt;download it on userscripts&lt;/a&gt; or &lt;a href=&quot;http://goo.gl/mbLem&quot;&gt;view the source on my github repository.&lt;/a&gt;
&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;h2&gt;Qu&#39;est ce que Trello ?&lt;/h2&gt;
&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/11/Capture-d’écran-2011-11-25-à-20.48.43.png&quot; alt=&quot;&quot; title=&quot;Trello unread count&quot; width=&quot;87&quot; height=&quot;61&quot; class=&quot;alignright size-full wp-image-469&quot; /&gt; 
Trello est une application très sympa permettant de gérer un peu tout ce que vous voulez. Nous l&#39;utilisons actuellement au travail pour voir si l&#39;outil nous intéresse et la première impression est réellement très bonne. Si vous voulez en savoir plus, n&#39;hésitez pas à aller voir la présentation sur le site de &lt;a href=&quot;https://www.trello.com/&quot;&gt;Trello&lt;/a&gt; et à essayer l&#39;application.

&lt;h2&gt;Système de notifications&lt;/h2&gt;
&lt;p&gt;Trello fournit un système de notificaiton vraiment très bien pensé. Plutôt que de vous envoyer une tonne de mail à chaque action sur le système, l&#39;application vérifie si vous êtes présent en ligne et décide de vous envoyer un message si vous êtes déconnecté / inactif. La seule chose qui me manquait était la possibilité de voir si j&#39;avais des notifications non lues directement à partir de mon onglet épinglé de Trello. Je me suis rappelé d&#39;un script GreaseMonkey permettant d&#39;afficher &lt;a href=&quot;http://goo.gl/9D5BE&quot;&gt;le nombre de mails non lu dans GMail que j&#39;utilisais il y a quelques temps&lt;/a&gt;. Étant donné que je n&#39;ai aucune expérience en développement de scripts GreaseMonkey, je me suis servi de ce script comme base d&#39;apprentissage. Le script que j&#39;ai réalisé affiche le nombre de notification manquées dans l&#39;icône de favoris (de 1 à 9, et affiche un + s&#39;il y en a plus de 9). &lt;br/&gt;
Vous pouvez avoir un aperçu de notification dans l&#39;image associée à l&#39;article.&lt;/p&gt;

&lt;p&gt;
Le script est  &lt;a href=&quot;http://goo.gl/odAG1&quot;&gt;téléchargeable sur userscripts&lt;/a&gt; ou vous pouvez visualiser le source sur &lt;a href=&quot;http://goo.gl/mbLem&quot;&gt;mon dépôt github.&lt;/a&gt;
&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Android : Detect AdBlocking</title>
   <link href="http://bloggure.info/.android/2011/11/13/android-detect-adblocking.html"/>
   <updated>2011-11-13T00:00:00+01:00</updated>
   <id>http://bloggure.info/.android/2011/11/13/android-detect-adblocking</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2011/11/home-bugdroid.png&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/11/home-bugdroid.png&quot; alt=&quot;&quot; title=&quot;Bugdroid&quot; width=&quot;150&quot; height=&quot;174&quot; class=&quot;alignright size-full wp-image-464&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Developing for Android is really fun, as you have probably noticed if you want to have a wide user base you will have to give your application for free on the Android Market. From there, you have different way to monetize your application, you can limit features and unlock them in a payed version, display ads in free version and provide a way to disable ads (in-app purchase for example). In this article I will explain how to detect ad blocking in your applications.&lt;/p&gt;
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2011/11/home-bugdroid.png&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/11/home-bugdroid.png&quot; alt=&quot;&quot; title=&quot;Bugdroid&quot; width=&quot;150&quot; height=&quot;174&quot; class=&quot;alignright size-full wp-image-464&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Développer pour Android est vraiment amusant, mais si vous voulez que votre application touche un grand nombre d&#39;utilisateurs vous devrez la rendre gratuite. Parti de ce constat, il existe quelques solutions pour monnayer votre application, vous pouvez débloquer quelques fonctionnalités dans une version payante, afficher des publicités dans la version gratuite et permettre de les débloquer via une version complète (avec un achat intégré à l&#39;application par exemple). Dans cet article, je vais expliquer comment détecter le blocage des publicités par votre application.&lt;/p&gt;
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;

&lt;h2&gt;Ad blocking ?&lt;/h2&gt;
&lt;p&gt;The way you try to monetize app will not be well accepted by everyone. Often, people use an Ad-Blocker (the same we know in web browsers) and will use the application for free as if they bought your ad free version. A rapid search on the Android market will point you to free application allowing to block ads on rooted devices.&lt;/p&gt;

&lt;p&gt;The system is quite simple, it consists in blocking ads by preventing DNS resolution process to work properly. Ads are loaded from a certain website on the internet. The system does a DNS query to resolve the IP adress of the remote site, the DNS resolution process can be accelerated by setting entries in the hosts file (&lt;code&gt;/etc/hosts&lt;/code&gt; under *nix and so Android). If the system found a corresponding entry in the file, it does not waste time in querying DNS servers and use the specified address.&lt;/p&gt;
&lt;pre class=&quot;brush: shell&quot;&gt;
127.0.0.1 localhost
127.0.0.1 my.ad.server.tld
&lt;/pre&gt;
&lt;p&gt;You can find an example above, &lt;code&gt;my.ad.server.tld&lt;/code&gt; is blocked by making the system think the IP is the one corresponding to the device.&lt;/p&gt;

&lt;h2&gt;Workaround&lt;/h2&gt;
&lt;p&gt;I will explain by a few code snippets how to detect ad blocking using the AdMob SDK. The first thing to do is not bound to the use of AdMob, we will simply read and detect if your ad provider server is in the hosts file.&lt;/p&gt;
&lt;pre class=&quot;brush: java&quot;&gt;
public static boolean isAdBlockerPresent(boolean showAd) {
        if (showAd){
           BufferedReader in = null;
           try {
               in = new BufferedReader(new InputStreamReader(
                                                            new FileInputStream(&quot;/etc/hosts&quot;)));
               String line;

               while ((line = in.readLine()) != null) {
                  if (line.contains(&quot;admob&quot;)) {
                      return true;
                  }
                }
           } catch (Exception e) {
           } finally {
               if (in != null) {
                   try {
                       in.close();
                   } catch (IOException e) {
                   }
               }
           }
        }
        return false;
    }
&lt;/pre&gt;
&lt;p&gt;The code is pretty straightforward, the method takes a boolean parameter allowing to bypass checking, and checks if the keyword &quot;admob&quot; is present in the hosts file. The good thing is that it does not require any specific permission to read the hosts file where you have to request root to write to it.&lt;/p&gt;

&lt;p&gt;To be efficient, you may want to check if ad blocking is enabled only when there is an error in ad download. The Admob SDK provides a convenient way to know when the download fail by implementing a listener. You can find a simple implementation below, you will only have to implements the behavior you want to adopt when ad blocking is detected (&lt;code&gt;onAdBlocked()&lt;/code&gt;) and the logic to bypass adblocker checking (&lt;code&gt;shouldCheckAdBlock()&lt;/code&gt;)&lt;/p&gt;.
&lt;pre class=&quot;brush: java&quot;&gt;
import com.google.ads.AdListener;
public abstract class AdBlockerListener implements AdListener{

    public abstract void onAdBlocked();

    public boolean shouldCheckAdBlock(){
          return true;
    }

    public void onReceiveAd(final Ad ad) {
    }

    public void onFailedToReceiveAd(final Ad ad, final AdRequest.ErrorCode errorCode) {
        Log.e(&quot;AdBlockerListener&quot;, &quot;Failed to receive ad, checking if network blocker is installed...&quot;);
        if (isAdBlockerPresent(shouldCheckAdBlock())) {
               Log.e(&quot;AdBlockerListener&quot;, &quot;Ad blocking seems enabled, tracking attempt&quot;);
               onAdBlocked();
            }
        } else {
            Log.e(&quot;AdBlockerListener&quot;, &quot;No ad blocking detected, silently fails&quot;);
        }
    }

    public void onPresentScreen(final Ad ad) {
    }

    public void onDismissScreen(final Ad ad) {
    }

    public void onLeaveApplication(final Ad ad) {
    }
}
&lt;/pre&gt;
&lt;p&gt;In your activity displaying ads, you just have to register the listener in your &lt;code&gt;AdView&lt;/code&gt; and you&#39;re gone. The code sample below shows how to do, feel free to nag your users and pointing them to the in-app purchase or force them to quit (do it every n-ad blocking).&lt;/p&gt;
&lt;pre class=&quot;brush: java&quot;&gt;
    void initView(){
        adView = (AdView) findViewById(R.id.adView);
        adView.setAdListener(new AdBlockerListener(){
           public void onAdBlocked(){
                 showNagScreen();
           }

           public boolean shouldCheckAdBlock(){
                 return isFreeApp();
            }

        });
    }
&lt;/pre&gt;
&lt;p&gt;That&#39;s all, you now have a simple way of detecting users using your applications without ads.&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;

&lt;h2&gt;Blocage des publicités ?&lt;/h2&gt;
&lt;p&gt;La façon dont vous allez essayer de monnayer votre application ne sera pas bien acceptée par tous vos utilisateurs. Souvent, les utilisateurs utilisent un bloqueur de publicité (de la même nature que ceux présents dans les navigateurs web) et utiliseront donc l&#39;application comme s&#39;ils avaient acheté la version sans publicité. Une recherche rapide sur l&#39;Android market vous permettra de trouver de telles applications (la seule contrainte est d&#39;avoir un système &quot;rooté&quot;).&lt;/p&gt;

&lt;p&gt;Le mécanisme est très simple, il bloque les publicités en empêchant le processus de résolution de nom (DNS) de fonctionner correctement. Les publicités proviennent d&#39;un site sur internet, le système effectue donc une requête DNS pour résoudre l&#39;adresse IP du serveur distant. Le processus peut être accéléré en utilisant un fichier (&lt;code&gt;/etc/hosts&lt;/code&gt; sous les systèmes *nix et donc Android). Si le système trouve une entrée correspondante, il ne perd pas de temps à faire une requête auprès des serveurs DNS et utilise l&#39;adresse précisée.&lt;/p&gt;
&lt;pre class=&quot;brush: shell&quot;&gt;
127.0.0.1 localhost
127.0.0.1 my.ad.server.tld
&lt;/pre&gt;
&lt;p&gt;Vous pouvez trouver un exemple ci-dessous, &lt;code&gt;my.ad.server.tld&lt;/code&gt; est bloqué en faisant en sorte que le système pense que l&#39;adresse IP est celle correspondant au périphérique.&lt;/p&gt;

&lt;h2&gt;Détection&lt;/h2&gt;
&lt;p&gt;Je vais expliquer par quelques morceaux de code comment detecter le blocage de publicité (le SDK AdMob est utilisé). La première chose à faire n&#39;est pas liée à l&#39;utilisation d&#39;AdMob, il suffit de lire le fichier &lt;code&gt;hosts&lt;/code&gt; et détecter si votre serveur de publicité est bloqué.&lt;/p&gt;
&lt;pre class=&quot;brush: java&quot;&gt;
public static boolean isAdBlockerPresent(boolean showAd) {
        if (showAd){
           BufferedReader in = null;
           try {
               in = new BufferedReader(new InputStreamReader(
                                                            new FileInputStream(&quot;/etc/hosts&quot;)));
               String line;

               while ((line = in.readLine()) != null) {
                  if (line.contains(&quot;admob&quot;)) {
                      return true;
                  }
                }
           } catch (Exception e) {
           } finally {
               if (in != null) {
                   try {
                       in.close();
                   } catch (IOException e) {
                   }
               }
           }
        }
        return false;
    }
&lt;/pre&gt;
&lt;p&gt;Le code est assez facile à comprendre, la méthode prend un paramètre permettant de contourner la vérification, et vérifie si le mot clef &quot;admob&quot; est présent dans le fichier &lt;code&gt;hosts&lt;/code&gt;. Le bon côté est qu&#39;il n&#39;est pas nécessaire de disposer d&#39;une permission spécifique pour lire le fichier &lt;code&gt;hosts&lt;/code&gt; alors qu&#39;il est nécessaire d&#39;être super-utilisateur pour y écrire.&lt;/p&gt;

&lt;p&gt;Pour être efficace, il est intéressant de vérifier si le blocage des publicités est activé uniquement s&#39;il y a une erreur lors du téléchargement de la publicité. Le SDK AdMob fournit un moyen simple de savoir si le téléchargement a échoué en implémentant un &lt;code&gt;listener&lt;/code&gt;. Vous pouvez trouver un exemple d&#39;implémentation ci-dessous, vous pouvez l&#39;utiliser en ajoutant uniquement le comportement à adopter quand le blocage de publicité est détecté (&lt;code&gt;onAdBlocked()&lt;/code&gt;) et la logique pour permettre de passer la vérification (&lt;code&gt;shouldCheckAdBlock()&lt;/code&gt;)&lt;/p&gt;.
&lt;pre class=&quot;brush: java&quot;&gt;
import com.google.ads.AdListener;
public abstract class AdBlockerListener implements AdListener{

    public abstract void onAdBlocked();

    public boolean shouldCheckAdBlock(){
          return true;
    }

    public void onReceiveAd(final Ad ad) {
    }

    public void onFailedToReceiveAd(final Ad ad, final AdRequest.ErrorCode errorCode) {
        Log.e(&quot;AdBlockerListener&quot;, &quot;Failed to receive ad, checking if network blocker is installed...&quot;);
        if (isAdBlockerPresent(shouldCheckAdBlock())) {
               Log.e(&quot;AdBlockerListener&quot;, &quot;Ad blocking seems enabled, tracking attempt&quot;);
               onAdBlocked();
            }
        } else {
            Log.e(&quot;AdBlockerListener&quot;, &quot;No ad blocking detected, silently fails&quot;);
        }
    }

    public void onPresentScreen(final Ad ad) {
    }

    public void onDismissScreen(final Ad ad) {
    }

    public void onLeaveApplication(final Ad ad) {
    }
}
&lt;/pre&gt;
&lt;p&gt;Dans l&#39;activité affichant la publicité, vous avez juste à enregistrer le &lt;code&gt;listener&lt;/code&gt; auprès de votre &lt;code&gt;AdView&lt;/code&gt;.
L&#39;exemple suivant montre comment le faire, n&#39;hésitez pas à alerter vos utilisateurs que vous avez détecté le blocage de publicité et leur permettre d&#39;acheter la version sans publicité facilement (ou de quitter l&#39;application le cas échéant). Cependant, ne le faites pas pour tous les lancements mais tous les n lancements.&lt;/p&gt;
&lt;pre class=&quot;brush: java&quot;&gt;
    void initView(){
        adView = (AdView) findViewById(R.id.adView);
        adView.setAdListener(new AdBlockerListener(){
           public void onAdBlocked(){
                 showNagScreen();
           }

           public boolean shouldCheckAdBlock(){
                 return isFreeApp();
            }

        });
    }
&lt;/pre&gt;
&lt;p&gt;C&#39;est fini, vous avez maintenant un moyen simple de détecter et de réagir aux utilisateurs utilisant un bloqueur de publicité.&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>(Français) Mise en place de tests unitaire</title>
   <link href="http://bloggure.info/ci/2011/10/27/francais-mise-en-place-de-tests-unitaire.html"/>
   <updated>2011-10-27T00:00:00+02:00</updated>
   <id>http://bloggure.info/ci/2011/10/27/francais-mise-en-place-de-tests-unitaire</id>
   <content type="html">&lt;!--:fr--&gt;&lt;h2&gt;A qui est destiné ce document&lt;/h2&gt;
Ce document est à l&#39;attention des développeurs ayant de bonnes connaissances techniques. En revanche il est intéressant pour un chef de projet de connaître les généralités énoncées dans la première partie du document.
&lt;h2&gt;Généralité&lt;/h2&gt;
&lt;h3&gt;Qu&#39;est ce qu&#39;un test unitaire&lt;/h3&gt;
D&#39;après Wikipédia :
&lt;blockquote&gt;En programmation informatique, le test unitaire est un procédé permettant de s&#39;assurer du fonctionnement correct d&#39;une partie déterminée d&#39;un logiciel ou d&#39;une portion d&#39;un programme (appelée « unité » ou « module »).
On écrit un test pour confronter une réalisation à sa spécification.&lt;/blockquote&gt;
Ils consistent en liste de tests à valider afin d&#39;être conforme à la documentation fonctionnelle. Ces tests doivent être exécutés le plus souvent possible au cours de la réalisation, en effet ils permettent en autre de mettre en évidence toutes régression dans le processus de développement.&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:fr--&gt;
&lt;h3&gt;Pré-requis à l&#39;écriture des tests&lt;/h3&gt;
Pour écrire les tests unitaires, nous avons besoin dans un premier temps de lister les fonctionnalités : chaque tests doit refléter une fonctionnalité (la plus précise possible). Si les fonctionnalités évolue dans le temps, les tests doivent refléter ces changements.

Dans le monde idéal du &lt;a title=&quot;Test Driven Development&quot; href=&quot;http://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;TDD&lt;/a&gt;, chaque test doit être écrit avant le code permettant de répondre à sa fonctionnalité : de cette manière on peux vérifier que le test failli bien si la fonctionnalité n&#39;existe pas.
&lt;h2&gt;Mise en œuvre&lt;/h2&gt;
&lt;h3&gt;Quoi tester ?&lt;/h3&gt;
Il y a certains éléments qui peuvent difficilement (mais pas impossible !) être testé : envoie d&#39;email, interfaces graphiques, l&#39;interfaçage avec des outils externes, etc... C&#39;est pour cela qu&#39;il est important d&#39;écrire des méthodes répondant à une fonction précise du cahier des charges, mais il sera impossible de tout tester.
&lt;h3&gt;L&#39;assertion&lt;/h3&gt;
L&#39;assertion est la plus petite unité de test, elle doit-être le plus simple possible. Toutes complexités doivent-être prohibé dans les tests et doivent chacun mettre en avant qu&#39;une fonction précise du cahier des charges.
&lt;h3&gt;Cas pratique&lt;/h3&gt;
Voici un cas de mise en oeuvre avec JUnit :
&lt;pre class=&quot;brush: java&quot;&gt;import org.junit.*;
import static org.junit.Assert.*;

public class SampleTest {

    @Before
    public void setUp() {
        // exécuté avant chaque test
    }

    @After
    public void tearDown() {
        // exécuté après chaque test
    }

    @Test
    public void testCondition1() {
        assertIsTrue(condition1);
    }

    @Test
    public void testCondition2() {
        assertIsFalse(condition2);
    }

}&lt;/pre&gt;
Dans l&#39;ordre seront exécutés :
&lt;pre class=&quot;brush: java&quot;&gt;SampleTest::setUp();
SampleTest::testCondition1();
SampleTest::tearDown();
SampleTest::setUp();
SampleTest::testCondition2();
SampleTest::tearDown();&lt;/pre&gt;
Vous remarquerez que dans cet exemple tous les tests sont exécutés les uns après les autres. Si un test échoue les autres sont tout de même exécuté. Dans d&#39;autres environnement ils pourraient être tous exécuté en parallèle. Voici un exemple en Javascript en utilisant &lt;code&gt;expresso&lt;/code&gt; pour tester une application web (complexe) :
&lt;pre class=&quot;brush: js&quot;&gt;var assert = require(&#39;assert&#39;);
 , server = require(&#39;express&#39;).createServer();

assert.response(server, {
    url: &#39;/&#39;, timeout: 500
}, {
    body: &#39;foobar&#39; // vérifie que le corps de la requête HTTP contient &#39;foobar&#39;
});

assert.response(server, {
    url: &#39;/&#39;,
    method: &#39;GET&#39;
}, {body: &#39;{&quot;name&quot;:&quot;tj&quot;}&#39;, // vérifie le contenu du corps de la requête HTTP, son statusCode et ses headers
    status: 200,
    headers: {
        &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,
        &#39;X-Foo&#39;: &#39;bar&#39;
    }
});

assert.response(server, {
    url: &#39;/foo&#39;,
    method: &#39;POST&#39;,
    data: &#39;bar baz&#39;
}, {
    body: &#39;/foo bar baz&#39;, // vérifie les données renvoyées par le serveur quand on poste un formulaire
    status: 200
}, &#39;Test POST&#39;);&lt;/pre&gt;
&lt;h2&gt;Bonnes pratiques&lt;/h2&gt;
&lt;h3&gt;Des tests simples&lt;/h3&gt;
Plus les tests sont simples et leur description explicite, plus ils sont efficaces car ils mettent facilement en évidence les problèmes de réalisation face aux spécifications.
&lt;h3&gt;Un test == une fonctionnalité&lt;/h3&gt;
Il ne faut surtout oublier aucune fonctionnalité dans les tests mis en œuvre : il est en effet très dangereux de penser être en sécurité si ils manquent des tests.
&lt;h3&gt;Ne pas mettre en doute l&#39;interpréteur&lt;/h3&gt;
Il existe des tests inutiles, par exemple le test ci-dessous :

&lt;code&gt; Assert::areEquals(1 + 2, 3);
&lt;/code&gt;

Dans le cas présent il est inutile de tester cette assertion. Il s&#39;agit d&#39;un test qui pourrait faire partie des tests unitaires de l&#39;interpréteur (compilateur, VM, etc...), mais pas de votre projet.
&lt;h3&gt;Pas de (bon) tests inutiles&lt;/h3&gt;
Mieux vaut écrire trop de (bon) test que pas assez. En effet, même si chaque tests doivent refléter la fonctionnalité la plus précise il faut écrire un maximum de test.
&lt;h2&gt;Annexes&lt;/h2&gt;
&lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm&quot;&gt;Junit FAQ&lt;/a&gt; - &lt;a href=&quot;http://www.onpk.net/php/simpletest/index.php&quot;&gt;SimpleTest&lt;/a&gt; - &lt;a href=&quot;http://visionmedia.github.com/expresso/&quot;&gt;Expresso&lt;/a&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>HP Touchpad quick hacks</title>
   <link href="http://bloggure.info/work/2011/09/04/hp-touchpad-quick-hacks.html"/>
   <updated>2011-09-04T00:00:00+02:00</updated>
   <id>http://bloggure.info/work/2011/09/04/hp-touchpad-quick-hacks</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/work/hp-touchpad-quick-hacks.html/attachment/hp-touchpad&quot; rel=&quot;attachment wp-att-395&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/09/HP-TouchPad-150x150.jpg&quot; alt=&quot;&quot; title=&quot;HP-TouchPad&quot; width=&quot;150&quot; height=&quot;150&quot; class=&quot;alignright size-thumbnail wp-image-395&quot; /&gt;&lt;/a&gt;I am one of the lucky guys getting this hyped discontinued tablet from HP at the lowest price. I&#39;ll sum up here few things I did on it.

&lt;h2&gt;First impressions&lt;/h2&gt;
I am an iPad owner for almost a year now, so I have my habits and I now know that tablets are mainly useful for consuming content (producing content is not really convenient when you have to use the virtual keyboard). The Touchpad is really what you expect from a tablet, full web consuming, multitasking, flash support, at a really decent speed. &lt;br/&gt;
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a href=&quot;http://www.bloggure.info/work/hp-touchpad-quick-hacks.html/attachment/hp-touchpad&quot; rel=&quot;attachment wp-att-395&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/09/HP-TouchPad-150x150.jpg&quot; alt=&quot;&quot; title=&quot;HP-TouchPad&quot; width=&quot;150&quot; height=&quot;150&quot; class=&quot;alignright size-thumbnail wp-image-395&quot; /&gt;&lt;/a&gt;Je suis un des &quot;chanceux&quot; ayant pu mettre la main sur cette tablette à la mode mais stoppée en plein essor par HP à un prix canon. Je vais détailler ici quelques bidouilles que je lui ai fait subir.

&lt;h2&gt;Premières impressions&lt;/h2&gt;
Je suis un utilisateur d&#39;iPad depuis presque un an maintenant. J&#39;ai donc mes habitudes et je sais maintenant que les tablettes sont principalement utiles pour consommer du contenu (en produire n&#39;est réellement pas confortable avec un clavier virtuel). La HP Touchpad correspond réellement à ce à quoi on peut s&#39;attendre d&#39;une tablette, accès complet au web, multitâches, gestion du flash complète, tout ceci à une vitesse très correcte.&lt;br/&gt;
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
The first thing that amazed me is the integration with almost every kind of web accounts, I added my Google account, my Skype account, my LinkedIn account, my Facebook account and so on... The only one lacking is Twitter. After my accounts were set up, I was able to directly video call a contact using Skype via the builtin messenging application, impressive !&lt;br/&gt;
WebOS&#39; UI is really clever, it makes good use of gestures and allows to group activities into &quot;cards&quot;, for example :
&lt;ul&gt;
&lt;li&gt;launch the mail client (self configured via account setup), click on a link, a new web browser window pops in the current card&lt;/li&gt;
&lt;li&gt;hit the &quot;activities&quot; button / swipe up from the bottom of the screen to return to the list of cards&lt;/li&gt;
&lt;li&gt;open a new browser card, navigate a few a return to the list of cards&lt;/li&gt;
&lt;li&gt;I can then, with a holded tap, move my old browser card from the mail card stack to the browser card stack, if I want to tidy things&lt;/li&gt;
&lt;li&gt;If I want to close a card, I simply swipe up or down the card from the activity list&lt;/li&gt;
&lt;li&gt;Notifications are easy to close be simply swiping them out&lt;/li&gt;
&lt;/ul&gt;
A lot of things are based on gesture and I have to admit it takes a few hours to get used to, but it is very confortable.
So far the only and the big problem everyone tells is that the App Catalog is quite empty, but for consuming website it is not that bad, and who knows what will happen in a few weeks...

&lt;h2&gt;Jailbreaking / Rooting...&lt;/h2&gt;
We are now used to locked devices, Unix under the hood but locked access to it, for iOS we say jailbreaking, for Android we say rooting. In either it consists in gaining full root access to the device. That&#39;s were the folks at HP/Palm are really good, you don&#39;t have to do anything complicated to gain root access, it is part of enabling the developer mode !
&lt;h3&gt;Enabling developer mode&lt;/h3&gt;
In the &quot;Just type...&quot; box at the top of the screen, enter &quot;webos20090606&quot; (without the quotes) it will bring an icon called developer mode, launch this software, enable the developer mode and &lt;b&gt;do not enter a password when it is prompted&lt;/b&gt; (failure to do so would require a full reset of webOS using WebOS Doctor software)
&lt;h3&gt;WebOS Doctor software&lt;/h3&gt;
WebOS is a really robust OS but if you go to far it might be possible for your device to be stuck. If this happens &lt;a href=&quot;https://ps.palmws.com/palmcsext/console/pages/LoginPage.iface&quot;&gt;WebOS Doctor&lt;/a&gt; will allow you to reset to factory state your tablet.
&lt;h2&gt;Homebrews&lt;/h2&gt;
This is the part where I am really impressed, the community around WebOS gathered and developed a package manager Preware and a lot of software : port of linux software, completely native software not in HP App catalog, patch to the system and so on. If you follow the few steps mentioned here your device will be a lot faster...
&lt;h3&gt;Installing Preware&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Update WebOS to latest version (3.0.2 as of today) via Update manager or WeOS Doctor.&lt;/li&gt;
&lt;li&gt;Enable developer mode (webos20090606)&lt;/li&gt;
&lt;li&gt;Download &lt;a href=&quot;http://dl.dropbox.com/u/2774158/WebOSQuickInstall-4.2.3.jar&quot;&gt;WebOSQuickInstall&lt;/a&gt; It requires a valid Java runtime to work&lt;/li&gt;
&lt;li&gt;Connect your tablet via USB to your computer, dismiss USB mount mode, launch WebOSQuickInstall&lt;/li&gt;
&lt;li&gt;Now select, from the list of application available in WebOSQuickInstall (globe icon), Preware, and let the install run&lt;/li&gt;
&lt;li&gt;When it&#39;s done, you can simply unplug your Touchpad, and launch Preware locate in the Downloads tab of your launcher&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Performance tweak your device&lt;/h3&gt;
Please note that while I find my device more responsive using the tricks I describe, I didn&#39;t run any benchmark to confirm it.
&lt;ul&gt;
&lt;li&gt;First thing to do is turn off logging : dial ##LOGS# in the phone app and you should have access to log levels setup. From there, clear the logs and set to minimal logging&lt;/li&gt;
&lt;li&gt;Second thing to do regarding logging is disabling the phone home process that uploads log files to palm servers, launch Preware, search &quot;Overlord Monitoring&quot; and install this patch&lt;/li&gt;
&lt;li&gt;Then, go to the patch section of preware and install the following ones to reduce logging at maximum : 
   &lt;ul&gt; 
        &lt;li&gt;Muffle System Logging&lt;/li&gt;
        &lt;li&gt;Remove Dropped Packet Logging&lt;/li&gt;
        &lt;li&gt;Quiet powerd Messages&lt;/li&gt;
   &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can add these patches to improve overall reactivity of your device
  &lt;ul&gt;
        &lt;li&gt;Unthrottle Download Manager&lt;/li&gt;
        &lt;li&gt;Faster Card Animations HYPER Version&lt;/li&gt;
        &lt;li&gt;Increase Touch Sensitivity And Smoothness 10&lt;/li&gt;
        &lt;li&gt;Unset CFQ IO Scheduler (especially if you intend to use another kernel, see below)&lt;/li&gt;
   &lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
Don&#39;t hesitate to explore Preware, you will be able to find ad-blocking patches for example...
&lt;h3&gt;Using alternate kernel&lt;/h3&gt;
As the Touchpad is Linux based, its kernel sources are available and it allows improving certain part of the system. For example, custom kernels for the Touchpad often includes access to BFQ IO Scheduler (better than CFQ in many circumstances), overclocking (HP downclocked the CPU from 1.5GHz to 1.2GHz to get the best power / battery drain ratio). Personally I use&lt;a href=&quot;http://forums.precentral.net/webos-internals/242728-webos-internals-uber-kernel.html&quot;&gt; Uberkernel&lt;/a&gt; and Govnah to set frequency to 1.5GHz and you will notice that your device will be blazing fast. I will not detail this more here as it is pretty straightforward to do.&lt;br/&gt;

&lt;h2&gt;What else ?&lt;/h2&gt;
I have did a lot more thing with the tablet for now, for example I have a smbfs share (Windows share) automatically mounted on start, SSH access, an xterm access. If I am not too lazy (blog posting in two language is a lot of work), I think I&#39;ll explain how to do this in another blog post.&lt;!--:--&gt;&lt;!--:fr--&gt;
La première chose qui m&#39;a impressionné est l&#39;intégration avec un grand nombre de comptes web, j&#39;ai ajouté mes comptes Google, Skype, LinkedIn, Facebook... le seul manquant à l&#39;appel est Twitter. Une fois que mes comptes étaient configurés, j&#39;ai directement pu passer un appel vidéo via Skype en utilisant l&#39;application intégrée de messagerie instantanée.&lt;br/&gt;
L&#39;interface de WebOS est réellement bien pensée, il y a une très bonne utilisation des gestes et autorise de grouper les activités au sein de &quot;cartes&quot;, par exemple : 
&lt;ul&gt;
&lt;li&gt;lancer le client mail (auto configuré lors de l&#39;ajout de compte Google), cliquez sur un lien, une nouvelle fenêtre de navigateur va s&#39;ouvrir dans la carte en cours&lt;/li&gt;
&lt;li&gt;Pressez le bouton &quot;activités&quot; / glissez du bas de l&#39;écran vers le milieu pour retourner à la liste de cartes&lt;/li&gt;
&lt;li&gt;Ouvrez une nouvelle fenêtre de navigateur, elle se met dans une nouvelle carte, retournez à la liste des activités&lt;/li&gt;
&lt;li&gt;Il est ensuite facile, en gardant une fenêtre maintenue à l&#39;écran, de la déplacer d&#39;une carte à une autre&lt;/li&gt;
&lt;li&gt;Pour fermer une fenêtre, il suffit de la faire glisser vers le haut ou le bas de l&#39;écran&lt;/li&gt;
&lt;li&gt;Il est possible de faire disparaître les notifications en les faisant glisser vers le bord de l&#39;écran&lt;/li&gt;
&lt;/ul&gt;
Beaucoup de choses se basent sur les gestes et je dois reconnaître qu&#39;il faut quelques heures pour s&#39;y habituer, mais une fois ceci fait, c&#39;est vraiment agréable.
Pour l&#39;instant le seul gros problème est celui que tout le monde évoque et concerne la relative maigreur de la boutique d&#39;applications d&#39;HP. Mais pour une utilisation principalement en surf web, ce n&#39;est pas si grave, et qui sait ce qui va arriver d&#39;ici quelques semaines...

&lt;h2&gt;Jailbreaking / Rooting...&lt;/h2&gt;
On est maintenant habitué aux machines verrouillées, Unix est sous le capot mais aucun accès à lui. Sous iOS on appelle la technique Jailbreak, sous Android on l&#39;appelle rooting. Dans tous les cas il s&#39;agit d&#39;avoir un accès complet à la machine. Et c&#39;est la que les gars de chez HP/Palm ont vraiment été bon, il n&#39;est pas nécessaire de faire quoi que ce soit de compliquer pour avoir un accès complet, il suffit d&#39;activer le mode développeur !
&lt;h3&gt;Activer le mode développeur&lt;/h3&gt;
Dans le champ de saisie &quot;tapez maintenant&quot; en haut de l&#39;écran, taper &quot;webos20090606&quot; (sans les guillemets) ceci va vous afficher une icône appelée mode développeur. Lancez l&#39;application, activez le mode développeur et &lt;b&gt;ne rentrez rien lorsqu&#39;il vous est demandé de saisir un mod de passe&lt;/b&gt; (si vous le faites vous devrez faire une réinitialisation de webOS en utilisant le logiciel WebOS Doctor).
&lt;h3&gt;WebOS Doctor&lt;/h3&gt;
WebOS est réellement un système d&#39;exploitation robuste mais s&#39;il vous arrive de vous retrouver devant une machine bloquée. Si cela vous arrive &lt;a href=&quot;https://ps.palmws.com/palmcsext/console/pages/LoginPage.iface&quot;&gt;WebOS Doctor&lt;/a&gt; vous permettra de remettre voter tablette dans l&#39;état dans lequel vous l&#39;avez déballée.
&lt;h2&gt;Homebrews&lt;/h2&gt;
C&#39;est la partie qui m&#39;impressionne le plus. La communauté autour de WebOS s&#39;est formée et a developpé un gestionnaire de paquets alternatif : Preware et tout un ensemble d&#39;autres logiciels : adaptation de version Linux, logiciels natif non présent dans l&#39;App Catalog d&#39;HP, patch pour le système et ainsi de suite... Si vous suivez les étapes détaillées ici il y a des chances que votre tablette soit sensiblement plus rapide.
&lt;h3&gt;Installer Preware&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mettez à jour WebOS à la dernière version (3.0.2 pour l&#39;instant) via le gestionnaire de mise à jour sur votre tablette ou WeOS Doctor.&lt;/li&gt;
&lt;li&gt;Activez le mode développeur (webos20090606)&lt;/li&gt;
&lt;li&gt;Téléchargez &lt;a href=&quot;http://dl.dropbox.com/u/2774158/WebOSQuickInstall-4.2.3.jar&quot;&gt;WebOSQuickInstall&lt;/a&gt; Il faut avoir un environnement d&#39;exécution Java valide&lt;/li&gt;
&lt;li&gt;Connectez voter tablette via l&#39;USB à votre ordinateur, ne choisissez pas &quot;connecter un lecteur USB&quot;, et lancez WebOSQuickInstall&lt;/li&gt;
&lt;li&gt;Ensuite, à partir de la liste des applications disponibles dans WebOSQuickInstall (l&#39;icône globe), sélectionnez Preware, et laissez l&#39;installation se faire&lt;/li&gt;
&lt;li&gt;Une fois l&#39;installation terminée, il vous suffit de débrancher votre Touchpad et de lancer l&#39;application Preware qui est maintenant présent dans l&#39;onglet Téléchargements du lanceur d&#39;application&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Amélioration des performances&lt;/h3&gt;
Veuillez noter que bien que je trouve ma tablette plus réactive en utilisant les astuces suivantes, je n&#39;ai effectué aucun benchmark pour le confirmer.
&lt;ul&gt;
&lt;li&gt;La première chose à faire est de désactiver au maximum les journaux systèmes : composez ##LOGS# dans l&#39;application téléphone et vous devriez avoir accès aux niveaux de journalisation. D&#39;ici, vider les logs et définissez le logging au niveau minimum.&lt;/li&gt;
&lt;li&gt;Le second point à effectuer est de désactiver l&#39;application qui collecte et envoie les logs aux serveur de Palm/HP. Lancez Preware, recherchez &quot;Overlord Monitoring&quot; et installez ce patch&lt;/li&gt;
&lt;li&gt;Ensuite, allez dans la section patch de Preware et installez les suivant pour réduire la journalisation au maximum : 
   &lt;ul&gt; 
        &lt;li&gt;Muffle System Logging&lt;/li&gt;
        &lt;li&gt;Remove Dropped Packet Logging&lt;/li&gt;
        &lt;li&gt;Quiet powerd Messages&lt;/li&gt;
   &lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vous pouvez ensuite ajouter ces patchs pour améliorer la réactivité globale de la machine
  &lt;ul&gt;
        &lt;li&gt;Unthrottle Download Manager&lt;/li&gt;
        &lt;li&gt;Faster Card Animations HYPER Version&lt;/li&gt;
        &lt;li&gt;Increase Touch Sensitivity And Smoothness 10&lt;/li&gt;
        &lt;li&gt;Unset CFQ IO Scheduler (surtout si vous comptez utiliser un autre kernel, plus d&#39;informations dans la suite)&lt;/li&gt;
   &lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
N&#39;hésitez pas à fouiller Preware, vous pourrez y trouver un patch permettant de stopper les publicités par exemple...
&lt;h3&gt;Utiliser un kernel alternatif&lt;/h3&gt;
Comme le Touchpad est basé sur Linux, les sources de son noyau sont disponibles et autorisent la communauté à les améliorer. Par exemple, les kernel alternatifs pour le Touchpad donnent souvent accès au BFQ IO Scheduler (meilleur que le CFQ proposé par défaut dans bien des cas), l&#39;overclocking (HP a réduit la fréquence du processeur à 1.2GHz pour obtenir le meilleur ratio performance / autonomie).
J&#39;utilise &lt;a href=&quot;http://forums.precentral.net/webos-internals/242728-webos-internals-uber-kernel.html&quot;&gt; Uberkernel&lt;/a&gt; et Govnah pour définir la fréquence à 1.5GHz ce qui rend, selon moi, la machine réellement plus rapide. Je ne vais pas détailler ici la marche à suivre car c&#39;est finalement assez simple et si vous en êtes arrivés là c&#39;est que vous saurez le faire...&lt;br/&gt;

&lt;h2&gt;Et ensuite ?&lt;/h2&gt;
J&#39;ai déjà fait beaucoup d&#39;autres choses avec la tablette. Par exemple j&#39;ai un partage smbfs (un partage Windows donc) provenant de mon NAS automatiquement monté au démarrage, un accès SSH, un xterm. Si j&#39;ai le courage (faire des billets en deux langues est quelque chose d&#39;assez long), je pense que j&#39;expliquerai comment faire dans un billet à venir.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Continuous delivery using Maven / Shell</title>
   <link href="http://bloggure.info/.java/.maven/2011/09/04/continuous-delivery-using-maven-shell.html"/>
   <updated>2011-09-04T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/.maven/2011/09/04/continuous-delivery-using-maven-shell</id>
   <content type="html">&lt;!--:en--&gt;&lt;h2&gt;Continuous delivery&lt;/h2&gt;
&lt;a href=&quot;http://www.bloggure.info/work/getting-source-revision-for-a-deployed-app-using-maven-and-a-servlet.html/attachment/maven_logo-2&quot; rel=&quot;attachment wp-att-74&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/Maven_logo1.gif&quot; alt=&quot;&quot; title=&quot;Maven&quot; width=&quot;304&quot; height=&quot;78&quot; class=&quot;alignright size-full wp-image-74&quot; /&gt;&lt;/a&gt;
After Continuous Integration, this is the word we see on the web these days. Its meaning is really simple, it consists in reducing steps in application deployment. In order to do so a set of tools actually exists, you can use the same PaaS images (thanks to the newcomer &lt;a href=&quot;http://blogs.vmware.com/console/2011/08/micro-cloud-foundry-open-paas-on-your-laptop-available-today.html&quot;&gt;Micro Cloud Foundry by VMWare&lt;/a&gt; or  use a special amazon ec2 instance) to have a development environment similar to production one. And you can use &lt;a href=&quot;http://wiki.opscode.com/display/chef/Home&quot;&gt;Chef&lt;/a&gt; to manage and automate your configuration. While these alternatives are really interesting, I think they are way too powerful and difficult to setup in simple cases.
I will explain my &quot;simple&quot; solution based on maven, shell scripts and hostname detection.

&lt;h2&gt;Example release archive&lt;/h2&gt;
An example is better than a thousand words, you will find an example of my solution in a github repository &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive&quot;&gt;Easy Release Archive&lt;/a&gt;. It is a maven project building a zip artifact containing everything to be deployed, and an example script to setup the Glassfish server.
&lt;h3&gt;What is inside ?&lt;/h3&gt;
To understand how it works, the best thing is to look what&#39;s inside.
&lt;ul&gt;
&lt;li&gt;an &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/assembly/assembly.xml&quot;&gt;assembly.xml file&lt;/a&gt; describing the files to include and their output name and location.&lt;/li&gt;
&lt;li&gt;a few scripts in /src/main/resources
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/resources/sanityCheck.sh&quot;&gt;sanityCheck.sh&lt;/a&gt; : helper script sourcing the correct variables depending on the hostname of the machine and ensuring variables are correctly setup&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/resources/setupGlassfish.sh&quot;&gt;setupGlassfish.sh&lt;/a&gt; : a sample script used to setup a Glassfish server with its required datasources and other parameters&lt;/li&gt;
&lt;li&gt;a &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/tree/master/src/main/resources/global&quot;&gt;global&lt;/a&gt; folder containing global configuration files&lt;/li&gt;
&lt;li&gt;a per hostname folder (in my case &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/tree/master/src/main/resources/samva-mbp&quot;&gt;samva-mbp&lt;/a&gt;) containing a &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/resources/samva-mbp/shell/envSetup.sh&quot;&gt;shell/envSetup.sh&lt;/a&gt; shell script to setup necessary variables and a &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/tree/master/src/main/resources/samva-mbp/config&quot;&gt;config&lt;/a&gt; folder for special environment configuration files.
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;the &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/pom.xml&quot;&gt;pom.xml&lt;/a&gt; file describing artifact versions to use in the assembly and the lifecycle to use.&lt;/li&gt;
&lt;/ul&gt;

A simple mvn package will build the zip archive with everything described in the assembly.xml file. You will just have to unzip and run the script(s) corresponding to the application deployment for it to be done. You can add this command line to your build server and you will have a simple but powerful continuous delivery system !&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;h2&gt;Livraison continue&lt;/h2&gt;
&lt;a href=&quot;http://www.bloggure.info/work/getting-source-revision-for-a-deployed-app-using-maven-and-a-servlet.html/attachment/maven_logo-2&quot; rel=&quot;attachment wp-att-74&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/Maven_logo1.gif&quot; alt=&quot;&quot; title=&quot;Maven&quot; width=&quot;304&quot; height=&quot;78&quot; class=&quot;alignright size-full wp-image-74&quot; /&gt;&lt;/a&gt;
Après l&#39;intégration continue, c&#39;est le mot à la mode sur le web ces derniers temps. Le concept est très simple, ceci consiste à réduire le nomrbe d&#39;étapes nécessaires au déploiement d&#39;une application. Pour le mettre en pratique il y a plusieurs solutions, utiliser un environnement PaaS similaire pour vos développements et la production (en utilisant la nouveauté &lt;a href=&quot;http://blogs.vmware.com/console/2011/08/micro-cloud-foundry-open-paas-on-your-laptop-available-today.html&quot;&gt;Micro Cloud Foundry de VMWare&lt;/a&gt;, utiliser une instance EC2 spéciale). Et vous pouvez utiliser &lt;a href=&quot;http://wiki.opscode.com/display/chef/Home&quot;&gt;Chef&lt;/a&gt; pour gérer et automatiser votre configuration. Bien que ces solutions soient très interessantes, je trouve qu&#39;elles sont finalement trop puissante et difficile à mettre en oeuvre dans des cas simples.
Je vais expliquer ici ma solution &quot;simple&quot; utilisant maven, des scripts shell et la détection du nom de la machine.

&lt;h2&gt;Exemple d&#39;archive de livraison&lt;/h2&gt;
Comme un exemple est mieux que des milliers de mots, vous trouverez un exemple de ma solution dans un dépot github &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive&quot;&gt;Easy Release Archive&lt;/a&gt;. C&#39;est un projet maven construisant un fichier zip contenant tout ce qui doit être déployé, et un script d&#39;exemple pour configurer le serveur Glassfish.
&lt;h3&gt;Quel contenu ?&lt;/h3&gt;
Pour comprendre comment il fonctionne, la meilleure chose à faire est de regarder son contenu
&lt;ul&gt;
&lt;li&gt;un &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/assembly/assembly.xml&quot;&gt;fichier assembly.xml&lt;/a&gt; décrivant les fichiers à inclure, leurs noms finaux et leurs localisations.&lt;/li&gt;
&lt;li&gt;quelques scripts dans /src/main/resources
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/resources/sanityCheck.sh&quot;&gt;sanityCheck.sh&lt;/a&gt; : un script permettant de charger les variables en fonction du nom d&#39;hôte de la machine et de s&#39;assurer que les variables nécessaires sont correctement configurées&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/resources/setupGlassfish.sh&quot;&gt;setupGlassfish.sh&lt;/a&gt; : un script simple permettant de configurer un serveur Glassfish avec les datasources et d&#39;autres paramètres&lt;/li&gt;
&lt;li&gt;un dossier &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/tree/master/src/main/resources/global&quot;&gt;global&lt;/a&gt; contenant les ficheirs de configuration globaux&lt;/li&gt;
&lt;li&gt;un dossier par nom d&#39;hôte (dans mon cas &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/tree/master/src/main/resources/samva-mbp&quot;&gt;samva-mbp&lt;/a&gt;) contenant un script shell &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/src/main/resources/samva-mbp/shell/envSetup.sh&quot;&gt;shell/envSetup.sh&lt;/a&gt; permettant de configurer les variables nécessaires et un dossier &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/tree/master/src/main/resources/samva-mbp/config&quot;&gt;config&lt;/a&gt; pour les fichiers de configuration propres à l&#39;environnement.
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;un fichier &lt;a href=&quot;https://github.com/CedricGatay/easy-release-archive/blob/master/pom.xml&quot;&gt;pom.xml&lt;/a&gt; file décrivant les versions des artefacts à utiliser dans la construction du fichier zip et le cycle de vie maven à adopter.&lt;/li&gt;
&lt;/ul&gt;

Un simple mvn package permettra de construire l&#39;archive zip contenant tout ce qui est décrit dans le fichier assembly.xml. Il suffira ensuite de décompresser le zip et d&#39;exécuter le ou les scripts correspondant au déploiement pour que celui-ci se fasse simplement, on peut même demander à son serveur d&#39;intégration continue de le faire pour avoir un système simple mais puissant de livraison continue.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>IntelliJ + External Library + @PropertyKey How To</title>
   <link href="http://bloggure.info/.java/.wicket/work/2011/08/21/intellij-external-library-propertykey-how-to.html"/>
   <updated>2011-08-21T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/.wicket/work/2011/08/21/intellij-external-library-propertykey-how-to</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/work/intellij-external-library-propertykey-how-to.html/attachment/idea_icon&quot; rel=&quot;attachment wp-att-365&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/idea_icon.png&quot; alt=&quot;&quot; title=&quot;IntelliJ IDEA Icon&quot; width=&quot;64&quot; height=&quot;64&quot; class=&quot;alignright size-full wp-image-365&quot; /&gt;&lt;/a&gt;I am a daily user of &lt;a href=&quot;http://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; to edit my Java code and &lt;a href=&quot;http://wicket.apache.org&quot;&gt;Apache Wicket&lt;/a&gt; to write my web application. I decided recently to use IntelliJ&#39;s annotations to make my code a little more robust by using &lt;code&gt;@Nullable&lt;/code&gt;, &lt;code&gt;@NotNull&lt;/code&gt;, &lt;code&gt;@NonNls&lt;/code&gt; and &lt;code&gt;@PropertyKey&lt;/code&gt;.&lt;br/&gt;In this blog post I explain how to manually add annotation to an external library. 
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a href=&quot;http://www.bloggure.info/work/intellij-external-library-propertykey-how-to.html/attachment/idea_icon&quot; rel=&quot;attachment wp-att-365&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/idea_icon.png&quot; alt=&quot;&quot; title=&quot;IntelliJ IDEA Icon&quot; width=&quot;64&quot; height=&quot;64&quot; class=&quot;alignright size-full wp-image-365&quot; /&gt;&lt;/a&gt;J&#39;utilise quotidiennement &lt;a href=&quot;http://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; pour développer en  Java et &lt;a href=&quot;http://wicket.apache.org&quot;&gt;Apache Wicket&lt;/a&gt; pour écrire mes applications web. J&#39;ai récemment entrepris d&#39;utiliser les annotations d&#39;IntelliJ pour rendre mon code un peu plus robuste grace à &lt;code&gt;@Nullable&lt;/code&gt;, &lt;code&gt;@NotNull&lt;/code&gt;, &lt;code&gt;@NonNls&lt;/code&gt; and &lt;code&gt;@PropertyKey&lt;/code&gt;.&lt;br/&gt;Dans ce billet, j&#39;explique comment ajouter manuellement ces annotations à une librairies externe au projet.
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
&lt;h2&gt;IntelliJ annotations&lt;/h2&gt;
Let&#39;s explain quickly how you can use these annotations and the problem I faced with the latter.&lt;br/&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;@Nullable&lt;/code&gt; : tells the editor that the field, parameter, return type may be &lt;code&gt;null&lt;/code&gt;. This way, IDEA will highlight you if you forget to check nullity.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;@NotNull&lt;/code&gt; : tells the editor that the field, parameter, return type will never be &lt;code&gt;null&lt;/code&gt;. This way, IDEA will highlight you if you do unnecessary null checking. It even can throw &lt;code&gt;RuntimeException&lt;/code&gt; if a method is invoked with a &lt;code&gt;null&lt;/code&gt; parameter although it shouldn&#39;t. The exception tells exactly what parameter of what method, it can help a lot debbugging a &lt;code&gt;NullPointerException&lt;/code&gt; coming out from nowhere !&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;@NonNls&lt;/code&gt; : tells the editor that the string you entered is not involved in internationalization of any kind so it will not bother you with duplicate string literals.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;@PropertyKey(resourceBundle)&lt;/code&gt; : tells the editor that the following string have to be present in a specific resource bundle. This way, IDEA is able to notice you missing translations in your application.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to use it...&lt;/h2&gt;
The first thing to do to use it is simply to annotate your source code like this:
&lt;pre class=&quot;brush: java&quot;&gt;
@NotNull
public String doSomething(@NotNull Object myObject,
                   @PropertyKey(resourceBundle=&quot;fr.gatay.cedric.bloggure.language&quot;) 
                   String propertyKey, 
                   @Nullable String argument){
	 @NonNls String s =  &quot;Return Value&quot;;
     return s;
}
&lt;/pre&gt;
This method is completely useless, but it can ease explaining how annotations work. By looking at the prototype we can now see that the method never returns &lt;code&gt;null&lt;/code&gt; value, doesn&#39;t accept a first parameter with a &lt;code&gt;null&lt;/code&gt; value, takes its second parameter from the &quot;&lt;code&gt;fr.gatay.cedric.bloggure.language&lt;/code&gt;&quot; resource bundle and accepts a potentially &lt;code&gt;null&lt;/code&gt; third parameter.&lt;br/&gt;
Last but not least, if we look at the implementation, we see that we tell IDEA not to verify the &quot;Return Value&quot; string against i18n rules.
&lt;h2&gt;How to use it, in libraries...&lt;/h2&gt;
If in your project, you want to use this feature in included libraries you might be glad the guys at Jetbrains included a feature called &quot;External annotations&quot;. It allows you to specify a location where to save these annotations.&lt;br/&gt;
Here is a quick example on how to add &lt;code&gt;@NotNull&lt;/code&gt; on &lt;code&gt;org.apache.wicket.extensions.Initializer&lt;/code&gt; :
First, invoke intention action, and select the annotation you want to put
&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/annotate.png&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/annotate.png&quot; alt=&quot;&quot; title=&quot;IDEA annotate&quot; width=&quot;527&quot; height=&quot;79&quot; class=&quot;aligncenter size-full wp-image-362&quot; /&gt;&lt;/a&gt;
Then, configure external annotation root, I tend to use a folder named annotation at the root of my workspace.
&lt;a href=&quot;http://www.bloggure.info/work/intellij-external-library-propertykey-how-to.html/attachment/externalroot&quot; rel=&quot;attachment wp-att-363&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/externalroot.png&quot; alt=&quot;&quot; title=&quot;IDEA external root selection&quot; width=&quot;723&quot; height=&quot;342&quot; class=&quot;aligncenter size-full wp-image-363&quot; /&gt;&lt;/a&gt;
That&#39;s all, if you look at the folder you specified, you will have the following structure:
&lt;a href=&quot;http://www.bloggure.info/work/intellij-external-library-propertykey-how-to.html/attachment/folder&quot; rel=&quot;attachment wp-att-364&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/folder.png&quot; alt=&quot;&quot; title=&quot;Annotations.xml folder&quot; width=&quot;582&quot; height=&quot;117&quot; class=&quot;aligncenter size-full wp-image-364&quot; /&gt;&lt;/a&gt;
In the folder corresponding to the package of the class you wanted to annotate you will find an &lt;code&gt;annotations.xml&lt;/code&gt; file like the following:
&lt;pre class=&quot;brush: xml&quot;&gt;
&lt;root&gt;
    &lt;item name=&#39;org.apache.wicket.extensions.Initializer void init(org.apache.wicket.Application) 0&#39;&gt;
        &lt;annotation name=&#39;org.jetbrains.annotations.NotNull&#39;&gt;
        &lt;/annotation&gt;
    &lt;/item&gt;
&lt;/root&gt;
&lt;/pre&gt;
The problem is that it is not easily possible to add &lt;code&gt;@PropertyKey&lt;/code&gt; or &lt;code&gt;@NotNls&lt;/code&gt; annotation in external libraries.
&lt;h2&gt;How to manually add an annotation&lt;/h2&gt;
In my case, I wanted to add &lt;code&gt;@PropertyKey&lt;/code&gt; on Apache Wicket feedback messages methods. My Wicket Application have a converter for string that handles internationalization, so I want to add &lt;code&gt;@PropertyKey(resourceBundle=&quot;fr.gatay.cedric.bloggure.language&quot;)&lt;/code&gt; to the String parameter of &lt;code&gt;org.apache.wicket.Component&lt;/code&gt; info and error methods.&lt;br/&gt;
By digging into the generated &lt;code&gt;annotations.xml&lt;/code&gt; file for &lt;code&gt;@NotNull&lt;/code&gt; annotation, I found out how to manually add my annotation. In my case, I end up with an &lt;code&gt;annotations.xml&lt;/code&gt; file like this in the folder &lt;code&gt;${annotationsRoot}/org/apache/wicket/&lt;/code&gt; :
&lt;pre class=&quot;brush: xml&quot;&gt;
&lt;root&gt;
 &lt;item name=&quot;org.apache.wicket.Component void error(java.io.Serializable) 0&quot;&gt;
	 &lt;annotation name=&quot;org.jetbrains.annotations.PropertyKey&quot;&gt;
	 	&lt;val name=&quot;resourceBundle&quot; val=&quot;fr.gatay.cedric.bloggure.language&quot;/&gt;
	 &lt;/annotation&gt;
 &lt;/item&gt;
 &lt;item name=&quot;org.apache.wicket.Component void info(java.lang.String) 0&quot;&gt;
	 &lt;annotation name=&quot;org.jetbrains.annotations.PropertyKey&quot;&gt;
 		&lt;val name=&quot;resourceBundle&quot; val=&quot;fr.gatay.cedric.bloggure.language&quot;/&gt;
	 &lt;/annotation&gt;
 &lt;/item&gt;
&lt;/root&gt;
&lt;/pre&gt;
If you look closely at this sample, you will quickly understand how things work. First, the &lt;code&gt;item&lt;/code&gt; element specify the method on which you want to put the annotation, please notice the number at the end specifying the parameter on which the annotation will be applied (starting at 0). 
&lt;br/&gt;
Inside the &lt;code&gt;item&lt;/code&gt; element, you find the &lt;code&gt;annotation&lt;/code&gt; element specifying the fully qualified class name of the annotation to apply. In the case of an annotation with parameters (like &lt;code&gt;@PropertyKey&lt;/code&gt;), you can set these parameters using the &lt;code&gt;val&lt;/code&gt; element, &lt;code&gt;name&lt;/code&gt; xml attribute refers to the attribute&#39;s name and &lt;code&gt;val&lt;/code&gt; xml attribute to the attribute&#39;s value.&lt;br/&gt;
You might need to restart IntelliJ for the new values to be read.&lt;!--:--&gt;&lt;!--:fr--&gt;
&lt;h2&gt;Annotations d&#39;IntelliJ&lt;/h2&gt;
Expliquons rapidement comment utiliser ces annotations et le problème que j&#39;ai rencontré avec la dernière d&#39;entre elle.&lt;br/&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;@Nullable&lt;/code&gt; : permet de dire à l&#39;éditeur que l&#39;attribut, le paramètre ou le type de retour peut être &lt;code&gt;null&lt;/code&gt;. De cette façon,  IDEA va signaler tout oubli de vérification de la nullité.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;@NotNull&lt;/code&gt; : permet de dire à l&#39;éditeur que l&#39;attribut, le paramètre ou le type de retour ne peut pas être &lt;code&gt;null&lt;/code&gt;. De cette façon, IDEA va vous avertir si vous faites une vérification de nullité inutile. Il va même lever une &lt;code&gt;RuntimeException&lt;/code&gt; si une méthode est appelée avec un argument &lt;code&gt;null&lt;/code&gt; alors qu&#39;il ne devrait pas. Cette exception donne exactement le paramètre et la méthode impliqué et peut bien aider à débugguer une &lt;code&gt;NullPointerException&lt;/code&gt; sortant de nulle part !&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;@NonNls&lt;/code&gt; : permet de dire à l&#39;éditeur que la chaine de caractères que vous avez saisi n&#39;entre pas dans le processus d&#39;internationalisation.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;@PropertyKey(resourceBundle)&lt;/code&gt; : permet de dire à l&#39;éditeur que la chaine de caractères correspond à une clef dans un fichier de langue. De cette façon, IDEA est capable de vous notifier qu&#39;il manque des traductions dans votre fichiers de langue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Comment l&#39;utiliser...&lt;/h2&gt;
La première et seule chose à faire est d&#39;annoter votre code comme dans l&#39;exemple suivant :
&lt;pre class=&quot;brush: java&quot;&gt;
@NotNull
public String doSomething(@NotNull Object myObject,
                   @PropertyKey(resourceBundle=&quot;fr.gatay.cedric.bloggure.language&quot;) 
                   String propertyKey, 
                   @Nullable String argument){
	 @NonNls String s =  &quot;Return Value&quot;;
     return s;
}
&lt;/pre&gt;
Cette méthode ne sert à rien, mais elle permet simplement d&#39;expliquer comment les annotations fonctionnent. En regardant le prototype nous pouvons simplement voir que la méthode ne retourne jamais de valeur &lt;code&gt;null&lt;/code&gt;, n&#39;accepte aucun premier paramètre avec une valeur &lt;code&gt;null&lt;/code&gt;, prend un second paramètre provenant du fichier de langue &quot;&lt;code&gt;fr.gatay.cedric.bloggure.language&lt;/code&gt;&quot; et accepte un troisième argument potentiellement &lt;code&gt;null&lt;/code&gt;.&lt;br/&gt;
Regardons l&#39;implémentation, nous disons à IDEA de ne pas vérifier la chaîne &quot;Return Value&quot; avec les règles concernant l&#39;internationalisation.
&lt;h2&gt;Comment l&#39;utiliser, dans des dépendances...&lt;/h2&gt;
Si dans votre projet, vous voulez utiliser cette fonctionnalité dans les dépendances, vous serez content d&#39;apprendre que les mecs de Jetbrains ont prévu une fonction appelée &quot;External annotations&quot;. Celle ci vous permet de définir un emplacement où ces annotations seront sauvegardées.&lt;br/&gt;
Voici un rapide exemple pour ajouter &lt;code&gt;@NotNull&lt;/code&gt; sur &lt;code&gt;org.apache.wicket.extensions.Initializer&lt;/code&gt; :
Premièrement, afficher le menu des intentions, et sélectionnez l&#39;annotation que vous désirez ajouter 
&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/annotate.png&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/annotate.png&quot; alt=&quot;&quot; title=&quot;IDEA annotate&quot; width=&quot;527&quot; height=&quot;79&quot; class=&quot;aligncenter size-full wp-image-362&quot; /&gt;&lt;/a&gt;
Ensuite, configurez la racine de stockage des annotations externe. J&#39;ai tendance à utiliser un dossier nommé annotation à la racine de mon espace de travail.
&lt;a href=&quot;http://www.bloggure.info/work/intellij-external-library-propertykey-how-to.html/attachment/externalroot&quot; rel=&quot;attachment wp-att-363&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/externalroot.png&quot; alt=&quot;&quot; title=&quot;IDEA external root selection&quot; width=&quot;723&quot; height=&quot;342&quot; class=&quot;aligncenter size-full wp-image-363&quot; /&gt;&lt;/a&gt;
C&#39;est tout, si vous regardez le contenu du répertoire choisi, vous obtiendrez la structure suivante :
&lt;a href=&quot;http://www.bloggure.info/work/intellij-external-library-propertykey-how-to.html/attachment/folder&quot; rel=&quot;attachment wp-att-364&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/folder.png&quot; alt=&quot;&quot; title=&quot;Annotations.xml folder&quot; width=&quot;582&quot; height=&quot;117&quot; class=&quot;aligncenter size-full wp-image-364&quot; /&gt;&lt;/a&gt;
Dans le dossier correspondant au package de la classe que vous désirez annoter, vous trouverez un fichier
&lt;code&gt;annotations.xml&lt;/code&gt; comme ci-après :
&lt;pre class=&quot;brush: xml&quot;&gt;
&lt;root&gt;
    &lt;item name=&#39;org.apache.wicket.extensions.Initializer void init(org.apache.wicket.Application) 0&#39;&gt;
        &lt;annotation name=&#39;org.jetbrains.annotations.NotNull&#39;&gt;
        &lt;/annotation&gt;
    &lt;/item&gt;
&lt;/root&gt;
&lt;/pre&gt;
Le soucis est qu&#39;il n&#39;est pas facile d&#39;ajouter les annotations &lt;code&gt;@PropertyKey&lt;/code&gt; ou &lt;code&gt;@NotNls&lt;/code&gt; sur des dépendances externes.
&lt;h2&gt;Comment ajouter manuellement une annotation&lt;/h2&gt;
Dans mon cas, je voulais ajouter &lt;code&gt;@PropertyKey&lt;/code&gt; sur les méthodes de gestion des messages vers l&#39;utilisateur d&#39;Apache Wicket. Mon application Wicket inclut un convertisseur qui gère l&#39;internationalisation automatiquement, je voulais donc ajouter &lt;code&gt;@PropertyKey(resourceBundle=&quot;fr.gatay.cedric.bloggure.language&quot;)&lt;/code&gt; sur le paramètre de type String des méthodes info et error de &lt;code&gt;org.apache.wicket.Component&lt;/code&gt;.&lt;br/&gt;
En analysant le fichier &lt;code&gt;annotations.xml&lt;/code&gt; généré pour l&#39;annotation &lt;code&gt;@NotNull&lt;/code&gt;, j&#39;ai trouvé comment ajouter manuellement mon annotation. Dans mon cas, je me suis retrouvé avec un fichier &lt;code&gt;annotations.xml&lt;/code&gt; comme ceci dans le dossier &lt;code&gt;${annotationsRoot}/org/apache/wicket/&lt;/code&gt; :
&lt;pre class=&quot;brush: xml&quot;&gt;
&lt;root&gt;
 &lt;item name=&quot;org.apache.wicket.Component void error(java.io.Serializable) 0&quot;&gt;
	 &lt;annotation name=&quot;org.jetbrains.annotations.PropertyKey&quot;&gt;
	 	&lt;val name=&quot;resourceBundle&quot; val=&quot;fr.gatay.cedric.bloggure.language&quot;/&gt;
	 &lt;/annotation&gt;
 &lt;/item&gt;
 &lt;item name=&quot;org.apache.wicket.Component void info(java.lang.String) 0&quot;&gt;
	 &lt;annotation name=&quot;org.jetbrains.annotations.PropertyKey&quot;&gt;
 		&lt;val name=&quot;resourceBundle&quot; val=&quot;fr.gatay.cedric.bloggure.language&quot;/&gt;
	 &lt;/annotation&gt;
 &lt;/item&gt;
&lt;/root&gt;
&lt;/pre&gt;
Si vous regardez de plus près cet exemple, vous allez rapidement comprendre comment les choses fonctionnent. Premièrement l&#39;élement &lt;code&gt;item&lt;/code&gt; spécifie la méthode où vous voulez placer l&#39;annotation, veuillez remarquer le nombre à la fin qui précise le paramètre sur lequel l&#39;annotation prendra place (démarrant à 0). 
&lt;br/&gt;
Dans l&#39;élément &lt;code&gt;item&lt;/code&gt;, vous trouvez l&#39;élément &lt;code&gt;annotation&lt;/code&gt; précisant le nom complet de l&#39;annotation à appliquer. Dans le cas d&#39;une annotation avec des paramètres (comme &lt;code&gt;@PropertyKey&lt;/code&gt;), vous pouvez définir ces paramètres en utilisant l&#39;élément &lt;code&gt;val&lt;/code&gt;, l&#39;attribut XML &lt;code&gt;name&lt;/code&gt; référence le nom de l&#39;attribut et l&#39;élément XML &lt;code&gt;val&lt;/code&gt; référence la valeur de l&#39;attribut.&lt;br/&gt;
Il peut être nécessaire de redémarrer IntelliJ pour que les nouvelles valeurs soient prises en compte.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Convert a mySQL Database from latin1 to UTF-8</title>
   <link href="http://bloggure.info/.shell/2011/08/21/convert-a-mysql-database-from-latin1-to-utf-8.html"/>
   <updated>2011-08-21T00:00:00+02:00</updated>
   <id>http://bloggure.info/.shell/2011/08/21/convert-a-mysql-database-from-latin1-to-utf-8</id>
   <content type="html">&lt;!--:en--&gt;A frequent problem when it comes to internationalisation is proper handling of different charset. When you&#39;re using Java and Maven it is relatively easy to set up source encoding to UTF-8, but the frequent point of failure is in the SQL database.
&lt;br/&gt;
If you use mySQL, and you have latin1 tables, but you should have UTF-8 instead, use this little script to convert from latin1 to UTF-8 : 
&lt;pre class=&quot;brush: shell&quot;&gt;
mysqldump --user=${USER} --password=${PASS} --default-character-set=latin1 --skip-set-charset ${DATABASE} &gt; dump.sql;
sed -r ‘s/latin1/utf8/g’ dump.sql &gt; dump_utf.sql
mysql --user=${USER} --password=${PASS} --execute=”DROP DATABASE ${DATABASE}; CREATE DATABASE ${DATABASE} CHARACTER SET utf8 COLLATE utf8_general_ci;”
mysql --user=${USER} --password=${PASS} --default-character-set=utf8 dbname &lt; dump_utf.sql
&lt;/pre&gt;
Generally speaking, don&#39;t hesitate to always put the &lt;code&gt;--default-character-set=utf8&lt;/code&gt; on all the mySQL commands you execute.
Don&#39;t forget to add at the end of your jdbc connection url the following parameters : &lt;code&gt;&quot;useUnicode=true&amp;characterEncoding=UTF-8&quot;&lt;/code&gt; to ensure you connect using UTF-8.&lt;!--:--&gt;&lt;!--:fr--&gt;Un problème fréquent quand on doit aborder l&#39;internationalisation est la bonne gestion des différents charset. Quand vous utilisez du Java avec Maven, il est relativement simple de définir l&#39;encoding des fichiers sources en UTF-8 mais le point courant d&#39;échec et la base SQL.
&lt;br/&gt;
Si vous utilisez mySQL et que vous avez des tables en latin1, mais que vous devriez avoir de l&#39;UTF-8, utilisez ce petit script pour convertir du latin1 vers l&#39;UTF-8 :
&lt;pre class=&quot;brush: shell&quot;&gt;
mysqldump --user=${USER} --password=${PASS} --default-character-set=latin1 --skip-set-charset ${DATABASE} &gt; dump.sql;
sed -r ‘s/latin1/utf8/g’ dump.sql &gt; dump_utf.sql
mysql --user=${USER} --password=${PASS} --execute=”DROP DATABASE ${DATABASE}; CREATE DATABASE ${DATABASE} CHARACTER SET utf8 COLLATE utf8_general_ci;”
mysql --user=${USER} --password=${PASS} --default-character-set=utf8 dbname &lt; dump_utf.sql
&lt;/pre&gt;
Globalement, n&#39;hésitez pas à toujours placer &lt;code&gt;--default-character-set=utf8&lt;/code&gt; dans toutes les commandes mySQL que vous exécutez.
N&#39;oubliez pas non plus d&#39;ajouter les paramètres &lt;code&gt;&quot;useUnicode=true&amp;characterEncoding=UTF-8&quot;&lt;/code&gt; à la fin de votre url de connexion jdbc pour vous assurez que vous vous connectez en UTF-8.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>ejb-client package + JRebel + Glassfish</title>
   <link href="http://bloggure.info/.java/.maven/2011/08/09/ejb-client-package-jrebel-glassfish.html"/>
   <updated>2011-08-09T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/.maven/2011/08/09/ejb-client-package-jrebel-glassfish</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/java-work/ejb-client-package-jrebel-glassfish.html/attachment/logo_jrebel&quot; rel=&quot;attachment wp-att-340&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/logo_jrebel.png&quot; alt=&quot;&quot; title=&quot;JRebel&quot; width=&quot;146&quot; height=&quot;40&quot; class=&quot;alignright size-full wp-image-340&quot; /&gt;&lt;/a&gt;
&lt;h2&gt;JRebel ?&lt;/h2&gt;
I use &lt;a href=&quot;http://www.zeroturnaround.com/jrebel/&quot; title=&quot;JRebel&quot;&gt;JRebel&lt;/a&gt; to speed up my development. It is a really impressive tool allowing to develop full blended Java EE application as you would develop in PHP. No redeploy, at the cost of a little slow-down in development mode. The tool does what it says, and it&#39;s worth the price ! The JRebel plugin for maven does the job very well by generating the &lt;code&gt;rebel.xml&lt;/code&gt; file that does the magic.

&lt;h2&gt;What&#39;s the deal ?&lt;/h2&gt;
Although JRebel is an awesome tool, there is some magic within, and, in special corner cases it might not work as expected. In my case I have a quite typical web application split in multiple parts:
&lt;ul&gt;
   &lt;li&gt;a web application (war)&lt;/li&gt;
   &lt;li&gt;an ejb module (jar)&lt;/li&gt;
   &lt;li&gt;other modules not involved in my problem&lt;/li&gt;
&lt;/ul&gt;
The web application includes, in its &lt;code&gt;WEB-INF/lib&lt;/code&gt; folder, the &lt;em&gt;ejb-client&lt;/em&gt; artifact of my ejb module. To make it clear, &lt;em&gt;ejb-client&lt;/em&gt; artifact is typically the jar containing the interfaces to be used by the client module(s).

The problem I had was that JRebel magic was reloading too much things : in fact, it reloaded classes even if they were not in the &lt;em&gt;ejb-client&lt;/em&gt;. My application container (Glassfish 3.x) was not very keen on this thing. I opened &lt;a href=&quot;http://www.zeroturnaround.com/forum/topic.php?id=1315&quot; title=&quot;JRebel + Glassfish 3.1 + ejb-client + Wicket&quot;&gt;a thread on ZeroTurnAround&#39;s forum&lt;/a&gt; and the answer I got is that I have to find a way to ignore files in my &lt;em&gt;ejb-client&lt;/em&gt; module. By digging in &lt;em&gt;maven-ejb-plugin&lt;/em&gt;, I didn&#39;t find anything to rename a file in the &lt;em&gt;ejb-client&lt;/em&gt; module, and I didn&#39;t find a parameter to pass to JRebel to specify which filenames can contain its configuration.
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a href=&quot;http://www.bloggure.info/java-work/ejb-client-package-jrebel-glassfish.html/attachment/logo_jrebel&quot; rel=&quot;attachment wp-att-340&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/08/logo_jrebel.png&quot; alt=&quot;&quot; title=&quot;JRebel&quot; width=&quot;146&quot; height=&quot;40&quot; class=&quot;alignright size-full wp-image-340&quot; /&gt;&lt;/a&gt;
&lt;h2&gt;JRebel ?&lt;/h2&gt;
J&#39;utilise &lt;a href=&quot;http://www.zeroturnaround.com/jrebel/&quot; title=&quot;JRebel&quot;&gt;JRebel&lt;/a&gt; pour accélerer mon cycle de développement. C&#39;est un outil impressionnant qui permet de développer une application Java EE comme du PHP. Pas de redéploiement, tout ça au prix d&#39;une petite perte de performances en mode développement. L&#39;outil fait ce qu&#39;il promet, et vaut réellement son prix ! Le plugin JRebel pour maven fait exactement ce qu&#39;on attend de lui en générant automatiquement le fichier &lt;code&gt;rebel.xml&lt;/code&gt; qui s&#39;occupe de la magie.

&lt;h2&gt;Quel est le problème alors ?&lt;/h2&gt;
Bien que JRebel soit un outil génial, il y a un peu trop de magie à l&#39;intérieur et, dans certains cas particuliers, il se peut que ça ne marche pas tout à fait comme attendu. Dans mon cas, j&#39;ai une application web assez classique divisée en plusieurs modules :
&lt;ul&gt;
   &lt;li&gt;une application web (war)&lt;/li&gt;
   &lt;li&gt;un module ejb (jar)&lt;/li&gt;
   &lt;li&gt;d&#39;autres modules non impliqués dans mon problème&lt;/li&gt;
&lt;/ul&gt;
La web application inclut, dans son dossier &lt;code&gt;WEB-INF/lib&lt;/code&gt;, l&#39;artifact &lt;em&gt;ejb-client&lt;/em&gt; de mon module ejb. Pour être clair, l&#39;artifact &lt;em&gt;ejb-client&lt;/em&gt; est généralement le jar contenant les interfaces publiées permettant l&#39;utilisation des ejb par les modules clients.

Le problème que j&#39;ai eu était que la magie de JRebel entraînait le rechargemenet de trop de classes. En fait, JRebel rechargeait des classes qui n&#39;étaient même pas dans mon artifact &lt;em&gt;ejb-client&lt;/em&gt;. Mon container d&#39;application (Glassfish 3.x) n&#39;aimait pas trop ce comportement. J&#39;ai donc ouvert &lt;a href=&quot;http://www.zeroturnaround.com/forum/topic.php?id=1315&quot; title=&quot;JRebel + Glassfish 3.1 + ejb-client + Wicket&quot;&gt;un sujet sur le forum de ZeroTurnAround&lt;/a&gt; où j&#39;ai eu une réponse me disant de trouver un moyen d&#39;exclure les fichiers que je ne voulais pas voir rechargés dans mon module &lt;em&gt;ejb-client&lt;/em&gt;.

J&#39;ai donc fouiné dans &lt;em&gt;maven-ejb-plugin&lt;/em&gt;, mais je n&#39;ai rien trouvé permettant de renommer un fichier dans l&#39;artifact &lt;em&gt;ejb-client&lt;/em&gt;. Je n&#39;ai pas non plus trouvé de paramètre spécifique à passer à JRebel pour lui spécifier quels noms de fichier il doit monitorer pour trouver sa configuration.
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
&lt;h2&gt;The solution&lt;/h2&gt;
I patched the &lt;em&gt;maven-ejb-plugin&lt;/em&gt; to fulfill my needs. It is done in a very simple and probably not optimal way. The trick is to create a file named &lt;code&gt;client.rebel.xml&lt;/code&gt; containing the JRebel configuration to be used by the &lt;em&gt;ejb-client&lt;/em&gt; module. At compile time, when building the &lt;em&gt;ejb-client&lt;/em&gt; artifact, Maven will automatically replace the auto-generated &lt;code&gt;rebel.xml&lt;/code&gt; by the &lt;code&gt;client.rebel.xml&lt;/code&gt;.
The piece of code corresponding to the patch is the following:
&lt;pre class=&quot;brush: java&quot;&gt;
File file = new File(outputDirectory, &quot;client.rebel.xml&quot;);
if (file.exists()){
   getLog().info(&quot;Found a client.rebel.xml, renaming it to rebel.xml and put it into destination ejb-client archive&quot;);
   clientArchiver.getArchiver().addFile(file, &quot;rebel.xml&quot;);
   List list = new ArrayList(Arrays.asList(excludes));
   list.add(&quot;**/client.rebel.xml&quot;);
   list.add(&quot;**/rebel.xml&quot;);
   excludes = (String[]) list.toArray(EMPTY_STRING_ARRAY);
}
&lt;/pre&gt;
This is the only modification done to the original &lt;em&gt;maven-ejb-plugin&lt;/em&gt; (aside the modified version number in &lt;code&gt;pom.xml&lt;/code&gt; to clearly identify my fork) so it will surely be easy to port to the another version.&lt;br/&gt;

&lt;h2&gt;How to use ?&lt;/h2&gt;
I imported my little fork of &lt;a href=&quot;https://github.com/CedricGatay/maven-ejb-plugin-jrebel&quot; title=&quot;maven-ejb-plugin-jrebel&quot;&gt;maven-ejb-plugin on my github account&lt;/a&gt;. You can freely use it, fork it, improve it if you need to. If I find the time I could make it better by providing a much more flexible system (&lt;code&gt;client.rebel.xml&lt;/code&gt; to &lt;code&gt;rebel.xml&lt;/code&gt; hard coded hurts me while reading this code...).
To use this, if you need to, you simply need to clone the sources, build this project and set the &lt;em&gt;maven-ejb-plugin&lt;/em&gt; version to your pom like the following :
&lt;pre class=&quot;brush:xml&quot;&gt;
&lt;build&gt;
 &lt;plugins&gt;
   &lt;plugin&gt;
     &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
     &lt;artifactId&gt;maven-ejb-plugin&lt;/artifactId&gt;
     &lt;version&gt;2.3-jrebel&lt;/version&gt;
  &lt;/plugin&gt;
 &lt;/plugins&gt;
&lt;/build&gt;
&lt;/pre&gt;
If it works, you will see in your build log a line telling &quot;&lt;code&gt;Found a client.rebel.xml, renaming it to rebel.xml and put it into destination ejb-client archive&lt;/code&gt;&quot;. If everything goes well, the problem disappears and the next step is to deploy the artifact to your company hosted maven repository to let your entire team use this.

Hope it&#39;ll help... &lt;!--:--&gt;&lt;!--:fr--&gt;
&lt;h2&gt;La solution&lt;/h2&gt;
J&#39;ai patché &lt;em&gt;maven-ejb-plugin&lt;/em&gt; pour correspondre à mon besoin. C&#39;est fait de façon très simple et certainement pas la plus optimale. L&#39;astuce est de créer un fichier nommé &lt;code&gt;client.rebel.xml&lt;/code&gt; contenant la configuration de  JRebel correspondant au module &lt;em&gt;ejb-client&lt;/em&gt;. À la compilation, lors du build de la partie &lt;em&gt;ejb-client&lt;/em&gt;, maven va automatiquement remplacer le &lt;code&gt;rebel.xml&lt;/code&gt; autogénéré par le &lt;code&gt;client.rebel.xml&lt;/code&gt;.
La partie de code correspondant au patch est la suivante :
&lt;pre class=&quot;brush: java&quot;&gt;
File file = new File(outputDirectory, &quot;client.rebel.xml&quot;);
if (file.exists()){
   getLog().info(&quot;Found a client.rebel.xml, renaming it to rebel.xml and put it into destination ejb-client archive&quot;);
   clientArchiver.getArchiver().addFile(file, &quot;rebel.xml&quot;);
   List list = new ArrayList(Arrays.asList(excludes));
   list.add(&quot;**/client.rebel.xml&quot;);
   list.add(&quot;**/rebel.xml&quot;);
   excludes = (String[]) list.toArray(EMPTY_STRING_ARRAY);
}
&lt;/pre&gt;
C&#39;est la seule modification faite au plugin original &lt;em&gt;maven-ejb-plugin&lt;/em&gt; (en plus du numéro de version modifié dans le &lt;code&gt;pom.xml&lt;/code&gt; pour identifier clairement ce fork), il devrait donc être facile de l&#39;appliquer sur les autres versions du plugin.&lt;br/&gt;

&lt;h2&gt;Comment l&#39;utiliser ?&lt;/h2&gt;
J&#39;ai importé ce petit fork de &lt;a href=&quot;https://github.com/CedricGatay/maven-ejb-plugin-jrebel&quot; title=&quot;maven-ejb-plugin-jrebel&quot;&gt;maven-ejb-plugin sur mon compte github&lt;/a&gt;. Vous pouvez l&#39;utiliser, le modifier, l&#39;améliorer librement si vous en avez besoin. Si je trouve le temps je pourrais le rendre un peu plus flexible (&lt;code&gt;client.rebel.xml&lt;/code&gt; vers &lt;code&gt;rebel.xml&lt;/code&gt; en dur dans le code me pique les yeux...).
Pour l&#39;utiliser, il est juste nécessaire de cloner les sources, de le compiler en utilisant maven et de mettre à jour la version du plugin &lt;em&gt;maven-ejb-plugin&lt;/em&gt; dans votre pom :
&lt;pre class=&quot;brush:xml&quot;&gt;
&lt;build&gt;
 &lt;plugins&gt;
   &lt;plugin&gt;
     &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
     &lt;artifactId&gt;maven-ejb-plugin&lt;/artifactId&gt;
     &lt;version&gt;2.3-jrebel&lt;/version&gt;
  &lt;/plugin&gt;
 &lt;/plugins&gt;
&lt;/build&gt;
&lt;/pre&gt;
Si tout fonctionne correctement, vous devriez voir dans vos logs de compilation une ligne disant &quot;&lt;code&gt;Found a client.rebel.xml, renaming it to rebel.xml and put it into destination ejb-client archive&lt;/code&gt;&quot;. Si tout se passe bien, le problème aura disparu et vous n&#39;aurez plus qu&#39;à déployer l&#39;artifact sur votre repository maven d&#39;entreprise pour que toute votre équipe puisse se débarasser de cet ennuyeux soucis.

En espérant en aider certains...&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>A programmer's life</title>
   <link href="http://bloggure.info/www/2011/08/04/a-programmers-life.html"/>
   <updated>2011-08-04T00:00:00+02:00</updated>
   <id>http://bloggure.info/www/2011/08/04/a-programmers-life</id>
   <content type="html">&lt;!--:en--&gt;I just found out a great web comic site &lt;a href=&quot;http://aprogrammerslife.info/&quot; title=&quot;A programmer&#39;s life&quot;&gt;A programmer&#39;s life&lt;/a&gt;, don&#39;t hesitate to put it in your bookmarks next to &lt;a href=&quot;http://geekandpoke.typepad.com/&quot; title=&quot;Geek And Poke&quot; &gt;Geek And Poke&lt;/a&gt;.&lt;!--:--&gt;&lt;!--:fr--&gt;Je viens de trouver un excellent site de web comic &lt;a href=&quot;http://aprogrammerslife.info/&quot; title=&quot;A programmer&#39;s life&quot; &gt;A programmer&#39;s life&lt;/a&gt;, mettez le dans vos favoris à côté de &lt;a href=&quot;http://geekandpoke.typepad.com/&quot; title=&quot;Geek And Poke&quot;&gt;Geek And Poke&lt;/a&gt; !&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Alerta-JUL - Elegant log tailing</title>
   <link href="http://bloggure.info/.shell/work/2011/07/30/alerta-jul-elegant-log-tailing.html"/>
   <updated>2011-07-30T00:00:00+02:00</updated>
   <id>http://bloggure.info/.shell/work/2011/07/30/alerta-jul-elegant-log-tailing</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/work/alerta-jul-elegant-log-tailing.html/attachment/terminal128&quot; rel=&quot;attachment wp-att-275&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-275&quot; title=&quot;Terminal&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Terminal128.png&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;&lt;/a&gt;
&lt;h2&gt;Classic tailing&lt;/h2&gt;
In my day to day activities, there is one thing I do everytime and I think every developer does : I tail the logs. The problem with logs checking is that you are rapidly facing a huge file, and the classic &lt;code&gt;tail -f&lt;/code&gt; is not enough. The sad part of log tailing is that you only have monochrome logs, without any colouring of any kind helping you identify critical lines against more common ones.
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a href=&quot;http://www.bloggure.info/work/alerta-jul-elegant-log-tailing.html/attachment/terminal128&quot; rel=&quot;attachment wp-att-275&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-275&quot; title=&quot;Terminal&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Terminal128.png&quot; alt=&quot;&quot; width=&quot;128&quot; height=&quot;128&quot; /&gt;&lt;/a&gt;
&lt;h2&gt;La visualisation des &lt;em&gt;logs&lt;/em&gt;&lt;/h2&gt;
Dans mes activités quotidiennes, il y a une chose que je fais énormément et que je pense tout développeur fait : je &quot;tail&quot; les logs (je les visualise de façon interactive pour ceux qui ne comprendraient pas). Le soucis avec la consultation des logs est qu&#39;un fichier de logs devient très rapidement énorme, et que le classique &lt;code&gt;tail -f&lt;/code&gt; ne suffit plus. La partie la plus triste de la consultation des logs est qu&#39;on ne dispose que de logs monochromes, sans aucune coloration aidant à identifier les parties les plus critiques par rapport au plus communes.
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
&lt;h2&gt;Colored logs&lt;/h2&gt;
A good thing would be to have colorized logs. I used &lt;code&gt;&lt;a title=&quot;CCZE on Freshmeat&quot; href=&quot;http://freshmeat.net/projects/ccze/&quot;&gt;ccze&lt;/a&gt;&lt;/code&gt; a few years ago, which combined with the command you want provide a great output. But, as I am a Mac user, I can&#39;t use &lt;code&gt;ccze&lt;/code&gt; anymore as it does not work on my platform.&lt;br/&gt;

I looked for another existing alternative and I found &lt;a title=&quot;log4tailer on Google Code&quot; href=&quot;http://code.google.com/p/log4tailer/&quot;&gt;log4tailer&lt;/a&gt;, now &lt;a title=&quot;Alerta on bitbucket&quot; href=&quot;https://bitbucket.org/jordilin/alerta/wiki/Home&quot;&gt;Alerta&lt;/a&gt; which is a nice ccze equivalent.&lt;br/&gt;

By testing it, I discovered a few problems, but as it is an open-source software, I forked it (on &lt;a title=&quot;Alerta-JUL on github&quot; href=&quot;https://github.com/CedricGatay/alerta-jul&quot;&gt;github&lt;/a&gt;, don&#39;t have a bitbucket account and was lazy having another DVCS to learn).
&lt;h2&gt;Log4tailer / Alerta features&lt;/h2&gt;
This is the list of features from the original author&#39;s page
&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;Multitailing capability. It can tail multiple logs at a time&lt;/li&gt;
	&lt;li&gt;Colors for every level: warn, info, debug, error and fatal&lt;/li&gt;
	&lt;li&gt;Emphasize multiple targets (log traces) given regular expressions&lt;/li&gt;
	&lt;li&gt;Follow log upon truncation by default&lt;/li&gt;
	&lt;li&gt;User defined colors for each level&lt;/li&gt;
	&lt;li&gt;Silent (daemonized) mode&lt;/li&gt;
	&lt;li&gt;Throttling mode. Slow down the information being printed in the terminal&lt;/li&gt;
	&lt;li&gt;Inactivity log monitoring&lt;/li&gt;
	&lt;li&gt;mail notification&lt;/li&gt;
	&lt;li&gt;Pause Modes freezes output for a limited period of time depending on level found.&lt;/li&gt;
	&lt;li&gt;Analytics. Makes a report of each level found in logs when finished.&lt;/li&gt;
	&lt;li&gt;Different color schemes for each log&lt;/li&gt;
	&lt;li&gt;Tailing logs over SSH&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
The key features for me are the SSH mode (it requires python-paramiko module) and the inactivity log monitoring (it handles log-rotate automagically). The good part is that everything can be customized by the user in a file, provided in the command line or taken from ~/.log4tailer (you can check mine &lt;a title=&quot;log4tailer file&quot; href=&quot;https://github.com/CedricGatay/dotfiles/blob/master/log4tailer&quot;&gt;here&lt;/a&gt;).&lt;br/&gt;

This way, when I want to check the log from my second computer, I just have to launch Alerta, it autoconnects via SSH to my remote machine and tails the log I want, magic inside !
&lt;h2&gt;Improvements ?&lt;/h2&gt;
&lt;h3&gt;Phase 1 : Bug fixing&lt;/h3&gt;
The main thing that bothered me was that color matching was done against log4j&#39;s log levels and I am using Java Util Logging, so my first modification was made to add JUL logging levels matching.&lt;br/&gt;

The second problem I had to face was another incompatibility with my Mac environment (readline in python does not behave the same as on other systems). The bug made the log tailer not follow the logs (embarrassing isn&#39;t it ?).
&lt;h3&gt;Phase 2 : Improvements&lt;/h3&gt;
When I fixed the things that annoyed me, I realized I could go a little further by implementing a really flexible coloring system. I inspected the code and found it was a little messy, at least for a Java developer looking at python code. I refactored it first to make it more readable to me.&lt;br/&gt;

I then started to add this flexible log coloring, and a little extra feature, the ability to skip line matching a certain pattern. In my case I have a useless log message showing once every page hit, but I don&#39;t want to turn off the log, I just wanted to strip out a line including a specified pattern.
&lt;h2&gt;New configuration options&lt;/h2&gt;
Here is an extract from the README file describing new configuration options :
&lt;blockquote&gt;You can add specific logging levels by using the following syntax
color.${level} = ${color}
where ${level} is the level pattern you want to match (or any other pattern...)
and ${color} is the color you want to use.

Valid colors are, their background counterparts are prefixed with &#39;on_&#39; :
* white
* cyan
* magenta
* blue
* yellow
* green
* red
* black
* skip
Levels with the skip color will not be printed out in your console
(fast and easy way to disable an annoying message)&lt;/blockquote&gt;
&lt;h2&gt;Sounds nice ? Download it !&lt;/h2&gt;
&lt;p&gt;If you&#39;re interested in this project, don&#39;t hesitate to &lt;a title=&quot;Alerta-JUL download link&quot; href=&quot;https://github.com/downloads/CedricGatay/alerta-jul/log4tailer-3.0.4-JUL.tar.gz&quot;&gt;download the package on github&lt;/a&gt; and install it, a simple untar and you&#39;re ready to go (assuming you&#39;ve got a python set-up). If you need a full manual, read the &lt;a title=&quot;Alerta Manual&quot; href=&quot;http://code.google.com/p/log4tailer/downloads/detail?name=UserGuide-3.0.pdf&quot;&gt;great manual available here&lt;/a&gt; !&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;
&lt;h2&gt;Des logs en couleurs !&lt;/h2&gt;
Une bonne chose serait d&#39;avoir des logs en couleurs, j&#39;ai utilisé &lt;code&gt;&lt;a title=&quot;CCZE on Freshmeat&quot; href=&quot;http://freshmeat.net/projects/ccze/&quot;&gt;ccze&lt;/a&gt;&lt;/code&gt; il y a quelques années, qui, combiné avec la commande désirée donne de bons résultats. Mais, maintenant que je suis un utilisateur de Mac, je ne peux plus utiliser &lt;code&gt;ccze&lt;/code&gt; du tout puisqu&#39;il ne marche pas sur ma plateforme.&lt;br/&gt;

J&#39;ai cherché un programme alternatif et je suis tombé sur &lt;a title=&quot;log4tailer on Google Code&quot; href=&quot;http://code.google.com/p/log4tailer/&quot;&gt;log4tailer&lt;/a&gt;, devenu &lt;a title=&quot;Alerta on bitbucket&quot; href=&quot;https://bitbucket.org/jordilin/alerta/wiki/Home&quot;&gt;Alerta&lt;/a&gt; qui est un excellent remplaçant à ccze.&lt;br/&gt;

En le testant, j&#39;ai découvert quelques soucis, mais comme il s&#39;agit d&#39;un logiciel open-source, je l&#39;ai &lt;em&gt;forké&lt;/em&gt; (sur 
&lt;a title=&quot;Alerta-JUL on github&quot; href=&quot;https://github.com/CedricGatay/alerta-jul&quot;&gt;github&lt;/a&gt;, je n&#39;ai pas de compte bitbucket et je n&#39;avais pas envie d&#39;apprendre un nouveau DVCS).
&lt;h2&gt;Fonctionnalités de Log4tailer / Alerta&lt;/h2&gt;
Ceci est la liste des fonctionnalités provenant de la page de l&#39;auteur original (traduite par mes soins)
&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;Capacité de suivre plusieurs fichiers de logs simultanément&lt;/li&gt;
	&lt;li&gt;Couleurs pour chaque niveau: warn, info, debug, error and fatal&lt;/li&gt;
	&lt;li&gt;Mise en avant de plusieurs cibles grace à des expressions régulières&lt;/li&gt;
	&lt;li&gt;Suit les fichiers de log lorsqu&#39;ils sont tronqués&lt;/li&gt;
	&lt;li&gt;Couleurs personnalisables par niveau de log&lt;/li&gt;
	&lt;li&gt;Mode silencieux&lt;/li&gt;
	&lt;li&gt;Mode ralenti, ralenti les informations affichées dans le terminal&lt;/li&gt;
	&lt;li&gt;Surveillance de l&#39;inactivité des logs&lt;/li&gt;
	&lt;li&gt;Notification par mail&lt;/li&gt;
	&lt;li&gt;Mode pause qui met en pause la sortie en fonction du niveau trouvé.&lt;/li&gt;
	&lt;li&gt;Statistiques.Affiche le détail de chaque niveau trouvé dans les logs quand le programme est terminé.&lt;/li&gt;
	&lt;li&gt;Couleurs différentes par fichier&lt;/li&gt;
	&lt;li&gt;Consultation des logs via SSH&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
Les points clefs pour moi sont le mode SSH (il nécessite le module python-paramiko) et le suivi des fichiers de log (il gère la rotation des logs automatiquement). Un autre point fort est qu&#39;un grand nombre de paramètres peuvent être personnalisés par l&#39;utilisateur par un fichier, passé à la ligne de commande ou pris automatiquement dans ~/.log4tailer (vous pouvez consulter le mien &lt;a title=&quot;log4tailer file&quot; href=&quot;https://github.com/CedricGatay/dotfiles/blob/master/log4tailer&quot;&gt;ici&lt;/a&gt;).&lt;br/&gt;

De cette façon, lorsque je veux consulter les logs à partir de ma deuxième machine, j&#39;ai juste à lancer Alerta, il se connecte automatiquement à ma machine et &lt;em&gt;tail&lt;/em&gt; les logs voulus, vraiment magique !

&lt;h2&gt;Améliorations ?&lt;/h2&gt;
&lt;h3&gt;Phase 1 : Correction de bugs&lt;/h3&gt;
La première chose qui m&#39;ennuyait était que la détection des couleurs était faite sur les niveaux de log de log4j et que j&#39;utilise Java Util Logging. J&#39;ai donc premièrement modifié Alerta pour faire correspondre les niveaux JUL à des niveaux log4j.&lt;br/&gt;

Le second problème que j&#39;ai rencontré était une incompatibilité avec l&#39;environnement Mac (readline en python ne se comporte pas de la même façon). Le bug empêchait le défilement automatique des logs sur la sortie (dérangeant n&#39;est ce pas ?).
&lt;h3&gt;Phase 2 : Améliorations&lt;/h3&gt;
En corrigeant les choses qui m&#39;ennuyaient, je me suis rendu compte que je pouvais aller un peu plus loin en mettant en place un système de coloration réellement flexible. Je me suis alors plongé dans le code et je l&#39;ai trouvé plutôt fouilli, du moins pour un développeur Java faisant du python. Je l&#39;ai donc tout d&#39;abord refactoré pour le rendre plus lisible et me l&#39;approprier.&lt;br/&gt;

J&#39;ai donc démarré l&#39;ajout de la coloration flexible et une petite fonctionnalité additionnelle, la possibilité de passer les lignes contenant un certain motif. Dans mon cas, j&#39;ai un message &quot;inutile&quot; qui apparaît dans les logs de façon périodique, mais je ne veux pas me passer de ce niveau de log pour autant, je voulais juste pouvoir le faire disparaître de la sortie.

&lt;h2&gt;Nouvelles options de configuration&lt;/h2&gt;
Voici un extrait (traduit par mes soins) du fichier README file détaillant les nouvelles options de configuration :
&lt;blockquote&gt;Vous pouvez ajouter des niveaux de logs en utilisant la syntaxe suivante
color.${level} = ${color}
où ${level} est le motif que vous voulez colorer.
et ${color} est la couleur que vous désirez utiliser.

Les couleurs valides sont, leurs équivalents pour l&#39;arrière-plan sont préfixées par &#39;on_&#39; :
* white
* cyan
* magenta
* blue
* yellow
* green
* red
* black
* skip
Les niveaux avec la couleurs &quot;skip&quot; ne seront pas imprimés dans votre console (moyen simple et rapide d&#39;ôter un message ennuyeux)&lt;/blockquote&gt;
&lt;h2&gt;Intéressant ? Téléchargez le !&lt;/h2&gt;
&lt;p&gt;Si vous êtes interessé par ce projet, n&#39;hésitez pas à &lt;a title=&quot;Alerta-JUL download link&quot; href=&quot;https://github.com/downloads/CedricGatay/alerta-jul/log4tailer-3.0.4-JUL.tar.gz&quot;&gt;télécharger l&#39;archive sur github&lt;/a&gt;, il ne vous reste qu&#39;à l&#39;installer, décompresser l&#39;archive et vous êtes prêt (sous reserve d&#39;avoir un environnement python valide). Si vous avez besoin d&#39;un manuel complet, lisez le &lt;a title=&quot;Alerta Manual&quot; href=&quot;http://code.google.com/p/log4tailer/downloads/detail?name=UserGuide-3.0.pdf&quot;&gt;super manuel disponible (en anglais par contre)&lt;/a&gt; !&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>OS X Lion - Remove an app from Launchpad</title>
   <link href="http://bloggure.info/.shell/2011/07/28/os-x-lion-remove-an-app-from-launchpad.html"/>
   <updated>2011-07-28T00:00:00+02:00</updated>
   <id>http://bloggure.info/.shell/2011/07/28/os-x-lion-remove-an-app-from-launchpad</id>
   <content type="html">&lt;!--:en--&gt;&lt;h2&gt;General Launchpad thoughts&lt;/h2&gt;
&lt;a href=&quot;http://www.bloggure.info/shell/os-x-lion-remove-an-app-from-launchpad.html/attachment/launchpad&quot; rel=&quot;attachment wp-att-257&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Launchpad.png&quot; alt=&quot;&quot; title=&quot;Launchpad&quot; width=&quot;128&quot; height=&quot;128&quot; class=&quot;alignleft size-full wp-image-257&quot; /&gt;&lt;/a&gt;
&lt;p&gt;I continue my tips regarding OS X Lion. As I said in my &lt;a title=&quot;First thoughts on OS X Lion&quot; href=&quot;http://www.bloggure.info/?p=181&quot;&gt;OS X Lion walkthrough&lt;/a&gt;, Lion come with a very iOS-ish application launcher : &lt;a href=&quot;http://www.apple.com/macosx/whats-new/launchpad.html&quot; target=&quot;_blank&quot;&gt;Launchpad&lt;/a&gt;. Out of the box, it is automatically populated with every application you have and application you download from the Mac App Store are added there too.&lt;br/&gt;

Although I keep on thinking it is a useless feature for power users, newcomers will surely find this useful, and it will help switchers to find their applications. As I was cleaning my machine I tried to rearrange Launchpad by making folders and then I discovered that you can&#39;t easily remove a shortcut to an application (except the ones coming from the Mac App Store which are uninstalled when you remove their icons).&lt;/p&gt;
&lt;h2&gt;Let me remove things !&lt;/h2&gt;
&lt;p&gt;By digging around, I found that Launchpad stores its preferences in a SQLite database, that you can explore and manipulate using the sqlite3 command line program.&lt;br/&gt;

Please notice that the steps described here might make your Launchpad unusable, so please backup every file you change in case something goes wrong !&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update ! &lt;/strong&gt;Easy technique, use &lt;a href=&quot;http://chaosspace.de/dev/launchpad-control-hide-apps-from-launchpad/&quot; title=&quot;Launchpad-Control&quot; target=&quot;_blank&quot;&gt;Launchpad-Control&lt;/a&gt; which is a preference pane allowing to visually hide / show icons on Launchpad. I detail here the step involved for the records.&lt;/p&gt;
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;h2&gt;Impressions générale sur Launchpad&lt;/h2&gt;
&lt;a href=&quot;http://www.bloggure.info/shell/os-x-lion-remove-an-app-from-launchpad.html/attachment/launchpad&quot; rel=&quot;attachment wp-att-257&quot;&gt;&lt;img src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Launchpad.png&quot; alt=&quot;&quot; title=&quot;Launchpad&quot; width=&quot;128&quot; height=&quot;128&quot; class=&quot;alignleft size-full wp-image-257&quot; /&gt;&lt;/a&gt;
&lt;p&gt;
Je continue mes astuces concernant OS X Lion. Comme je l&#39;ai décrit dans mon précédent billet concernant le &lt;a title=&quot;First thoughts on OS X Lion&quot; href=&quot;http://www.bloggure.info/?p=181&quot;&gt;tour d&#39;horizon de OS X Lion&lt;/a&gt;, Lion vient avec un lanceur d&#39;application très semblable au célèbre Springboard d&#39;iOS : &lt;a href=&quot;http://www.apple.com/macosx/whats-new/launchpad.html&quot; target=&quot;_blank&quot;&gt;Launchpad&lt;/a&gt;. Fraîchement installé (enfin après un upgrade depuis Snow Leopard tout particulièrement), il est automatiquement rempli avec toutes les applications installées. Les applications provenant du Mac App Store sont également ajoutées à cet endroit.&lt;br/&gt;

Bien que je continue de penser que c&#39;est un programme inutile pour les utilisateurs avancés, les nouveaux arrivants y trouveront certainement un outil utile et les switchers y verront un semblant de menu démarrer (avec le look de leur iBidule en bonus).
Durant une phase de ménage sur ma machine, j&#39;ai essayé de ranger Launchpad tout de même en faisant des dossiers et j&#39;ai découvert qu&#39;il n&#39;était pas possible de retirer simplement une icône d&#39;application (sauf celles provenant du Mac App Store qui sont désinstallées au passage).&lt;/p&gt;
&lt;h2&gt;Laissez moi ôter des icônes !&lt;/h2&gt;
&lt;p&gt;En fouinant un peu, j&#39;ai découvert que Launchpad stocke ses préférences dans une base de données SQLite, qu&#39;il est facile d&#39;étudier et manipuler en utiliser la commande sqlite3.&lt;br/&gt;

Veuillez faire attention en essayant ma procédure, Launchpad pourrait devenir inutilisable, sauvegardez les fichiers que vous manipulez au cas où les choses tournent mal !&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mise à jour ! &lt;/strong&gt;Encore plus facile, utilisez &lt;a href=&quot;http://chaosspace.de/dev/launchpad-control-hide-apps-from-launchpad/&quot; title=&quot;Launchpad-Control&quot; target=&quot;_blank&quot;&gt;Launchpad-Control&lt;/a&gt; qui est un panneau de préférence permettant de masquer / montrer facilement une icône. Je laisse les étapes manuelles ici pour les curieux.&lt;/p&gt;
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
&lt;p&gt;Launch a terminal, and execute the following command, you&#39;ll get a list of the icons Launchpad shows you. Read or use grep to find the one you want to remove (in my case it was akamai uninstaller shortcut)&lt;/p&gt;
&lt;pre class=&quot;brush: shell&quot;&gt;sqlite3 ~/Library/Application\ Support/Dock/*.db &#39;select * from apps;&#39;    
[...]
48|uninstall|com.akamai.euc_uninstall_mac|||298505501.0|book?
49|Livre des polices|com.apple.FontBook||4|328036648.0|bookt
50|Fraise|org.fraise.Fraise|||332837534.0|bookp
[...]&lt;/pre&gt;

&lt;p&gt;
Please notice the number at the beginning of the line you are interested in, by executing the following command, you will remove the line and the icon you want from Launchpad (changes are visible after a Dock relaunch...). In my case, the number was 48, so the command looks like :
&lt;/p&gt;
&lt;pre class=&quot;brush: shell&quot;&gt;sqlite3 ~/Library/Application\ Support/Dock/*.db &#39;delete from apps where item_id=48;&#39;    
killall Dock&lt;/pre&gt;

&lt;p&gt;
After Dock.app is finally back, if you enter Launchpad you will notice that the ugly icon is gone ! 
&lt;/p&gt;

&lt;h2&gt;Technical notice&lt;/h2&gt;
For the geeky there, the table structure is the following :
&lt;pre class=&quot;brush:sql&quot;&gt;
CREATE TABLE apps (item_id INTEGER PRIMARY KEY, title VARCHAR, bundleid VARCHAR, 
                   storeid VARCHAR,category_id INTEGER, moddate REAL, bookmark BLOB);
&lt;/pre&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;

&lt;p&gt;Démarrez un terminal, et exécutez la commande suivante, vous allez avoir la liste des icônes que Launchpad vous présente. Lisez ou utilisez un outil comme grep pour repérer l&#39;icône dont vous désirez vous débarrasser (dans mon cas il s&#39;agissait de l&#39;uninstall d&#39;akamai)&lt;/p&gt;
&lt;pre class=&quot;brush: shell&quot;&gt;sqlite3 ~/Library/Application\ Support/Dock/*.db &#39;select * from apps;&#39;    
[...]
48|uninstall|com.akamai.euc_uninstall_mac|||298505501.0|book?
49|Livre des polices|com.apple.FontBook||4|328036648.0|bookt
50|Fraise|org.fraise.Fraise|||332837534.0|bookp
[...]&lt;/pre&gt;

&lt;p&gt;
Prêtez attention au nombre présent au début de la ligne qui concerne l&#39;icône à enlever. En exécutant la commande suivante, vous allez ôter la ligne dans la base de donnée et par conséquent l&#39;icône de Launchpad (les changements prennent effets après un redémarrage de Dock.app). Dans mon cas, le nombre était 48, la commande ressemble donc à ceci : 
&lt;/p&gt;
&lt;pre class=&quot;brush: shell&quot;&gt;sqlite3 ~/Library/Application\ Support/Dock/*.db &#39;delete from apps where item_id=48;&#39;    
killall Dock&lt;/pre&gt;

&lt;p&gt;
Une fois que Dock.app a redémarré, si vous lancez Launchpad, vous vous rendrez compte que l&#39;icône à disparu !
&lt;/p&gt;

&lt;h2&gt;Petite note technique&lt;/h2&gt;
Pour les geeks ici, la structure de la table que l&#39;on manipule est la suivante :
&lt;pre class=&quot;brush:sql&quot;&gt;
CREATE TABLE apps (item_id INTEGER PRIMARY KEY, title VARCHAR, bundleid VARCHAR, 
                   storeid VARCHAR,category_id INTEGER, moddate REAL, bookmark BLOB);
&lt;/pre&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>OS X Lion - disable special char popup</title>
   <link href="http://bloggure.info/.shell/2011/07/24/os-x-lion-disable-special-char-popup.html"/>
   <updated>2011-07-24T00:00:00+02:00</updated>
   <id>http://bloggure.info/.shell/2011/07/24/os-x-lion-disable-special-char-popup</id>
   <content type="html">&lt;!--:en--&gt;&lt;p&gt;One thing annoying in Lion is the popup appearing when you long press a key (similar to the one present in iOS showing special characters).&lt;br/&gt;
I found a way to disable this by issuing a simple Terminal command : &lt;/p&gt;
&lt;pre class=&quot;brush:shell&quot;&gt;
defaults write -g ApplePressAndHoldEnabled -bool false
&lt;/pre&gt;
&lt;p&gt;Replace false with true in this command if you want to bring it back, you might need to exit and relaunch an app for the parameter to take effect.&lt;br /&gt;
If you want to discover more parameters, don&#39;t hesitate to dig into built-in properties, that&#39;s the way I found this tip (the -g flag tells to lookup in the &lt;em&gt;globaldomain&lt;/em&gt;)&lt;/p&gt;
&lt;pre class=&quot;brush:shell&quot;&gt;
defaults read [-g]
&lt;/pre&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;p&gt;Une chose que je trouve ennuyeuse sous Lion est la popup qui apparaît lorsqu&#39;on effectue une pression longue sur une touche du clavier (similaire à la version présentée sur iOS présentant les caractères spéciaux).&lt;br/&gt;
J&#39;ai trouvé une astuce qui permet de désactiver simplement cette fonctionnalité avec une simple commande dans le terminal : &lt;/p&gt;
&lt;pre class=&quot;brush:shell&quot;&gt;
defaults write -g ApplePressAndHoldEnabled -bool false
&lt;/pre&gt;
&lt;p&gt;Remplacez &lt;code&gt;false&lt;/code&gt; par &lt;code&gt;true&lt;/code&gt; dans la commande si vous voulez récupérer ce popup. Il peut être nécessaire de quitter / relancer les applications pour que le paramètre prenne effet (ou de redémarrer la machine).&lt;br /&gt;
Si vous voulez découvrir plus de paramètres, n&#39;hésitez pas à fouiller dans les propriétés prédéfinies, c&#39;est de cette façon que je suis tombé sur cette astuce (le -g permet de rechercher dans les paramètres globaux).&lt;/p&gt;
&lt;pre class=&quot;brush:shell&quot;&gt;
defaults read [-g]
&lt;/pre&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Glassfish 3.x - recover admin console access</title>
   <link href="http://bloggure.info/.java/work/2011/07/23/glassfish-3-x-recover-admin-console-access.html"/>
   <updated>2011-07-23T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/work/2011/07/23/glassfish-3-x-recover-admin-console-access</id>
   <content type="html">&lt;!--:en--&gt;&lt;a rel=&quot;attachment wp-att-71&quot; href=&quot;http://www.bloggure.info/work/glassfish-v3-custom-log-levels.html/attachment/glassfish&quot;&gt;&lt;img class=&quot;size-full wp-image-71 alignright&quot; title=&quot;glassfish&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/glassfish.png&quot; alt=&quot;&quot; width=&quot;92&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;
I have an issue for quite  a long time with web administration console in Glassfish 3.x. When I try to access it, I point my browser to &lt;code&gt;http://127.0.0.1:4848&lt;/code&gt;, the first access shows me the usual &quot;Web console is loading stuff&quot;, after a while, by looking at the log, I see the web administration is ready. I then hit refresh, it redirects me to
&lt;code&gt;http://127.0.0.1:4848/common/index.jsf&lt;/code&gt; with a (not so) beautiful 404 error !

&lt;h2&gt;The discovery&lt;/h2&gt;
I found the workaround by telling myself, wait, it never asked me to login....

Let&#39;s try to hit &lt;code&gt;http://127.0.0.1:4848/login.jsf&lt;/code&gt;, well, I got the usual login screen, I enter my login credential, and got redirected to &lt;code&gt;http://127.0.0.1:4848/common/index.jsf&lt;/code&gt;.... but now &lt;strong&gt;it works ! &lt;/strong&gt;(I tried looking at Glassfish sources to identify and narrow down the source of my problem, but with a quick lookup, I couldn&#39;t figure out where the things are supposed to be done...)

&lt;h2&gt;The Useful tip !&lt;/h2&gt;
To make it short, bookmark or be used to access the web administration console for your Glassfish 3.x server via &lt;a href=&quot;http://127.0.0.1:4848/login.jsf&quot;&gt;&lt;code&gt;http://127.0.0.1:4848/login.jsf&lt;/code&gt;&lt;/a&gt; !&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a rel=&quot;attachment wp-att-71&quot; href=&quot;http://www.bloggure.info/work/glassfish-v3-custom-log-levels.html/attachment/glassfish&quot;&gt;&lt;img class=&quot;size-full wp-image-71 alignright&quot; title=&quot;glassfish&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/glassfish.png&quot; alt=&quot;&quot; width=&quot;92&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;
J&#39;ai un problème depuis un petit moment avec la console d&#39;administration web de Glassfish v3.x. Quand j&#39;essaie d&#39;y accéder, je vais vers l&#39;adresse &lt;code&gt;http://127.0.0.1:4848&lt;/code&gt;, le premier accès me montre l&#39;habituel &quot;Initialisation de la console d&#39;administration&quot;. Après quelques instants, en regardant les logs, je vois que la console est prête. &lt;br/&gt;
Je rafraichis donc la page qui me renvoies vers &lt;code&gt;http://127.0.0.1:4848/common/index.jsf&lt;/code&gt; avec une magnifique erreur 404 !

&lt;h2&gt;La découverte&lt;/h2&gt;
J&#39;ai trouvé la solution en me disant, hum, il ne m&#39;a jamais demandé de me logguer...

Si j&#39;essaie d&#39;aller à l&#39;addresse &lt;code&gt;http://127.0.0.1:4848/login.jsf&lt;/code&gt;, et bien, j&#39;ai l&#39;écran de login habituel, je saisis mes informations de connexion et je suis redirigé vers &lt;code&gt;http://127.0.0.1:4848/common/index.jsf&lt;/code&gt;.... mais maintenant &lt;strong&gt;ça marche ! &lt;/strong&gt;(J&#39;ai essayé de regarder les sources de Glassfish pour identifier et comprendre ce qui se passait, mais avec un rapide coup d&#39;oeil je n&#39;ai pas été capable de savoir où les choses sont censées se passer...)

&lt;h2&gt;L&#39;astuce pratique !&lt;/h2&gt;
Pour faire la version courte, mettez en favoris ou prenez l&#39;habitude d&#39;accéder à l&#39;interface d&#39;administration web de votre serveur Glassfish 3.x avec l&#39;adresse &lt;a href=&quot;http://127.0.0.1:4848/login.jsf&quot;&gt;&lt;code&gt;http://127.0.0.1:4848/login.jsf&lt;/code&gt;&lt;/a&gt; !&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Glassfish 3.x - Jersey with bundled dependencies</title>
   <link href="http://bloggure.info/.java/work/2011/07/18/glassfish-3-x-jersey-with-bundled-dependencies.html"/>
   <updated>2011-07-18T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/work/2011/07/18/glassfish-3-x-jersey-with-bundled-dependencies</id>
   <content type="html">&lt;!--:en--&gt;&lt;a rel=&quot;attachment wp-att-71&quot; href=&quot;http://www.bloggure.info/work/glassfish-v3-custom-log-levels.html/attachment/glassfish&quot;&gt;&lt;img class=&quot;size-full wp-image-71 alignright&quot; title=&quot;glassfish&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/glassfish.png&quot; alt=&quot;&quot; width=&quot;92&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;

I just wanted to make a small post regarding an issue I spent almost a day getting rid off. I have a quite typical web architecture :
&lt;ul&gt;
	&lt;li&gt;jar module encapsulating business logic (EJBs)&lt;/li&gt;
	&lt;li&gt;war module providing front end web access&lt;/li&gt;
	&lt;li&gt;war module for web service access (using JAX-RS)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The headache&lt;/h2&gt;
Each war module depends on the ejb-client counterpart present in WEB-INF/lib. The problem I faced is that my @EJB injections was raising ClassNotFoundExceptions. I tried bypassing automatic injection with manual JNDI lookups but the same errors occurred. Playing with the debugger I found that the jars present in lib folder were not added into the web application&#39;s classloader.
&lt;h2&gt;The workaround&lt;/h2&gt;
I spent a lot of time trying many things to fix this and found out the trick by downloading Jersey&#39;s sample. You simply have to have a sun-web.xml with the following content :
&lt;pre class=&quot;brush: xml&quot;&gt;&lt;sun-web-app&gt;
  &lt;class-loader delegate=&quot;true&quot;&gt;&lt;/class-loader&gt;
&lt;/sun-web-app&gt;
&lt;/pre&gt;
I hope it will help someone else!&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;a rel=&quot;attachment wp-att-71&quot; href=&quot;http://www.bloggure.info/work/glassfish-v3-custom-log-levels.html/attachment/glassfish&quot;&gt;&lt;img class=&quot;size-full wp-image-71 alignright&quot; title=&quot;glassfish&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/glassfish.png&quot; alt=&quot;&quot; width=&quot;92&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;
Je voulais juste faire un petit billet concernant un soucis que j&#39;ai mis quasiment une journée à résoudre. J&#39;ai une application web avec une architecture assez commune : 
&lt;ul&gt;
	&lt;li&gt;un module métier (packagé dans un jar composé d&#39;EJBs)&lt;/li&gt;
	&lt;li&gt;un module web frontal (packagé dans un war)&lt;/li&gt;
	&lt;li&gt;un module web pour les web services (utilisant exclusivement JAX-RS, packagé dans un war)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Le casse tête!&lt;/h2&gt;
Chaque module war a une dépendance sur la partie ejb cliente du module métier (présents dans le WEB-INF/lib donc). Le problème que j&#39;ai rencontré est que l&#39;injection de dépendances dans mon module web-service (@EJB) lève des ClassNotFoundExceptions. J&#39;ai essayé de passer outre l&#39;injection automatique par le conteneur en faisant une recherche manuelle dans l&#39;annuaire JNDI mais ceci s&#39;est soldé par un échec avec la même erreur à la clef.
En jouant avec le débuggueur, je me suis rendu compte que les jars présents dans le dossier lib n&#39;étaient pas ajoutés au classloader de l&#39;application web.
&lt;h2&gt;La solution&lt;/h2&gt;
J&#39;ai passé longtemps à essayer beaucoup de choses pour corriger ce problème et j&#39;ai trouvé l&#39;astuce dans les exemples d&#39;utilisation de Jersey.&lt;br/&gt;
Il suffit simplement d&#39;avoir un fichier sun-web.xml avec le contenu suivant :
&lt;pre class=&quot;brush: xml&quot;&gt;&lt;sun-web-app&gt;
  &lt;class-loader delegate=&quot;true&quot;&gt;&lt;/class-loader&gt;
&lt;/sun-web-app&gt;
&lt;/pre&gt;
J&#39;espère aider quelqu&#39;un d&#39;autre avec cette astuce !&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>First thoughts on OS X Lion</title>
   <link href="http://bloggure.info/.java/.shell/thoughts/2011/07/12/first-thoughts-on-os-x-lion.html"/>
   <updated>2011-07-12T00:00:00+02:00</updated>
   <id>http://bloggure.info/.java/.shell/thoughts/2011/07/12/first-thoughts-on-os-x-lion</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/thoughts/first-thoughts-on-os-x-lion.html/attachment/lion-180x180&quot; rel=&quot;attachment wp-att-240&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-240&quot; title=&quot;Lion&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Lion-180x180.png&quot; alt=&quot;&quot; width=&quot;120&quot; height=&quot;120&quot; /&gt;&lt;/a&gt;I am actually running &lt;a title=&quot;Mac OS Lion&quot; href=&quot;http://www.apple.com/macosx/&quot;&gt;Mac OS Lion&lt;/a&gt; Golden Master (11A511) release for a week now and I wanted to give my first though on the new major version of Mac OS. The machine used to test-drive this OS is my main development machine:

MacBook Pro 3,1 (late 2007) - 2.4 GHz Core 2 Duo, 4Gb RAM, 120Gb SSD + 160Gb HDD

&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;a href=&quot;http://www.bloggure.info/thoughts/first-thoughts-on-os-x-lion.html/attachment/lion-180x180&quot; rel=&quot;attachment wp-att-240&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-240&quot; title=&quot;Lion&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Lion-180x180.png&quot; alt=&quot;&quot; width=&quot;120&quot; height=&quot;120&quot; /&gt;&lt;/a&gt;I am actually running &lt;a title=&quot;Mac OS Lion&quot; href=&quot;http://www.apple.com/macosx/&quot;&gt;Mac OS Lion&lt;/a&gt; Golden Master (11A511) release for a week now and I wanted to give my first though on the new major version of Mac OS. The machine used to test-drive this OS is my main development machine:

MacBook Pro 3,1 (late 2007) - 2.4 GHz Core 2 Duo, 4Gb RAM, 120Gb SSD + 160Gb HDD

&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;

I started from an up-to date Snow Leopard install (10.6.8) and ran the installation procedure. A few minutes later (about 15 minutes) Mac OS X Lion was ready to roar. The first start prompts me with a list of uncompatible software (PowerPC ones, no big deal to me) telling me they have been moved in a special directory under /. I then tried to launch my favorite IDE (&lt;a title=&quot;IntelliJ IDEA&quot; href=&quot;http://www.jetbrains.com/idea/&quot;&gt;Intellij IDEA&lt;/a&gt;) and OS X prompts me to download and install Java (not included anymore...), then I launched IDEA and....
&lt;h2&gt;Where are my spaces ?&lt;/h2&gt;
I am, for a few years now, very meticulous with my virtual displays (under Linux or OS X thanks to Spaces). I use(d) 6 (3 horizontally on 2 rows) of them to focus easily on tasks :
&lt;ul&gt;
	&lt;li&gt;one dedicated to Internet browsing / Mail management&lt;/li&gt;
	&lt;li&gt;one to Instant Messenging / IRC&lt;/li&gt;
	&lt;li&gt;one to Office / iWork apps&lt;/li&gt;
	&lt;li&gt;one to my IDE&lt;/li&gt;
	&lt;li&gt;one to Terminal&lt;/li&gt;
	&lt;li&gt;one to Music (I can&#39;t work without music)&lt;/li&gt;
&lt;/ul&gt;
This is where the lack of spaces is difficult for me. I launched IntelliJ, it switched automatically to another virtual desktop (just right of the current one, where I am used to have my IDE on the bottom left one). I then launched iTunes, it launched and switched to another virtual desktop.
&lt;h2&gt;Hum, wait... Mission Control, that&#39;s it !&lt;/h2&gt;
Default settings let Mac OS reorganize virtual desktop order for you, which can be very disturbing if you&#39;re, like me, used to switch space with key combo (cmd+tabbing is fine though). The things I really miss (from the existing discontinued Spaces) are :
&lt;ul&gt;
	&lt;li&gt;hability to have a multiple rows layout (faster to switch while giving hability to have a many spaces)&lt;/li&gt;
	&lt;li&gt;simple hability to assign a space for an application (you know the good old add an application and choose the desktop you want to use in Spaces preferences). In order to do this, you have to set the application on the desktop you want, and right click its dock icon and select &quot;Options &amp;gt; This desktop&quot;. The good part is that settings from my existing Snow Leopard set-up were migrated automatically !&lt;/li&gt;
	&lt;li&gt;hability to easily switch to spaces one with another via drag&#39;n dropping&lt;/li&gt;
&lt;/ul&gt;
automatic reordering is nice when you&#39;re used to itSome good things are still good to notice :
&lt;ul&gt;
	&lt;li&gt;revives the dashboard (at least for me), as it is shown as the leftmost virtual space by default&lt;/li&gt;
	&lt;li&gt;will certainly helps standard users to discover the power of virtual spaces&lt;/li&gt;
	&lt;li&gt;better, faster UI (specially regarding old UI for Spaces)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Made with real Lion fur !&lt;/h2&gt;
As I am talking of better, faster UI, I have to say that there is a lot of small improvements that are quite comfortable. First of all, you can now resize a window from any side of it ! (I know it sounds silly for non Mac OS X users...). The other thing that will certainly hurts you is the scroll behavior that mimics touch enabled devices (iOS in sight), you scroll up, it scrolls bottom... (overridable via Trackpad System preferences, very hard to be used with a physical mouse wheel). And the last thing very iOS-ish is the long press on a key which pop-ups character variants, bypassing key repeat (I have not found out on how to disable this) : welcome touch enabled MacBook Air / iMac ?

I will take Terminal.app for example, I noticed two really cool features, if you activate window blinking on bell, you&#39;ll no more risking being turned blind by an intrusive white flash. Now, the flash is slowly fading, a detail but it is very sweet to have it (no more stress on hitting tab at shell prompt). The other sweet thing is a system wide Lion feature that keeps application state on exit. The result in Terminal.app is that when you (re)launch it, it automatically reopens the tabs / windows you had, and reminds you your last shell history with a nice grey effect :
&lt;div&gt;

&lt;img class=&quot;aligncenter size-full wp-image-185&quot; title=&quot;Terminal-resume&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Capture-d’écran-2011-07-12-à-19.20.37.png&quot; alt=&quot;Resuming Terminal.app&quot; width=&quot;324&quot; height=&quot;132&quot; /&gt;The other  UI improvements are subtle but you&#39;ll notice that every common control has been redesigned (combo-boxes, check boxes, and... scrollbars !!) Everything is suited to provide more real screen estate (as the new full screen feature suggests, but I have not used it so I can&#39;t tell for now).
&lt;h2&gt;&lt;strong&gt;Get ready to fill your zoo !&lt;/strong&gt;&lt;/h2&gt;
&lt;strong&gt; &lt;/strong&gt;So, what&#39;s my conclusion regarding this new version. Get it while it&#39;s hot, for only a few bucks (in a few days), you&#39;ll have a very complete OS, with updated bundled applications (the new Mail.app is slowly bringing me back to a native app client), without any drawback. I see no use in LaunchPad (I am to addicted to &lt;a title=&quot;Alfred.app&quot; href=&quot;http://www.alfredapp.com/&quot;&gt;Alfred.app&lt;/a&gt; and Spotlight to launch my applications), it is too iOS for me. I am not a big user of the Finder too, there is changes, but I have not enough played with it to discuss about it !

Don&#39;t hesitate to share your thoughts via comments !

&lt;/div&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;

I started from an up-to date Snow Leopard install (10.6.8) and ran the installation procedure. A few minutes later (about 15 minutes) Mac OS X Lion was ready to roar. The first start prompts me with a list of uncompatible software (PowerPC ones, no big deal to me) telling me they have been moved in a special directory under /. I then tried to launch my favorite IDE (&lt;a title=&quot;IntelliJ IDEA&quot; href=&quot;http://www.jetbrains.com/idea/&quot;&gt;Intellij IDEA&lt;/a&gt;) and OS X prompts me to download and install Java (not included anymore...), then I launched IDEA and....
&lt;h2&gt;Where are my spaces ?&lt;/h2&gt;
I am, for a few years now, very meticulous with my virtual displays (under Linux or OS X thanks to Spaces). I use(d) 6 (3 horizontally on 2 rows) of them to focus easily on tasks :
&lt;ul&gt;
	&lt;li&gt;one dedicated to Internet browsing / Mail management&lt;/li&gt;
	&lt;li&gt;one to Instant Messenging / IRC&lt;/li&gt;
	&lt;li&gt;one to Office / iWork apps&lt;/li&gt;
	&lt;li&gt;one to my IDE&lt;/li&gt;
	&lt;li&gt;one to Terminal&lt;/li&gt;
	&lt;li&gt;one to Music (I can&#39;t work without music)&lt;/li&gt;
&lt;/ul&gt;
This is where the lack of spaces is difficult for me. I launched IntelliJ, it switched automatically to another virtual desktop (just right of the current one, where I am used to have my IDE on the bottom left one). I then launched iTunes, it launched and switched to another virtual desktop.
&lt;h2&gt;Hum, wait... Mission Control, that&#39;s it !&lt;/h2&gt;
Default settings let Mac OS reorganize virtual desktop order for you, which can be very disturbing if you&#39;re, like me, used to switch space with key combo (cmd+tabbing is fine though). The things I really miss (from the existing discontinued Spaces) are :
&lt;ul&gt;
	&lt;li&gt;hability to have a multiple rows layout (faster to switch while giving hability to have a many spaces)&lt;/li&gt;
	&lt;li&gt;simple hability to assign a space for an application (you know the good old add an application and choose the desktop you want to use in Spaces preferences). In order to do this, you have to set the application on the desktop you want, and right click its dock icon and select &quot;Options &amp;gt; This desktop&quot;. The good part is that settings from my existing Snow Leopard set-up were migrated automatically !&lt;/li&gt;
	&lt;li&gt;hability to easily switch to spaces one with another via drag&#39;n dropping&lt;/li&gt;
&lt;/ul&gt;
automatic reordering is nice when you&#39;re used to itSome good things are still good to notice :
&lt;ul&gt;
	&lt;li&gt;revives the dashboard (at least for me), as it is shown as the leftmost virtual space by default&lt;/li&gt;
	&lt;li&gt;will certainly helps standard users to discover the power of virtual spaces&lt;/li&gt;
	&lt;li&gt;better, faster UI (specially regarding old UI for Spaces)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Made with real Lion fur !&lt;/h2&gt;
As I am talking of better, faster UI, I have to say that there is a lot of small improvements that are quite comfortable. First of all, you can now resize a window from any side of it ! (I know it sounds silly for non Mac OS X users...). The other thing that will certainly hurts you is the scroll behavior that mimics touch enabled devices (iOS in sight), you scroll up, it scrolls bottom... (overridable via Trackpad System preferences, very hard to be used with a physical mouse wheel). And the last thing very iOS-ish is the long press on a key which pop-ups character variants, bypassing key repeat (I have not found out on how to disable this) : welcome touch enabled MacBook Air / iMac ?

I will take Terminal.app for example, I noticed two really cool features, if you activate window blinking on bell, you&#39;ll no more risking being turned blind by an intrusive white flash. Now, the flash is slowly fading, a detail but it is very sweet to have it (no more stress on hitting tab at shell prompt). The other sweet thing is a system wide Lion feature that keeps application state on exit. The result in Terminal.app is that when you (re)launch it, it automatically reopens the tabs / windows you had, and reminds you your last shell history with a nice grey effect :
&lt;div&gt;

&lt;img class=&quot;aligncenter size-full wp-image-185&quot; title=&quot;Terminal-resume&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2011/07/Capture-d’écran-2011-07-12-à-19.20.37.png&quot; alt=&quot;Resuming Terminal.app&quot; width=&quot;324&quot; height=&quot;132&quot; /&gt;The other  UI improvements are subtle but you&#39;ll notice that every common control has been redesigned (combo-boxes, check boxes, and... scrollbars !!) Everything is suited to provide more real screen estate (as the new full screen feature suggests, but I have not used it so I can&#39;t tell for now).
&lt;h2&gt;&lt;strong&gt;Get ready to fill your zoo !&lt;/strong&gt;&lt;/h2&gt;
&lt;strong&gt; &lt;/strong&gt;So, what&#39;s my conclusion regarding this new version. Get it while it&#39;s hot, for only a few bucks (in a few days), you&#39;ll have a very complete OS, with updated bundled applications (the new Mail.app is slowly bringing me back to a native app client), without any drawback. I see no use in LaunchPad (I am to addicted to &lt;a title=&quot;Alfred.app&quot; href=&quot;http://www.alfredapp.com/&quot;&gt;Alfred.app&lt;/a&gt; and Spotlight to launch my applications), it is too iOS for me. I am not a big user of the Finder too, there is changes, but I have not enough played with it to discuss about it !

Don&#39;t hesitate to share your thoughts via comments !

&lt;/div&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Playstation 3 - a random tale...</title>
   <link href="http://bloggure.info/shelf/thoughts/www/2010/12/30/playstation-3-a-random-tale.html"/>
   <updated>2010-12-30T00:00:00+01:00</updated>
   <id>http://bloggure.info/shelf/thoughts/www/2010/12/30/playstation-3-a-random-tale</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignleft size-thumbnail wp-image-176&quot; title=&quot;Playstation3&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/12/Playstation3-150x150.jpg&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;

So, here we are, from &lt;a href=&quot;http://fail0verflow.com/&quot; target=&quot;_blank&quot;&gt; fail0verflow team&lt;/a&gt;&#39;s announce at 27c3, Playstation 3 security is no more. It&#39;s a good thing for homebrews, the return of otherOS and media center happyness. As from many of you might know, GameOS is exposed since the famous PSGroove thing. But we still were not able to boot on totally hand made code. The thing the team found is a critical error in implementing their random number generator used in signing code : it returns a constant value (those who are not afraid with mathematics can have a look &lt;a href=&quot;http://bit.ly/f2Qosq&quot; target=&quot;_blank&quot;&gt;there&lt;/a&gt; to understand). To be clear, we got the way to sign arbitrary code, and Sony can&#39;t do anything about this !

The bad thing is it surely will bring a lot more piracy on the PS3, I hope Sony will still be able to detect altered game to keep online entertainment possible !&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;img class=&quot;alignleft size-thumbnail wp-image-176&quot; title=&quot;Playstation3&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/12/Playstation3-150x150.jpg&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;

So, here we are, from &lt;a href=&quot;http://fail0verflow.com/&quot; target=&quot;_blank&quot;&gt; fail0verflow team&lt;/a&gt;&#39;s announce at 27c3, Playstation 3 security is no more. It&#39;s a good thing for homebrews, the return of otherOS and media center happyness. As from many of you might know, GameOS is exposed since the famous PSGroove thing. But we still were not able to boot on totally hand made code. The thing the team found is a critical error in implementing their random number generator used in signing code : it returns a constant value (those who are not afraid with mathematics can have a look &lt;a href=&quot;http://bit.ly/f2Qosq&quot; target=&quot;_blank&quot;&gt;there&lt;/a&gt; to understand). To be clear, we got the way to sign arbitrary code, and Sony can&#39;t do anything about this !

The bad thing is it surely will bring a lot more piracy on the PS3, I hope Sony will still be able to detect altered game to keep online entertainment possible !&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Head.js - speed up your website</title>
   <link href="http://bloggure.info/.js/www/2010/12/05/head-js-speed-up-your-website.html"/>
   <updated>2010-12-05T00:00:00+01:00</updated>
   <id>http://bloggure.info/.js/www/2010/12/05/head-js-speed-up-your-website</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://headjs.com/&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-157&quot; title=&quot;Head JS&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/12/head.png&quot; alt=&quot;&quot; width=&quot;100&quot; height=&quot;42&quot; /&gt;&lt;/a&gt;I found a little work in progress javascript library which seems to do what we all want : speed up our websites : &lt;a href=&quot;http://headjs.com/&quot;&gt;Head JS&lt;/a&gt;. It allows to load every script in parallel, taking advantage of fast CDN, and gives you easy way to target browser by the features they implements / lacks.

I didn&#39;t had the time to test it in a real use case but I&#39;ll do it for sure and I will be giving some feedback !&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;a href=&quot;http://headjs.com/&quot;&gt;&lt;img class=&quot;alignleft size-full wp-image-157&quot; title=&quot;Head JS&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/12/head.png&quot; alt=&quot;&quot; width=&quot;100&quot; height=&quot;42&quot; /&gt;&lt;/a&gt;I found a little work in progress javascript library which seems to do what we all want : speed up our websites : &lt;a href=&quot;http://headjs.com/&quot;&gt;Head JS&lt;/a&gt;. It allows to load every script in parallel, taking advantage of fast CDN, and gives you easy way to target browser by the features they implements / lacks.

I didn&#39;t had the time to test it in a real use case but I&#39;ll do it for sure and I will be giving some feedback !&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Big Photo Frame Widget</title>
   <link href="http://bloggure.info/.android/.java/2010/12/05/big-photo-frame-widget.html"/>
   <updated>2010-12-05T00:00:00+01:00</updated>
   <id>http://bloggure.info/.android/.java/2010/12/05/big-photo-frame-widget</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;size-thumbnail wp-image-168 alignright&quot; title=&quot;Big Photo Frame Widget&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/12/icon-150x150.png&quot; alt=&quot;&quot; width=&quot;120&quot; height=&quot;120&quot; /&gt;Android features a standard widget for displaying the pictures of your choice on your desktop, it&#39;s a good and frequently used widget by all Android users (which means used more and more each day !).

The only thing missing from the standard widget is its only 2x2 size available. By using recent alternative launchers (&lt;a href=&quot;http://bit.ly/hOvhGK&quot; target=&quot;_blank&quot;&gt;ADW Launcher&lt;/a&gt; / &lt;a href=&quot;http://bit.ly/fF6e0C&quot; target=&quot;_blank&quot;&gt;LauncherPro Plus&lt;/a&gt;) you can resize the widget on your home screen but picture scaling is very poor.

The idea behing Big Photo Frame Widget is to fix the scaling issue of the original widget and to provide different sizes : 2x3 / 3x2 / 3x3 / 4x4. By the way, the widget is free, but if you want to support me, don&#39;t hesitate to hit the&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4G8MY8JN9Q2PE&quot; target=&quot;_blank&quot;&gt; donate link&lt;/a&gt; !

If you want to try (and keep it I hope), scan the following QRCode with your device :

&lt;a href=&quot;http://bit.ly/i2NFkV&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;Big Photo Frame Widget&quot; src=&quot;http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=100x100&amp;amp;chl=http://www.appbrain.com/app/fr.gatay.cedric.android.spf?install=web&quot; alt=&quot;&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;&lt;/a&gt;If you have feature request or bug reports, don&#39;t hesitate to comment this post !

Update : I&#39;ve released a donate version on the market, scan this QRCode to access it :
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://bit.ly/dE5Ga8&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;Big Photo Frame Widget - Donate&quot; src=&quot;http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=100x100&amp;amp;chl=http://www.appbrain.com/app/fr.gatay.cedric.android.spf.donate?install=web&quot; alt=&quot;&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;img class=&quot;size-thumbnail wp-image-168 alignright&quot; title=&quot;Big Photo Frame Widget&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/12/icon-150x150.png&quot; alt=&quot;&quot; width=&quot;120&quot; height=&quot;120&quot; /&gt;Android features a standard widget for displaying the pictures of your choice on your desktop, it&#39;s a good and frequently used widget by all Android users (which means used more and more each day !).

The only thing missing from the standard widget is its only 2x2 size available. By using recent alternative launchers (&lt;a href=&quot;http://bit.ly/hOvhGK&quot; target=&quot;_blank&quot;&gt;ADW Launcher&lt;/a&gt; / &lt;a href=&quot;http://bit.ly/fF6e0C&quot; target=&quot;_blank&quot;&gt;LauncherPro Plus&lt;/a&gt;) you can resize the widget on your home screen but picture scaling is very poor.

The idea behing Big Photo Frame Widget is to fix the scaling issue of the original widget and to provide different sizes : 2x3 / 3x2 / 3x3 / 4x4. By the way, the widget is free, but if you want to support me, don&#39;t hesitate to hit the&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4G8MY8JN9Q2PE&quot; target=&quot;_blank&quot;&gt; donate link&lt;/a&gt; !

If you want to try (and keep it I hope), scan the following QRCode with your device :

&lt;a href=&quot;http://bit.ly/i2NFkV&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;Big Photo Frame Widget&quot; src=&quot;http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=100x100&amp;amp;chl=http://www.appbrain.com/app/fr.gatay.cedric.android.spf?install=web&quot; alt=&quot;&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;&lt;/a&gt;If you have feature request or bug reports, don&#39;t hesitate to comment this post !

Update : I&#39;ve released a donate version on the market, scan this QRCode to access it :
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://bit.ly/dE5Ga8&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;Big Photo Frame Widget - Donate&quot; src=&quot;http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=100x100&amp;amp;chl=http://www.appbrain.com/app/fr.gatay.cedric.android.spf.donate?install=web&quot; alt=&quot;&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>MacbookPro 3.1 Speed boost : SSD inside !</title>
   <link href="http://bloggure.info/shelf/2010/11/21/macbookpro-31-superdrive-replacement.html"/>
   <updated>2010-11-21T00:00:00+01:00</updated>
   <id>http://bloggure.info/shelf/2010/11/21/macbookpro-31-superdrive-replacement</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignleft size-full wp-image-144&quot; title=&quot;MBP 3.1&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/MBP-3.1.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;53&quot; /&gt;I am owner of a not so old MacbookPro (3.1 - late 2007), and, as it is my main development machine, I felt a little lack of space and speed mainly because of its hard drive (5400rpm / 160GB).

I wanted speed and so I got a new generation drive with a 120GB SSD, I wanted space so I have dumped the useless SuperDrive from my machine to replace it with a drive caddy (found &lt;a title=&quot;here&quot; href=&quot;http://newmodeus.com/shop/index.php?main_page=product_info&amp;amp;products_id=258&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;) where I have put my old HDD.

The operation is not so easy, but if you are careful and if you take your time, you will not regret what you&#39;ll get !

My machine is now blazing fast and it helped me keeping it more instead of buying a shiny new MBP with an unremoveable battery (I think I don&#39;t have the feeling with laptop batteries...)&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;img class=&quot;alignleft size-full wp-image-144&quot; title=&quot;MBP 3.1&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/MBP-3.1.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;53&quot; /&gt;I am owner of a not so old MacbookPro (3.1 - late 2007), and, as it is my main development machine, I felt a little lack of space and speed mainly because of its hard drive (5400rpm / 160GB).

I wanted speed and so I got a new generation drive with a 120GB SSD, I wanted space so I have dumped the useless SuperDrive from my machine to replace it with a drive caddy (found &lt;a title=&quot;here&quot; href=&quot;http://newmodeus.com/shop/index.php?main_page=product_info&amp;amp;products_id=258&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;) where I have put my old HDD.

The operation is not so easy, but if you are careful and if you take your time, you will not regret what you&#39;ll get !

My machine is now blazing fast and it helped me keeping it more instead of buying a shiny new MBP with an unremoveable battery (I think I don&#39;t have the feeling with laptop batteries...)&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Prototype 1.7 new features</title>
   <link href="http://bloggure.info/.js/work/2010/11/20/les-nouveautes-de-prototype-1-7.html"/>
   <updated>2010-11-20T00:00:00+01:00</updated>
   <id>http://bloggure.info/.js/work/2010/11/20/les-nouveautes-de-prototype-1-7</id>
   <content type="html">&lt;!--:en--&gt;&lt;em&gt;This blog post has not been translated, please find below the french version&lt;/em&gt;

&lt;strong&gt;Màj : &lt;/strong&gt;Voici &lt;a href=&quot;http://prototypejs.org/2010/11/22/prototype-1-7&quot;&gt;l&#39;annonce officielle&lt;/a&gt;&lt;br /&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
Alors que la version 1.7 de &lt;a href=&quot;http://prototypejs.org&quot;&gt;Prototype&lt;/a&gt;, le fameux framework JS, s&#39;apprête à voir le jour. Nous allons, dans cet article, lister trois nouveautés majeures de cette version.
&lt;h1&gt;Element.Layout&lt;/h1&gt;
Cette classe permet de fournir, avec un maximum de précision, tout un tas de mesures sur un élement. Il existe deux manières d&#39;utiliser cette classe, voici la méthode du fainéant :
&lt;pre class=&quot;brush: js&quot;&gt; $(&#39;elt&#39;).measure(&#39;margin-top&#39;); // -&amp;gt; retourne la marge haute en pixel de elt
 $(&#39;elt&#39;).measure(&#39;height&#39;); // -&amp;gt; retourne la hauteur en pixel de elt&lt;/pre&gt;
Le fonctionnement de la deuxième ligne est similaire à l&#39;utilisation de la méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getHeight/&quot;&gt;Element#getHeight()&lt;/a&gt;. Une utilisation plus minutieuse pourrait ressembler à ça ;
&lt;pre class=&quot;brush: js&quot;&gt;var layout = $(&#39;elt&#39;).getLayout(true);
layout.get(&#39;margin-top&#39;); // retourne la même hauteur que précédemment.
layout.get(&#39;height&#39;); // retourne la même hauteur que précédemment.&lt;/pre&gt;
L&#39;avantage de la seconde méthode est que les valeurs de base nécessaire au calcul des dimensions sont mises en cache dans la variable layout et donc un seul appel est fait au DOM (gourmand en ressource).

Le paramètre &quot;&lt;em&gt;true&lt;/em&gt;&quot; de &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getLayout/&quot;&gt;Element#getLayout()&lt;/a&gt; permet de forcer la récupération de toutes les valeurs d&#39;un seul coup. Si ce paramètre est homis, les valeurs seront récupérées une par une et conservées en cache.

Pour des raisons d&#39;optimisation, les anciennes méthodes &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getWidth/&quot;&gt;Element#getWidth()&lt;/a&gt; et &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getHeight/&quot;&gt;Element#getHeight()&lt;/a&gt; n&#39;utilisent malheureusement pas cette méthode, mais utilisent l&#39;ancienne méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getDimensions/&quot;&gt;Element#getDimensions()&lt;/a&gt;.

La liste des propriétés mesurables est disponible à &lt;a href=&quot;http://api.prototypejs.org/dom/Element/Layout/&quot;&gt;cette adresse&lt;/a&gt;.

Note 1 : Il faut bien garder à l&#39;esprit que si les dimensions de l&#39;élément, auquel votre layout fais référence, change, vous devrez créer un nouvelle instance de &lt;a href=&quot;http://api.prototypejs.org/dom/Element/Layout/&quot;&gt;Element.Layout&lt;/a&gt;.

Note 2 : Si votre élément est masqué avec style &quot;&lt;em&gt;diplay:none&lt;/em&gt;&quot; il vous sera possible d&#39;effectuer des mesures uniquement si l&#39;élément parent est visible. Par ailleurs les mesures &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;, &lt;em&gt;top&lt;/em&gt;, &lt;em&gt;left&lt;/em&gt;, &lt;em&gt;bottom&lt;/em&gt; et &lt;em&gt;right&lt;/em&gt; auront toujours pour valeur 0.
&lt;h1&gt;Event.Handler&lt;/h1&gt;
L&#39;un des problèmes de la délégation d&#39;évènement avec les anciennes méthodes d&#39;observation d&#39;évènement est le ciblage de l&#39;élement qui nous intéresse. Considérons pour les exemples suivant l&#39;arbre HTML ci-dessous :
&lt;pre class=&quot;brush: html&quot;&gt;&amp;lt;ul id=&quot;elt&quot;&amp;gt;
  &amp;lt;li class=&quot;foo&quot; data-code=&quot;un&quot;&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;un&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;foo&quot; data-code=&quot;deux&quot;&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;deux&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;foo&quot; data-code=&quot;trois&quot;&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;trois&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;&lt;/pre&gt;
Lorsque qu&#39;un évènement est levé sur un élément il est levé sur tous ses parents récursivement, tant qu&#39;il n&#39;est pas arrêté explicitement ou qu&#39;il a atteind la racine de l&#39;arbre. On devait précédemment faire ce genre de chose :
&lt;pre class=&quot;brush: js&quot;&gt;var listener = function (evt) {
  var target = evt.findElement(&#39;.foo&#39;);
  if (!Object.isElement(target)) {
    return;
  }
  ... // traitement avec target, élement qui nous intéresse
}
$(&#39;elt&#39;).observe(&#39;click&#39;, listener);
... // et au besoin :
$(&#39;elt&#39;).stopObserving(&#39;click&#39;, listener);&lt;/pre&gt;
Quand nous devions arrêter l&#39;observation d&#39;un évènement particulier il était fastidieux de devoir stocker la fonction assignée dans une variable bien précise afin de pouvoir la re-passer en paramètre à la méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/stopObserving/&quot;&gt;Element#stopObserving()&lt;/a&gt;.

Heureusement les développeurs de Prototype nous ont simplifié la tache avec la méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/on/&quot;&gt;Element#on()&lt;/a&gt;. Cette nouvelle méthode prend en paramètre un nouveau paramètre (un selecteur CSS) permettant de cibler exactement la cible qui nous intéresse. De plus elle renvoie une instance de &lt;a href=&quot;http://api.prototypejs.org/dom/Event/Handler/&quot;&gt;Element.Handler&lt;/a&gt; qui possède des méthodes &lt;a href=&quot;http://api.prototypejs.org/dom/Event/Handler/prototype/stop/&quot;&gt;stop()&lt;/a&gt; et &lt;a href=&quot;http://api.prototypejs.org/dom/Event/Handler/prototype/start/&quot;&gt;start()&lt;/a&gt; qui permettent respectivement d&#39;arrêter et de reprendre l&#39;observation d&#39;un évènement particulier. En voici un exemple d&#39;utilisation :
&lt;pre class=&quot;brush: js&quot;&gt;var handler = $(&#39;elt&#39;).on(&#39;click&#39;, &#39;.foo&#39;, function (evt, target) {
  ... // traitement avec target, élement qui nous intéresse
});
... // et au besoin :
handler.stop();
... // et de nouveau :
handler.start();&lt;/pre&gt;
Pour compléter ces améliorations, une nouvelle méthode a été ajouté : &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/purge/&quot;&gt;Element#purge()&lt;/a&gt; permettant de nettoyer un élément de tous les listeners d&#39;évenement qui lui sont attachés.
&lt;h1&gt;Sizzle&lt;/h1&gt;
&lt;a href=&quot;http://sizzlejs.com/&quot;&gt;Sizzle&lt;/a&gt; est le nom du sélecteur CSS utilisé dans &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;. Afin de pouvoir utiliser ce middleware partagé entre plusieurs frameworks, l&#39;équipe de développement a fait un gros travail de modularité pour laisser le choix du moteur du traitement CSS. En effet, si vous souhaitez par exemple utiliser l&#39;ancien moteur (présent depuis la version 1.5.1), il vous suffit de rapatrier le code source (via &lt;a href=&quot;https://github.com/sstephenson/prototype&quot;&gt;github&lt;/a&gt; par exemple) et compiler prototype de la manière suivante :
&lt;pre class=&quot;brush: shell;&quot;&gt;rake dist SELECTOR_ENGINE=legacy_selector&lt;/pre&gt;
De la même manière vous pouvez écrire votre propre moteur en le plaçant dans le répertoire vendor/ du package.
&lt;h2&gt;Conclusion&lt;/h2&gt;
Les trois améliorations de la nouvelle mouture énoncées ci-dessus peuvent-être complétées par une ribambelle d&#39;ajustements (notamment lié à IE9). Cette nouvelle version confirme les prétentions de la librairie visant à palier les manquements de compatibilités inter-navigateurs et simplifier considérablement le développement d&#39;applications javascript, tout en restant le plus léger possible.&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;strong&gt;Màj : &lt;/strong&gt;Voici &lt;a href=&quot;http://prototypejs.org/2010/11/22/prototype-1-7&quot;&gt;l&#39;annonce officielle&lt;/a&gt;&lt;br /&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
Alors que la version 1.7 de &lt;a href=&quot;http://prototypejs.org&quot;&gt;Prototype&lt;/a&gt;, le fameux framework JS, s&#39;apprête à voir le jour. Nous allons, dans cet article, lister trois nouveautés majeures de cette version.
&lt;h1&gt;Element.Layout&lt;/h1&gt;
Cette classe permet de fournir, avec un maximum de précision, tout un tas de mesures sur un élement. Il existe deux manières d&#39;utiliser cette classe, voici la méthode du fainéant :
&lt;pre class=&quot;brush: js&quot;&gt; $(&#39;elt&#39;).measure(&#39;margin-top&#39;); // -&amp;gt; retourne la marge haute en pixel de elt
 $(&#39;elt&#39;).measure(&#39;height&#39;); // -&amp;gt; retourne la hauteur en pixel de elt&lt;/pre&gt;
Le fonctionnement de la deuxième ligne est similaire à l&#39;utilisation de la méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getHeight/&quot;&gt;Element#getHeight()&lt;/a&gt;. Une utilisation plus minutieuse pourrait ressembler à ça ;
&lt;pre class=&quot;brush: js&quot;&gt;var layout = $(&#39;elt&#39;).getLayout(true);
layout.get(&#39;margin-top&#39;); // retourne la même hauteur que précédemment.
layout.get(&#39;height&#39;); // retourne la même hauteur que précédemment.&lt;/pre&gt;
L&#39;avantage de la seconde méthode est que les valeurs de base nécessaire au calcul des dimensions sont mises en cache dans la variable layout et donc un seul appel est fait au DOM (gourmand en ressource).

Le paramètre &quot;&lt;em&gt;true&lt;/em&gt;&quot; de &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getLayout/&quot;&gt;Element#getLayout()&lt;/a&gt; permet de forcer la récupération de toutes les valeurs d&#39;un seul coup. Si ce paramètre est homis, les valeurs seront récupérées une par une et conservées en cache.

Pour des raisons d&#39;optimisation, les anciennes méthodes &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getWidth/&quot;&gt;Element#getWidth()&lt;/a&gt; et &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getHeight/&quot;&gt;Element#getHeight()&lt;/a&gt; n&#39;utilisent malheureusement pas cette méthode, mais utilisent l&#39;ancienne méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/getDimensions/&quot;&gt;Element#getDimensions()&lt;/a&gt;.

La liste des propriétés mesurables est disponible à &lt;a href=&quot;http://api.prototypejs.org/dom/Element/Layout/&quot;&gt;cette adresse&lt;/a&gt;.

Note 1 : Il faut bien garder à l&#39;esprit que si les dimensions de l&#39;élément, auquel votre layout fais référence, change, vous devrez créer un nouvelle instance de &lt;a href=&quot;http://api.prototypejs.org/dom/Element/Layout/&quot;&gt;Element.Layout&lt;/a&gt;.

Note 2 : Si votre élément est masqué avec style &quot;&lt;em&gt;diplay:none&lt;/em&gt;&quot; il vous sera possible d&#39;effectuer des mesures uniquement si l&#39;élément parent est visible. Par ailleurs les mesures &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;, &lt;em&gt;top&lt;/em&gt;, &lt;em&gt;left&lt;/em&gt;, &lt;em&gt;bottom&lt;/em&gt; et &lt;em&gt;right&lt;/em&gt; auront toujours pour valeur 0.
&lt;h1&gt;Event.Handler&lt;/h1&gt;
L&#39;un des problèmes de la délégation d&#39;évènement avec les anciennes méthodes d&#39;observation d&#39;évènement est le ciblage de l&#39;élement qui nous intéresse. Considérons pour les exemples suivant l&#39;arbre HTML ci-dessous :
&lt;pre class=&quot;brush: html&quot;&gt;&amp;lt;ul id=&quot;elt&quot;&amp;gt;
  &amp;lt;li class=&quot;foo&quot; data-code=&quot;un&quot;&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;un&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;foo&quot; data-code=&quot;deux&quot;&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;deux&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li class=&quot;foo&quot; data-code=&quot;trois&quot;&amp;gt;&amp;lt;a href=&quot;javascript:void(0);&quot;&amp;gt;trois&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;&lt;/pre&gt;
Lorsque qu&#39;un évènement est levé sur un élément il est levé sur tous ses parents récursivement, tant qu&#39;il n&#39;est pas arrêté explicitement ou qu&#39;il a atteind la racine de l&#39;arbre. On devait précédemment faire ce genre de chose :
&lt;pre class=&quot;brush: js&quot;&gt;var listener = function (evt) {
  var target = evt.findElement(&#39;.foo&#39;);
  if (!Object.isElement(target)) {
    return;
  }
  ... // traitement avec target, élement qui nous intéresse
}
$(&#39;elt&#39;).observe(&#39;click&#39;, listener);
... // et au besoin :
$(&#39;elt&#39;).stopObserving(&#39;click&#39;, listener);&lt;/pre&gt;
Quand nous devions arrêter l&#39;observation d&#39;un évènement particulier il était fastidieux de devoir stocker la fonction assignée dans une variable bien précise afin de pouvoir la re-passer en paramètre à la méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/stopObserving/&quot;&gt;Element#stopObserving()&lt;/a&gt;.

Heureusement les développeurs de Prototype nous ont simplifié la tache avec la méthode &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/on/&quot;&gt;Element#on()&lt;/a&gt;. Cette nouvelle méthode prend en paramètre un nouveau paramètre (un selecteur CSS) permettant de cibler exactement la cible qui nous intéresse. De plus elle renvoie une instance de &lt;a href=&quot;http://api.prototypejs.org/dom/Event/Handler/&quot;&gt;Element.Handler&lt;/a&gt; qui possède des méthodes &lt;a href=&quot;http://api.prototypejs.org/dom/Event/Handler/prototype/stop/&quot;&gt;stop()&lt;/a&gt; et &lt;a href=&quot;http://api.prototypejs.org/dom/Event/Handler/prototype/start/&quot;&gt;start()&lt;/a&gt; qui permettent respectivement d&#39;arrêter et de reprendre l&#39;observation d&#39;un évènement particulier. En voici un exemple d&#39;utilisation :
&lt;pre class=&quot;brush: js&quot;&gt;var handler = $(&#39;elt&#39;).on(&#39;click&#39;, &#39;.foo&#39;, function (evt, target) {
  ... // traitement avec target, élement qui nous intéresse
});
... // et au besoin :
handler.stop();
... // et de nouveau :
handler.start();&lt;/pre&gt;
Pour compléter ces améliorations, une nouvelle méthode a été ajouté : &lt;a href=&quot;http://api.prototypejs.org/dom/Element/prototype/purge/&quot;&gt;Element#purge()&lt;/a&gt; permettant de nettoyer un élément de tous les listeners d&#39;évenement qui lui sont attachés.
&lt;h1&gt;Sizzle&lt;/h1&gt;
&lt;a href=&quot;http://sizzlejs.com/&quot;&gt;Sizzle&lt;/a&gt; est le nom du sélecteur CSS utilisé dans &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;. Afin de pouvoir utiliser ce middleware partagé entre plusieurs frameworks, l&#39;équipe de développement a fait un gros travail de modularité pour laisser le choix du moteur du traitement CSS. En effet, si vous souhaitez par exemple utiliser l&#39;ancien moteur (présent depuis la version 1.5.1), il vous suffit de rapatrier le code source (via &lt;a href=&quot;https://github.com/sstephenson/prototype&quot;&gt;github&lt;/a&gt; par exemple) et compiler prototype de la manière suivante :
&lt;pre class=&quot;brush: shell;&quot;&gt;rake dist SELECTOR_ENGINE=legacy_selector&lt;/pre&gt;
De la même manière vous pouvez écrire votre propre moteur en le plaçant dans le répertoire vendor/ du package.
&lt;h2&gt;Conclusion&lt;/h2&gt;
Les trois améliorations de la nouvelle mouture énoncées ci-dessus peuvent-être complétées par une ribambelle d&#39;ajustements (notamment lié à IE9). Cette nouvelle version confirme les prétentions de la librairie visant à palier les manquements de compatibilités inter-navigateurs et simplifier considérablement le développement d&#39;applications javascript, tout en restant le plus léger possible.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>So, I made it - back to iOS a year later...</title>
   <link href="http://bloggure.info/shelf/2010/11/14/so-i-made-it.html"/>
   <updated>2010-11-14T00:00:00+01:00</updated>
   <id>http://bloggure.info/shelf/2010/11/14/so-i-made-it</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignleft size-thumbnail wp-image-68&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/ipad-150x150.png&quot; alt=&quot;&quot; width=&quot;105&quot; height=&quot;105&quot; /&gt;

I was lurking on Android based tablets and I&#39;ve found a 50% bargain on an iPad, so I&#39;ve bought an iPad (16Gb / Wifi).

I am really impressed by the device so far, it is really fast, its battery last for hours. It still have the bad things of iOS &amp;lt; 4, no multitasking is really bugging me...
&lt;em&gt;Post updated ! I will update this post as soon as iOS 4.x will be released...&lt;/em&gt;

&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;img class=&quot;alignleft size-thumbnail wp-image-68&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/ipad-150x150.png&quot; alt=&quot;&quot; width=&quot;105&quot; height=&quot;105&quot; /&gt;

I was lurking on Android based tablets and I&#39;ve found a 50% bargain on an iPad, so I&#39;ve bought an iPad (16Gb / Wifi).

I am really impressed by the device so far, it is really fast, its battery last for hours. It still have the bad things of iOS &amp;lt; 4, no multitasking is really bugging me...
&lt;em&gt;Post updated ! I will update this post as soon as iOS 4.x will be released...&lt;/em&gt;

&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;iOS 4.2.1 has arrived for a few weeks now. iPad is still an awesome device for me, multitasking bring the ability to play for music streamed via DLNA while surfing the web with Safari mobile. The only things I really regret is the unability to play Flash content (nowadays there is still a lot of website using it, and as a couch internet device we tend to browse those...).&lt;!--:--&gt;&lt;!--:fr--&gt;iOS 4.2.1 has arrived for a few weeks now. iPad is still an awesome device for me, multitasking bring the ability to play for music streamed via DLNA while surfing the web with Safari mobile. The only things I really regret is the unability to play Flash content (nowadays there is still a lot of website using it, and as a couch internet device we tend to browse those...).&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>iTunes media sharing over the Internet from a NAS</title>
   <link href="http://bloggure.info/.shell/shelf/2010/11/14/itunes-media-sharing-over-the-internet-from-a-nas.html"/>
   <updated>2010-11-14T00:00:00+01:00</updated>
   <id>http://bloggure.info/.shell/shelf/2010/11/14/itunes-media-sharing-over-the-internet-from-a-nas</id>
   <content type="html">&lt;!--:en--&gt;&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/free-music-head.png&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-99&quot; title=&quot;Music&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/free-music-head.png&quot; alt=&quot;&quot; width=&quot;200&quot; height=&quot;124&quot; /&gt;&lt;/a&gt;I am a big fan of music, and I like to listen to all my music wherever I am and whatever I do (specially when coding).

All my medias are stored on a NAS drive that features a little embedded linux distribution as operating system. One of the service is called iTunes media sharing (mt-daapd is the real name of the daemon).

It is really a cool feature as I can listen media stored on my NAS from whatever device on my LAN. The magic behind is called Bonjour which is a protocol that allows device to register themselves on the network and being discovered by others.

My problem is I want to be able to listen to my home music at work, and Bonjour service does not go out of my LAN. The additional thing is I want to listen to my music using iTunes (I am fond of &lt;a title=&quot;Bowtie&quot; href=&quot;http://bowtieapp.com&quot; target=&quot;_blank&quot;&gt;Bowtie&lt;/a&gt;) on my MacBook Pro.

&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;a href=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/free-music-head.png&quot;&gt;&lt;img class=&quot;alignright size-full wp-image-99&quot; title=&quot;Music&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/free-music-head.png&quot; alt=&quot;&quot; width=&quot;200&quot; height=&quot;124&quot; /&gt;&lt;/a&gt;I am a big fan of music, and I like to listen to all my music wherever I am and whatever I do (specially when coding).

All my medias are stored on a NAS drive that features a little embedded linux distribution as operating system. One of the service is called iTunes media sharing (mt-daapd is the real name of the daemon).

It is really a cool feature as I can listen media stored on my NAS from whatever device on my LAN. The magic behind is called Bonjour which is a protocol that allows device to register themselves on the network and being discovered by others.

My problem is I want to be able to listen to my home music at work, and Bonjour service does not go out of my LAN. The additional thing is I want to listen to my music using iTunes (I am fond of &lt;a title=&quot;Bowtie&quot; href=&quot;http://bowtieapp.com&quot; target=&quot;_blank&quot;&gt;Bowtie&lt;/a&gt;) on my MacBook Pro.

&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
&lt;h1&gt;Simulating Bonjour presence&lt;/h1&gt;
The trick is to use a little software called &lt;em&gt;dns-sd &lt;/em&gt;to register your distant IP-address as a Bonjour source, by executing the following command (replacing YOURIP with your public IP), you should see a shared library (named MYNAME) in iTunes :

[bash light=&quot;true&quot;]
dns-sd -P MYNAME _daap._tcp. &amp;quot;my details&amp;quot; 3689 homemusic.local YOURIP&amp;amp;amp;
[/bash]

If it does not work, I think you&#39;ve forgotten to open the 3689 TCP port of your firewall and / or to forward it to your box running mt-daapd.
&lt;h1&gt;Modifying iTunes to launch dns-sd&lt;/h1&gt;
The thing is that it is not very convenient to launch the command line with iTunes, it would be better if all was automatic.

There is a simple way of doing it that you&#39;ll have to do each times iTunes is updated, moving the actual iTunes binary to another file and trigger its launch from a small shell script.

First step is to move iTunes binary, launch a Terminal.app and type the following :

[bash light=&quot;true&quot;]
mv /Applications/iTunes.app/Contents/MacOS/iTunes /Applications/iTunes.app/Contents/MacOS/iTunes.bin
[/bash]

Then, create the following shell script and record it under /Applications/iTunes.app/Contents/MacOS/iTunes

[bash]
#!/bin/sh
dns-sd -P MYNAME _daap._tcp. &amp;quot;my details&amp;quot; 3689 homemusic.local YOURIP&amp;amp;amp;
/Applications/iTunes.app/Contents/MacOS/iTunes.bin
[/bash]

Finally, make the script executable by &lt;em&gt;chmod&lt;/em&gt;ding it :

[bash light=&quot;true&quot;]
chmod +x /Applications/iTunes.app/Contents/MacOS/iTunes
[/bash]

The next time you&#39;ll launch iTunes, the &lt;em&gt;dns-sd &lt;/em&gt;service will be automatically launched, your shared media library will appear and your ears will love this !

WARNING : you actually expose your media library to everyone on the internet, I suggest you to set a password / change port number / use a SSH tunnel to circumvent this...&lt;!--:--&gt;&lt;!--:fr--&gt;
&lt;h1&gt;Simulating Bonjour presence&lt;/h1&gt;
The trick is to use a little software called &lt;em&gt;dns-sd &lt;/em&gt;to register your distant IP-address as a Bonjour source, by executing the following command (replacing YOURIP with your public IP), you should see a shared library (named MYNAME) in iTunes :

[bash light=&quot;true&quot;]
dns-sd -P MYNAME _daap._tcp. &amp;quot;my details&amp;quot; 3689 homemusic.local YOURIP&amp;amp;amp;
[/bash]

If it does not work, I think you&#39;ve forgotten to open the 3689 TCP port of your firewall and / or to forward it to your box running mt-daapd.
&lt;h1&gt;Modifying iTunes to launch dns-sd&lt;/h1&gt;
The thing is that it is not very convenient to launch the command line with iTunes, it would be better if all was automatic.

There is a simple way of doing it that you&#39;ll have to do each times iTunes is updated, moving the actual iTunes binary to another file and trigger its launch from a small shell script.

First step is to move iTunes binary, launch a Terminal.app and type the following :

[bash light=&quot;true&quot;]
mv /Applications/iTunes.app/Contents/MacOS/iTunes /Applications/iTunes.app/Contents/MacOS/iTunes.bin
[/bash]

Then, create the following shell script and record it under /Applications/iTunes.app/Contents/MacOS/iTunes

[bash]
#!/bin/sh
dns-sd -P MYNAME _daap._tcp. &amp;quot;my details&amp;quot; 3689 homemusic.local YOURIP&amp;amp;amp;
/Applications/iTunes.app/Contents/MacOS/iTunes.bin
[/bash]

Finally, make the script executable by &lt;em&gt;chmod&lt;/em&gt;ding it :

[bash light=&quot;true&quot;]
chmod +x /Applications/iTunes.app/Contents/MacOS/iTunes
[/bash]

The next time you&#39;ll launch iTunes, the &lt;em&gt;dns-sd &lt;/em&gt;service will be automatically launched, your shared media library will appear and your ears will love this !

WARNING : you actually expose your media library to everyone on the internet, I suggest you to set a password / change port number / use a SSH tunnel to circumvent this...&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Glassfish v3.x - custom log levels</title>
   <link href="http://bloggure.info/.java/work/2010/11/02/glassfish-v3-custom-log-levels.html"/>
   <updated>2010-11-02T00:00:00+01:00</updated>
   <id>http://bloggure.info/.java/work/2010/11/02/glassfish-v3-custom-log-levels</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-full wp-image-71&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/glassfish.png&quot; alt=&quot;&quot; width=&quot;92&quot; height=&quot;50&quot; /&gt;In Glassfish v2, you can easily set log levels using the admin console by going into &lt;em&gt;Application Server &amp;gt; Logging &amp;gt; Log Levels&lt;/em&gt;. There you can add custom filter and change levels only by using the console.

In the new stable release of Glassfish, this option has disappeared, you can edit levels but there is no easy way to add custom filters. The trick is to alter manually the logging.properties file located in &lt;em&gt;&amp;lt;yourdomain&amp;gt;&lt;/em&gt;&lt;em&gt;/config&lt;/em&gt; directory.
For example, if you want to filter out logs from Sun&#39;s Portlet Container, you have to set the following in the logging.properties file :

[code light=&quot;true&quot;]
debug.com.sun.portlet.portletcontainer.impl.level=FINEST
[/code]

Please notice the &lt;code&gt;.level&lt;/code&gt; at the end of the fully qualified name of the class hierarchy to filter. After adding the new entry, you will be able to alter level via the admin console of Glassfish, or even simpler, simply edit the file : the changes are taken on the fly (in certain conditions, you might need to restart the server) !

Hope it&#39;ll help...&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;img class=&quot;alignright size-full wp-image-71&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/glassfish.png&quot; alt=&quot;&quot; width=&quot;92&quot; height=&quot;50&quot; /&gt;Dans Glassfish v2, il est facile de configurer les niveaux de log en utilisant la console d&#39;administration en allant dans les catégories &lt;em&gt;Application Server &amp;gt; Logging &amp;gt; Log Levels&lt;/em&gt;. D&#39;ici vous pouvez rajouter des niveaux personnalisés et changer les niveaux de façon graphique.

Dans la nouvelle version stable de Glassfish, cette option a disparu, vous pouvez éditer les niveaux mais il n&#39;y a pas de système simple permettant d&#39;ajouter des niveaux personnalisés. L&#39;astuce est de modifier le fichier logging.properties présent dans le répertoire  &lt;em&gt;&amp;lt;yourdomain&amp;gt;&lt;/em&gt;&lt;em&gt;/config&lt;/em&gt;.
Par exemple, si vous voulez filtrer les logs du container de portlets de Sun vous devez ajouter la ligne suivante dans votre fichier  logging.properties :

[code light=&quot;true&quot;]
debug.com.sun.portlet.portletcontainer.impl.level=FINEST
[/code]

Prêtez attention a l&#39;ajout de &lt;code&gt;.level&lt;/code&gt; à la fin du nom complet de la class à filtrer. Après avoir ajouté de nouvelles entrées, vous pourrez changer le niveau via l&#39;administration de Glassfish, ou, encore plus simple, éditer de nouveau le fichier, les changements sont pris à la volée (dans certaines conditions, un redémarrage du serveur peut être requis) ! 

En espérant que ça aide quelques personnes...&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting source revision for a deployed app using Maven and a Servlet</title>
   <link href="http://bloggure.info/.java/.maven/work/2010/11/01/getting-source-revision-for-a-deployed-app-using-maven-and-a-servlet.html"/>
   <updated>2010-11-01T00:00:00+01:00</updated>
   <id>http://bloggure.info/.java/.maven/work/2010/11/01/getting-source-revision-for-a-deployed-app-using-maven-and-a-servlet</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-full wp-image-74&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/Maven_logo1.gif&quot; alt=&quot;&quot; width=&quot;274&quot; height=&quot;70&quot; /&gt;With our modern version control systems, we could assume we know for every single release we make the exact source code revision that corresponds. But, in the hurry of a bug found by your dear clients (or your product owner),  you can&#39;t find the corresponding tag in your VCS, it will make the whole patch process really difficult. You will have to find the exact revision, extract it and debug to patch (or backport an existing patch).

I will explain a little trick to make the find the revision thing a lot easier (I am assuming you&#39;re using maven to build your projects) : &lt;a title=&quot;maven-buildnumber-plugin&quot; href=&quot;http://mojo.codehaus.org/buildnumber-maven-plugin/&quot;&gt;maven-buildnumber-plugin&lt;/a&gt;

&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;img class=&quot;alignright size-full wp-image-74&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/11/Maven_logo1.gif&quot; alt=&quot;&quot; width=&quot;274&quot; height=&quot;70&quot; /&gt;With our modern version control systems, we could assume we know for every single release we make the exact source code revision that corresponds. But, in the hurry of a bug found by your dear clients (or your product owner),  you can&#39;t find the corresponding tag in your VCS, it will make the whole patch process really difficult. You will have to find the exact revision, extract it and debug to patch (or backport an existing patch).

I will explain a little trick to make the find the revision thing a lot easier (I am assuming you&#39;re using maven to build your projects) : &lt;a title=&quot;maven-buildnumber-plugin&quot; href=&quot;http://mojo.codehaus.org/buildnumber-maven-plugin/&quot;&gt;maven-buildnumber-plugin&lt;/a&gt;

&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;
&lt;h2&gt;Embed revision into artifacts&lt;/h2&gt;
By using this plugin you can easily embbed revision informations into your artifacts, the configuration is, as always with maven, as easy as A-B-C, just add the following to your projects&#39; pom :

[code lang=&quot;xml&quot;]
&amp;lt;profile&amp;gt;
    &amp;lt;id&amp;gt;buildnumbering&amp;lt;/id&amp;gt;
    &amp;lt;build&amp;gt;
       &amp;lt;plugins&amp;gt;
           &amp;lt;plugin&amp;gt;
               &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
               &amp;lt;artifactId&amp;gt;buildnumber-maven-plugin&amp;lt;/artifactId&amp;gt;
               &amp;lt;version&amp;gt;1.0-beta-4&amp;lt;/version&amp;gt;
               &amp;lt;executions&amp;gt;
                  &amp;lt;execution&amp;gt;
                     &amp;lt;phase&amp;gt;validate&amp;lt;/phase&amp;gt;
                     &amp;lt;goals&amp;gt;
                         &amp;lt;goal&amp;gt;create&amp;lt;/goal&amp;gt;
                     &amp;lt;/goals&amp;gt;
                 &amp;lt;/execution&amp;gt;
               &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                       &amp;lt;id&amp;gt;buildNumber&amp;lt;/id&amp;gt;
                       &amp;lt;configuration&amp;gt;
                          &amp;lt;archive&amp;gt;
                             &amp;lt;manifestEntries&amp;gt;
                                &amp;lt;Implementation-Build&amp;gt;
                                      ${buildNumber}
                                &amp;lt;/Implementation-Build&amp;gt;
                             &amp;lt;/manifestEntries&amp;gt;
                          &amp;lt;/archive&amp;gt;
                      &amp;lt;/configuration&amp;gt;
                   &amp;lt;/execution&amp;gt;
               &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-ear-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                   &amp;lt;archive&amp;gt;
                      &amp;lt;manifestEntries&amp;gt;
                         &amp;lt;Implementation-Build&amp;gt;
                               ${buildNumber}
                         &amp;lt;/Implementation-Build&amp;gt;
                      &amp;lt;/manifestEntries&amp;gt;
                   &amp;lt;/archive&amp;gt;
                &amp;lt;/configuration&amp;gt;
             &amp;lt;/plugin&amp;gt;
         &amp;lt;/plugins&amp;gt;
     &amp;lt;/build&amp;gt;
&amp;lt;/profile&amp;gt;
[/code]

We tell maven to use the maven-build-number plugin during the validate phase and we add the property &lt;em&gt;buildNumber &lt;/em&gt;to the manifest entries of the ear and war we can produce (useful if we are in a multimodule pom). This setup is performed under a specific profile and can be triggered by executing maven this way :

[code lang=&quot;bash&quot;]mvn clean install -Pbuildnumbering[/code]

If you look at resulting artifacts, the META-INF/MANIFEST.MF files contain Implementation-Build: #### (where #### is the current revision on your SCM).
&lt;h2&gt;Get revision number at runtime&lt;/h2&gt;
Now that the revision is stored in our artifacts, we need a way to figure out, at runtime, which revision is deployed, the basic idea is to have a servlet get this info for us, and dump it on your web browser. For confidentiality purpose, it might be useful to put an authorization filter on top of this servlet, but it won&#39;t be covered in this post.

The code for the servlet follows :

[code lang=&quot;java&quot;]
/**
  * Package and import are ommited on purpose
  * User: cgatay Date: 17 oct. 2010 Time: 13:34:59
  */
public class VersionServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        try {
            String appServerHome = getServletContext().getContext(&amp;quot;/&amp;quot;).getRealPath(&amp;quot;/&amp;quot;);
            final int lastSlash = appServerHome.lastIndexOf(File.separator);
            final int beforeLastSlash = appServerHome.lastIndexOf(File.separator, lastSlash-1);
            appServerHome = appServerHome.substring(0, beforeLastSlash);

            final File file = new File(appServerHome);
            if (file.exists() &amp;amp;&amp;amp; file.canRead() &amp;amp;&amp;amp; file.isDirectory()) {
                List&amp;lt;String&amp;gt; listFiles = new ArrayList&amp;lt;String&amp;gt;(Arrays.asList(file.list()));
                listFiles.add(0, &amp;quot;&amp;quot;);
                for (String s : listFiles) {
                    File manifestFile = new File(appServerHome + File.separator + s, &amp;quot;META-INF/MANIFEST.MF&amp;quot;);
                    if (manifestFile.exists()) {
                        dumpManifestInfo(resp, manifestFile, s);
                    }
                }
            }
            resp.setStatus(200);
        } catch (IOException e) {
            e.printStackTrace();
            resp.setStatus(500);
            resp.getOutputStream().print(&amp;quot;Cannot retrieve version data !&amp;quot;);
        }
    }

    private void dumpManifestInfo(HttpServletResponse resp, File manifestFile, String module) throws IOException {
        Manifest mf = new Manifest();
        mf.read(new FileInputStream(manifestFile));

        Attributes atts = mf.getMainAttributes();
        resp.getOutputStream().println(&amp;quot; ============================ &amp;quot;);
        resp.getOutputStream().println(&amp;quot;Module : &amp;quot; + (module.isEmpty() ? &amp;quot;EAR&amp;quot; : module));
        resp.getOutputStream().println(&amp;quot;Build: &amp;quot; + atts.getValue(&amp;quot;Implementation-Build&amp;quot;));
    }
}

[/code]

Just mount this Servlet via your web.xml, add a filter on top and you&#39;re gone.

We assume that if the module is empty, we are at the root of an EAR file.

This is confirmed to work under Glassfish application server, it might work with other application servers (path might need to be corrected), anyway, I&#39;d love to get feedback on this.&lt;!--:--&gt;&lt;!--:fr--&gt;
&lt;h2&gt;Embed revision into artifacts&lt;/h2&gt;
By using this plugin you can easily embbed revision informations into your artifacts, the configuration is, as always with maven, as easy as A-B-C, just add the following to your projects&#39; pom :

[code lang=&quot;xml&quot;]
&amp;lt;profile&amp;gt;
    &amp;lt;id&amp;gt;buildnumbering&amp;lt;/id&amp;gt;
    &amp;lt;build&amp;gt;
       &amp;lt;plugins&amp;gt;
           &amp;lt;plugin&amp;gt;
               &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt;
               &amp;lt;artifactId&amp;gt;buildnumber-maven-plugin&amp;lt;/artifactId&amp;gt;
               &amp;lt;version&amp;gt;1.0-beta-4&amp;lt;/version&amp;gt;
               &amp;lt;executions&amp;gt;
                  &amp;lt;execution&amp;gt;
                     &amp;lt;phase&amp;gt;validate&amp;lt;/phase&amp;gt;
                     &amp;lt;goals&amp;gt;
                         &amp;lt;goal&amp;gt;create&amp;lt;/goal&amp;gt;
                     &amp;lt;/goals&amp;gt;
                 &amp;lt;/execution&amp;gt;
               &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                       &amp;lt;id&amp;gt;buildNumber&amp;lt;/id&amp;gt;
                       &amp;lt;configuration&amp;gt;
                          &amp;lt;archive&amp;gt;
                             &amp;lt;manifestEntries&amp;gt;
                                &amp;lt;Implementation-Build&amp;gt;
                                      ${buildNumber}
                                &amp;lt;/Implementation-Build&amp;gt;
                             &amp;lt;/manifestEntries&amp;gt;
                          &amp;lt;/archive&amp;gt;
                      &amp;lt;/configuration&amp;gt;
                   &amp;lt;/execution&amp;gt;
               &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-ear-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                   &amp;lt;archive&amp;gt;
                      &amp;lt;manifestEntries&amp;gt;
                         &amp;lt;Implementation-Build&amp;gt;
                               ${buildNumber}
                         &amp;lt;/Implementation-Build&amp;gt;
                      &amp;lt;/manifestEntries&amp;gt;
                   &amp;lt;/archive&amp;gt;
                &amp;lt;/configuration&amp;gt;
             &amp;lt;/plugin&amp;gt;
         &amp;lt;/plugins&amp;gt;
     &amp;lt;/build&amp;gt;
&amp;lt;/profile&amp;gt;
[/code]

We tell maven to use the maven-build-number plugin during the validate phase and we add the property &lt;em&gt;buildNumber &lt;/em&gt;to the manifest entries of the ear and war we can produce (useful if we are in a multimodule pom). This setup is performed under a specific profile and can be triggered by executing maven this way :

[code lang=&quot;bash&quot;]mvn clean install -Pbuildnumbering[/code]

If you look at resulting artifacts, the META-INF/MANIFEST.MF files contain Implementation-Build: #### (where #### is the current revision on your SCM).
&lt;h2&gt;Get revision number at runtime&lt;/h2&gt;
Now that the revision is stored in our artifacts, we need a way to figure out, at runtime, which revision is deployed, the basic idea is to have a servlet get this info for us, and dump it on your web browser. For confidentiality purpose, it might be useful to put an authorization filter on top of this servlet, but it won&#39;t be covered in this post.

The code for the servlet follows :

[code lang=&quot;java&quot;]
/**
  * Package and import are ommited on purpose
  * User: cgatay Date: 17 oct. 2010 Time: 13:34:59
  */
public class VersionServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        try {
            String appServerHome = getServletContext().getContext(&amp;quot;/&amp;quot;).getRealPath(&amp;quot;/&amp;quot;);
            final int lastSlash = appServerHome.lastIndexOf(File.separator);
            final int beforeLastSlash = appServerHome.lastIndexOf(File.separator, lastSlash-1);
            appServerHome = appServerHome.substring(0, beforeLastSlash);

            final File file = new File(appServerHome);
            if (file.exists() &amp;amp;&amp;amp; file.canRead() &amp;amp;&amp;amp; file.isDirectory()) {
                List&amp;lt;String&amp;gt; listFiles = new ArrayList&amp;lt;String&amp;gt;(Arrays.asList(file.list()));
                listFiles.add(0, &amp;quot;&amp;quot;);
                for (String s : listFiles) {
                    File manifestFile = new File(appServerHome + File.separator + s, &amp;quot;META-INF/MANIFEST.MF&amp;quot;);
                    if (manifestFile.exists()) {
                        dumpManifestInfo(resp, manifestFile, s);
                    }
                }
            }
            resp.setStatus(200);
        } catch (IOException e) {
            e.printStackTrace();
            resp.setStatus(500);
            resp.getOutputStream().print(&amp;quot;Cannot retrieve version data !&amp;quot;);
        }
    }

    private void dumpManifestInfo(HttpServletResponse resp, File manifestFile, String module) throws IOException {
        Manifest mf = new Manifest();
        mf.read(new FileInputStream(manifestFile));

        Attributes atts = mf.getMainAttributes();
        resp.getOutputStream().println(&amp;quot; ============================ &amp;quot;);
        resp.getOutputStream().println(&amp;quot;Module : &amp;quot; + (module.isEmpty() ? &amp;quot;EAR&amp;quot; : module));
        resp.getOutputStream().println(&amp;quot;Build: &amp;quot; + atts.getValue(&amp;quot;Implementation-Build&amp;quot;));
    }
}

[/code]

Just mount this Servlet via your web.xml, add a filter on top and you&#39;re gone.

We assume that if the module is empty, we are at the root of an EAR file.

This is confirmed to work under Glassfish application server, it might work with other application servers (path might need to be corrected), anyway, I&#39;d love to get feedback on this.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Switcher Widget</title>
   <link href="http://bloggure.info/.android/2010/10/29/android-switcher-widget.html"/>
   <updated>2010-10-29T00:00:00+02:00</updated>
   <id>http://bloggure.info/.android/2010/10/29/android-switcher-widget</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignright size-full wp-image-85&quot; title=&quot;Android Switcher Widget&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/app_icon.png&quot; alt=&quot;&quot; width=&quot;64&quot; height=&quot;64&quot; /&gt;Hey there,
as some of you may know, I am a frequent reader (less frequent writer) on modaco&#39;s forum. Specially in the Acer Liquid&#39;s section (good device so far with an unbelieveable community).
I found a thread talking about the lack of a task switching widget (&lt;a title=&quot;here&quot; href=&quot;http://bit.ly/cMYqDt&quot;&gt;http://bit.ly/cMYqDt&lt;/a&gt;) and so I did my best to do such a thing.

If you want to go straight to the download part, scan the following QRCode with your device, else go to the read more part.
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;Switcher Widget QRCode&quot; src=&quot;http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=100x100&amp;amp;chl=http://cyrket.com/qr/89862&quot; alt=&quot;Switcher Widget QRCode&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;&lt;/p&gt;
&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;img class=&quot;alignright size-full wp-image-85&quot; title=&quot;Android Switcher Widget&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/app_icon.png&quot; alt=&quot;&quot; width=&quot;64&quot; height=&quot;64&quot; /&gt;Hey there,
as some of you may know, I am a frequent reader (less frequent writer) on modaco&#39;s forum. Specially in the Acer Liquid&#39;s section (good device so far with an unbelieveable community).
I found a thread talking about the lack of a task switching widget (&lt;a title=&quot;here&quot; href=&quot;http://bit.ly/cMYqDt&quot;&gt;http://bit.ly/cMYqDt&lt;/a&gt;) and so I did my best to do such a thing.

If you want to go straight to the download part, scan the following QRCode with your device, else go to the read more part.
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;Switcher Widget QRCode&quot; src=&quot;http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=100x100&amp;amp;chl=http://cyrket.com/qr/89862&quot; alt=&quot;Switcher Widget QRCode&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;&lt;/p&gt;
&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;

The actual release is Switcher Widget 0.3.2, it features :
&lt;ul&gt;
	&lt;li&gt;skinnability : put a png file named SwitcherWidget.png at the root of your SDCard and the widget will use it as a background.&lt;/li&gt;
	&lt;li&gt;top 5 running apps are shown in a dock like fashion&lt;/li&gt;
	&lt;li&gt;free as in free beer ! (if you think I deserve it, don&#39;t hesitate to hit the &lt;a title=&quot;donate link&quot; href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4G8MY8JN9Q2PE&quot;&gt;donate link&lt;/a&gt; at the right...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;size-full wp-image-53 aligncenter&quot; title=&quot;Switcher Widget Screenshot 1&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/device1.png&quot; alt=&quot;&quot; width=&quot;336&quot; height=&quot;560&quot; /&gt;&lt;img class=&quot;size-full wp-image-52 aligncenter&quot; title=&quot;Switcher Widget Screenshot 2&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/device2.png&quot; alt=&quot;&quot; width=&quot;336&quot; height=&quot;560&quot; /&gt;&lt;/p&gt;
Please let me know if it does not work for you, I&#39;ll do my best to fix it.&lt;!--:--&gt;&lt;!--:fr--&gt;

The actual release is Switcher Widget 0.3.2, it features :
&lt;ul&gt;
	&lt;li&gt;skinnability : put a png file named SwitcherWidget.png at the root of your SDCard and the widget will use it as a background.&lt;/li&gt;
	&lt;li&gt;top 5 running apps are shown in a dock like fashion&lt;/li&gt;
	&lt;li&gt;free as in free beer ! (if you think I deserve it, don&#39;t hesitate to hit the &lt;a title=&quot;donate link&quot; href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4G8MY8JN9Q2PE&quot;&gt;donate link&lt;/a&gt; at the right...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;size-full wp-image-53 aligncenter&quot; title=&quot;Switcher Widget Screenshot 1&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/device1.png&quot; alt=&quot;&quot; width=&quot;336&quot; height=&quot;560&quot; /&gt;&lt;img class=&quot;size-full wp-image-52 aligncenter&quot; title=&quot;Switcher Widget Screenshot 2&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/device2.png&quot; alt=&quot;&quot; width=&quot;336&quot; height=&quot;560&quot; /&gt;&lt;/p&gt;
Please let me know if it does not work for you, I&#39;ll do my best to fix it.&lt;!--:--&gt;
</content>
 </entry>
 
 <entry>
   <title>Wicket 1.4.x - TinyMCE</title>
   <link href="http://bloggure.info/.wicket/2010/10/24/wicket-1-4-9-tinymce.html"/>
   <updated>2010-10-24T00:00:00+02:00</updated>
   <id>http://bloggure.info/.wicket/2010/10/24/wicket-1-4-9-tinymce</id>
   <content type="html">&lt;!--:en--&gt;&lt;img class=&quot;alignleft size-full wp-image-90&quot; title=&quot;Wicket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/logo-wicket1.png&quot; alt=&quot;&quot; width=&quot;120&quot; height=&quot;119&quot; /&gt;Heya all,

I am trying to revive this blog from a long period of sleep. Let&#39;s start today with a little Java trick I made to have a working TinyMCE implementation using Wicket (tested over 1.4.9 and 1.4.13 in my case but I think it should work for any 1.4.x at least, please report successful attempts under other releases).

For newcomers, &lt;a href=&quot;http://tinymce.moxiecode.com/&quot; target=&quot;_blank&quot;&gt;TinyMCE&lt;/a&gt; is a really powerful WYSIWYG editor written entirely in Javascript, it features plugin and theme ability in order to be THE editor to use in your projects. &lt;a href=&quot;http://wicket.apache.org/&quot; target=&quot;_blank&quot;&gt;Apache Wicket&lt;/a&gt; is a really powerful web framework based on Java EE specs (I think I&#39;ll talk a lot about Wicket in here...).

An implementation of TinyMCE for Wicket exists, it&#39;ll be the first result you get when you ask your old pal G***** a hand. But, this implementation is a bit tricky to find (outdated links everywhere) and not feature complete (or not fully complete), as I explain in the read more part...

&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;em&gt;Cet article n&#39;a pas été traduit, veuillez trouver ci-dessous sa version anglaise&lt;/em&gt;

&lt;img class=&quot;alignleft size-full wp-image-90&quot; title=&quot;Wicket&quot; src=&quot;http://www.bloggure.info/wp-content/uploads/2010/10/logo-wicket1.png&quot; alt=&quot;&quot; width=&quot;120&quot; height=&quot;119&quot; /&gt;Heya all,

I am trying to revive this blog from a long period of sleep. Let&#39;s start today with a little Java trick I made to have a working TinyMCE implementation using Wicket (tested over 1.4.9 and 1.4.13 in my case but I think it should work for any 1.4.x at least, please report successful attempts under other releases).

For newcomers, &lt;a href=&quot;http://tinymce.moxiecode.com/&quot; target=&quot;_blank&quot;&gt;TinyMCE&lt;/a&gt; is a really powerful WYSIWYG editor written entirely in Javascript, it features plugin and theme ability in order to be THE editor to use in your projects. &lt;a href=&quot;http://wicket.apache.org/&quot; target=&quot;_blank&quot;&gt;Apache Wicket&lt;/a&gt; is a really powerful web framework based on Java EE specs (I think I&#39;ll talk a lot about Wicket in here...).

An implementation of TinyMCE for Wicket exists, it&#39;ll be the first result you get when you ask your old pal G***** a hand. But, this implementation is a bit tricky to find (outdated links everywhere) and not feature complete (or not fully complete), as I explain in the read more part...

&lt;!--:--&gt;&lt;!--more--&gt;&lt;!--:en--&gt;

You can checkout latest almost working release from &lt;a href=&quot;https://wicket-stuff.svn.sourceforge.net/svnroot/wicket-stuff/releases/wicketstuff-core-1.4-rc7/tinymce-parent&quot; target=&quot;_blank&quot;&gt;there&lt;/a&gt; by using the following command line :

[code lang=&quot;bash&quot; light=&quot;true&quot;] svn co https://wicket-stuff.svn.sourceforge.net/svnroot/wicket-stuff/releases/wicketstuff-core-1.4-rc7/tinymce-parent[/code]

Let me explain what problem I encountered, it happens only on isolated cases (ajax pushing the whole WYSIWYG shebang on a page without that mess). TinyMCE is then lost, and the only output you get when you try to call init() is &lt;code&gt;tinyMCE is undefined&lt;/code&gt; on your Javascript console. My first thought was to replace the outdated version bundled (3.1.0.1), so I headed to TinyMCE&#39;s website , downloaded latest version so far (3.3.9.2) and replaced it in my workspace. A try later and no luck, the problem is still here.

What&#39;s happening, why on hell this working component don&#39;t want to work anymore ? By digging into TinyMCE&#39;s code, you&#39;ll find that it looks for its baseURL, for lazy loading stuffs (depending on what you use), but Wicket responds to Ajax  headers contribution in a special way : instead of appending regular
&lt;code&gt;&amp;lt;script type=&#39;text/javascript&#39; src=&#39;myurltomyfile.js&#39;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;
it appends
&lt;code&gt;&amp;lt;script type=&#39;text/javascript&#39; src_=&#39;myurltomyfile.js&#39;&amp;gt;[content of myurltomyfile.js]&amp;lt;/script&amp;gt;&lt;/code&gt;
to the body of the document.

This particular way of answering to browser is not well handled by TinyMCE, which looks up its baseURL by parsing script tags present in the DOM. The hack to circumvent this is really simple, make TinyMCE find its baseURL by reacting on src_ attributes. The following listing shows the patch in &lt;code&gt;tiny_mce_src.js&lt;/code&gt; on the &lt;code&gt;getBase(n)&lt;/code&gt;method :

[code lang=&quot;js&quot; highlight=&quot;2,3,4,5&quot;]function getBase(n) {
    var src_ = n.getAttribute(&amp;quot;src_&amp;quot;);
    if (src_) {
        n.src = src_;
    }
   if (n.src &amp;amp;&amp;amp; /tiny_mce(|_gzip|_jquery|_prototype|_full)(_dev|_src)?.js/.test(n.src)) {
        if (/_(src|dev)\.js/g.test(n.src)) {
            t.suffix = &#39;_src&#39;;
        }
        if ((p = n.src.indexOf(&#39;?&#39;)) != -1) {
            t.query = n.src.substring(p + 1);
        }

        t.baseURL = n.src.substring(0, n.src.lastIndexOf(&#39;/&#39;));

        // If path to script is relative and a base href was found add that one infront
        // the src property will always be an absolute one on non IE browsers and IE 8
        // so this logic will basically only be executed on older IE versions
        if (base &amp;amp;&amp;amp; t.baseURL.indexOf(&#39;://&#39;) == -1 &amp;amp;&amp;amp; t.baseURL.indexOf(&#39;/&#39;) !== 0) {
            t.baseURL = base + t.baseURL;
        }
        return t.baseURL;
  }
  return null;
}[/code]

With this hack, console error yelling &lt;code&gt;tinyMCE is undefined&lt;/code&gt; is gone. No more error but the editor still does not work, TinyMCE waits for the document to be ready before calling its render phase. Let&#39;s fake it by flagging when we&#39;re coming from a Wicket Ajax request. We simply add an attribute to tinyMCE object : in the &lt;code&gt;_init()&lt;/code&gt; method

[code lang=&quot;js&quot;]
t.isAjax = false;
[/code]

We flag in the &lt;code&gt;getBase(n)&lt;/code&gt; when we come from Wicket Ajax (when we get something like &lt;code&gt;&amp;lt;script src_=&quot;&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;)

[code lang=&quot;js&quot; highlight=&quot;2&quot;]if (src_) {
    t.isAjax = true;
    n.src = src_;
}[/code]

and we set the &lt;code&gt;domLoaded&lt;/code&gt; flag to the newly introduced attribute at the end of the JavaScript file :

[code lang=&quot;js&quot;]
tinymce.dom.Event.domLoaded = tinymce.isAjax;
[/code]

This way, TinyMCE calls its render phase directly when we call &lt;code&gt;init()&lt;/code&gt; on tinyMCE object. This call is done by Wicket when the dom is ready and then we finally got TinyMCE working even when coming from an ajax javascript inclusion. The only thing you need to do in order for this to work in deployment mode is to compress tiny_mce_src.js to tiny_mce.js with this patch.

You can find the resulting  &lt;code&gt;tiny_mce_src.js&lt;/code&gt; &lt;a href=&quot;http://gist.github.com/643272&quot;&gt;here&lt;/a&gt;.&lt;!--:--&gt;&lt;!--:fr--&gt;

You can checkout latest almost working release from &lt;a href=&quot;https://wicket-stuff.svn.sourceforge.net/svnroot/wicket-stuff/releases/wicketstuff-core-1.4-rc7/tinymce-parent&quot; target=&quot;_blank&quot;&gt;there&lt;/a&gt; by using the following command line :

[code lang=&quot;bash&quot; light=&quot;true&quot;] svn co https://wicket-stuff.svn.sourceforge.net/svnroot/wicket-stuff/releases/wicketstuff-core-1.4-rc7/tinymce-parent[/code]

Let me explain what problem I encountered, it happens only on isolated cases (ajax pushing the whole WYSIWYG shebang on a page without that mess). TinyMCE is then lost, and the only output you get when you try to call init() is &lt;code&gt;tinyMCE is undefined&lt;/code&gt; on your Javascript console. My first thought was to replace the outdated version bundled (3.1.0.1), so I headed to TinyMCE&#39;s website , downloaded latest version so far (3.3.9.2) and replaced it in my workspace. A try later and no luck, the problem is still here.

What&#39;s happening, why on hell this working component don&#39;t want to work anymore ? By digging into TinyMCE&#39;s code, you&#39;ll find that it looks for its baseURL, for lazy loading stuffs (depending on what you use), but Wicket responds to Ajax  headers contribution in a special way : instead of appending regular
&lt;code&gt;&amp;lt;script type=&#39;text/javascript&#39; src=&#39;myurltomyfile.js&#39;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;
it appends
&lt;code&gt;&amp;lt;script type=&#39;text/javascript&#39; src_=&#39;myurltomyfile.js&#39;&amp;gt;[content of myurltomyfile.js]&amp;lt;/script&amp;gt;&lt;/code&gt;
to the body of the document.

This particular way of answering to browser is not well handled by TinyMCE, which looks up its baseURL by parsing script tags present in the DOM. The hack to circumvent this is really simple, make TinyMCE find its baseURL by reacting on src_ attributes. The following listing shows the patch in &lt;code&gt;tiny_mce_src.js&lt;/code&gt; on the &lt;code&gt;getBase(n)&lt;/code&gt;method :

[code lang=&quot;js&quot; highlight=&quot;2,3,4,5&quot;]function getBase(n) {
    var src_ = n.getAttribute(&amp;quot;src_&amp;quot;);
    if (src_) {
        n.src = src_;
    }
   if (n.src &amp;amp;&amp;amp; /tiny_mce(|_gzip|_jquery|_prototype|_full)(_dev|_src)?.js/.test(n.src)) {
        if (/_(src|dev)\.js/g.test(n.src)) {
            t.suffix = &#39;_src&#39;;
        }
        if ((p = n.src.indexOf(&#39;?&#39;)) != -1) {
            t.query = n.src.substring(p + 1);
        }

        t.baseURL = n.src.substring(0, n.src.lastIndexOf(&#39;/&#39;));

        // If path to script is relative and a base href was found add that one infront
        // the src property will always be an absolute one on non IE browsers and IE 8
        // so this logic will basically only be executed on older IE versions
        if (base &amp;amp;&amp;amp; t.baseURL.indexOf(&#39;://&#39;) == -1 &amp;amp;&amp;amp; t.baseURL.indexOf(&#39;/&#39;) !== 0) {
            t.baseURL = base + t.baseURL;
        }
        return t.baseURL;
  }
  return null;
}[/code]

With this hack, console error yelling &lt;code&gt;tinyMCE is undefined&lt;/code&gt; is gone. No more error but the editor still does not work, TinyMCE waits for the document to be ready before calling its render phase. Let&#39;s fake it by flagging when we&#39;re coming from a Wicket Ajax request. We simply add an attribute to tinyMCE object : in the &lt;code&gt;_init()&lt;/code&gt; method

[code lang=&quot;js&quot;]
t.isAjax = false;
[/code]

We flag in the &lt;code&gt;getBase(n)&lt;/code&gt; when we come from Wicket Ajax (when we get something like &lt;code&gt;&amp;lt;script src_=&quot;&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;)

[code lang=&quot;js&quot; highlight=&quot;2&quot;]if (src_) {
    t.isAjax = true;
    n.src = src_;
}[/code]

and we set the &lt;code&gt;domLoaded&lt;/code&gt; flag to the newly introduced attribute at the end of the JavaScript file :

[code lang=&quot;js&quot;]
tinymce.dom.Event.domLoaded = tinymce.isAjax;
[/code]

This way, TinyMCE calls its render phase directly when we call &lt;code&gt;init()&lt;/code&gt; on tinyMCE object. This call is done by Wicket when the dom is ready and then we finally got TinyMCE working even when coming from an ajax javascript inclusion. The only thing you need to do in order for this to work in deployment mode is to compress tiny_mce_src.js to tiny_mce.js with this patch.

You can find the resulting  &lt;code&gt;tiny_mce_src.js&lt;/code&gt; &lt;a href=&quot;http://gist.github.com/643272&quot;&gt;here&lt;/a&gt;.&lt;!--:--&gt;
</content>
 </entry>
 
 
</feed>
